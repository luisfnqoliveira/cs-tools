{"version":3,"sources":["assets/images/Upitt_logo_400x400.jpg","components/Header.js","components/Footer.js","utilities/items.js","assets/images/bookCover.jpg","components/Book.js","components/BookStand.js","components/SingleBookCase.js","components/Bookshelf.js","components/Catalog.js","components/Bin.js","components/Storage.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["roles","label","value","Role","Group","options","onChange","this","props","role","optionType","buttonStyle","Component","Header","className","src","upittLogo","alt","style","color","onClick","clickOverview","Footer","ItemTypes","TweenOne","plugins","push","BezierPlugin","Book","Meta","Card","useDrag","type","item","code","name","collect","monitor","isDragging","drag","content","created_date","frequency","last_borrowed","bounce","y","repeat","yoyo","ease","easing","path","duration","appearTo","scaleX","scaleY","animationShow","bouncingBooks","some","book","flyingBooks","ref","count","title","mouseEnterDelay","hoverable","left","width","height","cover","bookcover","description","author","query","message","success","map","animation","bezier","vars","pointerEvents","BookStand","positionIntro","position","useDrop","accept","drop","dragHandler","level","isOver","bookstandRef","useRef","bookshelfDim","onWindowResize","_","updateDimension","current","Newbookstand","x","getBoundingClientRect","index","findIndex","stand","useEffect","console","log","updateBookshelfDim","window","addEventListener","removeEventListener","numOfLevels","numOfBooksPerLevel","showStepsInfo","document","event","preventDefault","books","Object","keys","length","constructor","placement","shelfBook","filter","location","i","SingleBookCase","levelIntro","bookstands","bookstandMarginTop","bookstandMarginLeft","bookcaseSize","bookcaseHeight","bookcaseWidth","bookstandMargin","marginTop","marginLeft","Bookshelf","bookcases","numOfBooks","dbclick","STORED_BOOK_KEY","Catalog","React","useState","setLocation","setLevel","setPosition","bin","setBin","show","found","retrievedBooksString","localStorage","getItem","JSON","parse","setItem","err","getStoredBooks","find","numOfBins","display","Bin","toBin","binId","binRef","storageDim","NewBin","updateStorageDim","binTitle","storageBook","trigger","from","justifySelf","Storage","state","bins","binBooks","getStoredSteps","retrievedStepsString","getStoredFaults","retrivedNumOfFaults","Main","newDim","setState","toLocation","toLevel","toPosition","is_empty","shelf_book","storedBooks","numOfShelfLevels","sessionStorage","storedBooksJson","stringify","catalogShow","handleToStudent","error","info","ondblclick","e","target","draggable","book_name","offsetParent","innerText","data","alert","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","reload","warning","catalogClose","showToLibrarianDialog","displayToLibrarianDialog","displayNoticeDialog","handleToLibrarian","displayMoveBookDialog","handleRoleChange","handleFinishDialog","handleClickSearch","min","max","bookObj","require","uniqid","Math","ceil","floor","random","storeBook","targetBook","targetBookBinNumber","handleFaultsIncrement","warn","handleUpload","files","fileReader","FileReader","readAsText","onload","result","steps","disableNext","pointer","handleClickUpload","hiddenFileInput","click","handleClickRecord","storedSteps","currentStep","storedStepsJson","handleInfiniteOnLoad","loading","hasMore","handleConfirm","undoStep","slice","onChangeLevelInput","onChangePositionInput","pageFaults","prevState","hideConfig","configVisible","handleConfigVisibleChange","createRef","handleClickNext","bind","handleClickPrevious","handleClickShowSteps","handleSelectChange","lib","isToggleOn","nextClicked","prevProps","prevStates","fileContent","dim","bookstand","currStep","nextStep","existingBook","newBook","getDimension","to","j","Option","Select","Container","fluid","Row","Col","disabled","href","encodeURIComponent","download","md","span","offset","placeholder","step","indexOf","onConfirm","okText","cancelText","aria-label","onKeyPress","key","onHide","handelCancel","textAlign","valueStyle","DndProvider","backend","HTML5Backend","visible","onVisibleChange","initialLoad","pageStart","loadMore","useWindow","dataSource","bordered","renderItem","Item","id","App","handleValueChange","showDrawer","onClose","closable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.560a6209.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Upitt_logo_400x400.8afe9141.jpg\";","import React, { Component } from 'react';\nimport upittLogo from '../assets/images/Upitt_logo_400x400.jpg';\nimport { Radio } from \"antd\";\nimport \"../styles/Header.css\";\nimport \"antd/dist/antd.css\";\n\nconst roles = [\n\t{ label: \"Student\", value: \"Student\" },\n\t{ label: \"Librarian\", value: \"Librarian\" }\n];\n\nclass Role extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Radio.Group\n\t\t\t\toptions={roles}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\tvalue={this.props.role}\n\t\t\t\toptionType=\"button\"\n\t\t\t\tbuttonStyle=\"solid\"\n\t\t\t/>\n\t\t);\n\t}\n}\n\nclass Header extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"App-header\" >\n\t\t\t\t<img src={upittLogo} alt='logo' className=\"App-logo\" />\n\t\t\t\t<p className=\"title\" >\n\t\t\t\t\tMemory Paging Practice System\n                </p>\n\t\t\t\t<div className=\"overview-button\">\n\t\t\t\t\t<a style={{color: \"white\"}} onClick={this.props.clickOverview}>Overview</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"role-button\">\n\t\t\t\t\t<Role role={this.props.role} onChange={this.props.onChange} />\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport \"../styles/Footer.css\"\n\nclass Footer extends Component {\n    render() {\n        return ( \n            <footer className = \"footer\" >\n            University of Pittsburgh \n            </footer>\n        );\n    }\n}\n\nexport default Footer;","export const ItemTypes = {\n    BOOK: 'book',\n  }","export default __webpack_public_path__ + \"static/media/bookCover.6a39f467.jpg\";","import React from 'react';\nimport { Card, Popover, Badge, message } from 'antd';\nimport bookcover from '../assets/images/bookCover.jpg';\nimport { ItemTypes } from '../utilities/items.js';\nimport { useDrag } from 'react-dnd';\n// import PropTypes from 'prop-types';\nimport TweenOne from 'rc-tween-one';\nimport BezierPlugin from 'rc-tween-one/lib/plugin/BezierPlugin';\nTweenOne.plugins.push(BezierPlugin);\n\nfunction Book(props) {\n    // console.log(\"render book\")\n    const { Meta } = Card;\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.BOOK,\n        item: {\n            code: props.code,\n            name: props.name,\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    }))\n\n    const content = (\n        <div>\n            <p>Created: {props.created_date}</p>\n            <p>Frequency: {props.frequency}</p>\n            <p>Last borrowed: {props.last_borrowed}</p>\n        </div>\n    );\n\n    const p0 = 'M0,100 L25,100 C34,20 40,0 100,0';\n    const p1 = 'M0,100 C5,120 25,130 25,100 C30,60 40,75 58,90 C69,98.5 83,99.5 100,100';\n    const ease0 = TweenOne.easing.path(p0);\n    const ease1 = TweenOne.easing.path(p1);\n\n    const bounce = [\n        {\n            y: -70,\n            repeat: 1,\n            yoyo: true,\n            ease: ease0,\n            duration: 500\n        },\n        {\n            appearTo: 0,\n            scaleX: 0,\n            scaleY: 2,\n            repeat: 1,\n            yoyo: true,\n            ease: ease1,\n            duration: 500,\n        }\n    ];\n\n    if (!props.animationShow) {\n        return (\n            <div ref={drag}>\n                <Badge count={props.frequency}>\n                    <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                        <Card\n                            hoverable\n                            style={{ left: 14, width: 70, height: 80, pointerEvents: 'auto' }}\n                            cover={<img alt=\"bookcover\" src={bookcover} />}\n                        >\n                            <Meta title={props.name}\n                                description={props.author}\n                                onClick={() => {\n                                    if (props.name === props.query)\n                                        message.success(\"You have successfully retrieved \" + props.name);\n                                }}\n                            />\n                        </Card>\n                    </Popover>\n                </Badge>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>\n                {(props.bouncingBooks.some(book => book.code === props.code) === false) &&\n                    (props.flyingBooks.some(book => book.code === props.code) === false) &&\n                    <div ref={drag}>\n                        <Badge count={props.frequency}>\n                            <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                                <Card\n                                    hoverable\n                                    style={{ left: 14, width: 70, height: 80 }}\n                                    cover={<img alt=\"bookcover\" src={bookcover} />}\n                                >\n                                    <Meta title={props.name}\n                                        description={props.author}\n                                        onClick={() => {\n                                            if (props.name === props.query)\n                                                message.success(\"You have successfully retrieved \" + props.name);\n                                        }}\n                                    />\n                                </Card>\n                            </Popover>\n                        </Badge>\n                    </div>\n                }\n                {props.bouncingBooks.map(book => {\n                    if (book.code === props.code) {\n                        return (\n                            <div ref={drag}>\n                                <TweenOne\n                                    animation={bounce}\n                                >\n                                    <Badge count={props.frequency}>\n                                        <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                                            <Card\n                                                hoverable\n                                                style={{ left: 14, width: 70, height: 80 }}\n                                                cover={<img alt=\"bookcover\" src={bookcover} />}\n                                            >\n                                                <Meta title={props.name}\n                                                    description={props.author}\n                                                    onClick={() => {\n                                                        if (props.name === props.query)\n                                                            message.success(\"You have successfully retrieved \" + props.name);\n                                                    }}\n                                                />\n                                            </Card>\n                                        </Popover>\n                                    </Badge>\n                                </TweenOne>\n                            </div>\n                        );\n                    }\n                })}\n                {props.flyingBooks.map(book => {\n                    if (book.code === props.code) {\n                        return (\n                            <div ref={drag}>\n                                <TweenOne\n                                    animation={{\n                                        bezier: {\n                                            type: 'thru',\n                                            vars: [book.bezier],\n                                        },\n                                        duration: 1500,\n                                    }}\n                                >\n                                    <Badge count={props.frequency}>\n                                        <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                                            <Card\n                                                hoverable\n                                                style={{ left: 14, width: 70, height: 80 }}\n                                                cover={<img alt=\"bookcover\" src={bookcover} />}\n                                            >\n                                                <Meta title={props.name}\n                                                    description={props.author}\n                                                    onClick={() => {\n                                                        if (props.name === props.query)\n                                                            message.success(\"You have successfully retrieved \" + props.name);\n                                                    }}\n                                                />\n                                            </Card>\n                                        </Popover>\n                                    </Badge>\n                                </TweenOne>\n                            </div>\n                        );\n                    }\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Book;","import React, { useRef, useEffect } from 'react';\nimport { Tooltip } from 'antd';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\nimport Book from './Book.js';\n\nfunction BookStand(props) {\n    // console.log(\"render bookstand\")\n    const positionIntro = \"Position \" + props.position;\n    const toShelf = 1;\n    const toBin = 0;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toShelf, toBin, props.level, props.position),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    const bookstandRef = useRef();\n    var bookshelfDim = props.bookshelfDim;\n\n    const onWindowResize = _ => {\n        updateDimension();\n    };\n\n    const updateDimension = () => {\n        if (bookstandRef.current) {\n            let Newbookstand = {\n                level: props.level,\n                position: props.position,\n                x: bookstandRef.current.getBoundingClientRect().x,\n                y: bookstandRef.current.getBoundingClientRect().y\n            };\n            let index = bookshelfDim.findIndex(stand => stand.level === props.level && stand.position === props.position)\n            if (index === -1) {\n                bookshelfDim.push(Newbookstand)\n            }\n            else {\n                bookshelfDim[index] = Newbookstand\n            }\n            return bookshelfDim;\n        }\n    }\n\n    // React.useLayoutEffect(() => {\n    //     setTimeout(() => console.log(inputRef.current.getBoundingClientRect()),\n    //         100\n    //     );\n    // });\n    useEffect(() => {\n        console.log(\"bookstand use effect\")\n        props.updateBookshelfDim(updateDimension())\n        window.addEventListener(\"resize\", onWindowResize, true);\n        return () => {\n            window.removeEventListener(\"resize\", onWindowResize, true);\n        };\n    }, [props.numOfLevels, props.numOfBooksPerLevel, props.showStepsInfo]);\n\n    document.addEventListener(\"drop\", function (event) {\n        event.preventDefault();\n    })\n\n    const books = props.books;\n    if (Object.keys(books).length === 0 && books.constructor === Object) {\n        return (\n            <Tooltip placement=\"bottom\" title={positionIntro}>\n                <div className=\"bookstand\">\n                </div>\n            </Tooltip>\n        );\n    }\n    else {\n        let shelfBook = books.filter(book => book.location === 1);\n        return (\n            <div ref={bookstandRef}>\n                <Tooltip placement=\"bottom\" title={positionIntro}>\n                    <div className=\"bookstand\" ref={drop}>\n                        {shelfBook.map(i => {\n                            if (i.level === props.level && i.position === props.position) {\n                                return (\n                                    <Book\n                                        key={i.code}\n                                        code={i.code}\n                                        name={i.name}\n                                        created_date={i.created_date}\n                                        frequency={i.frequency}\n                                        last_borrowed={i.last_borrowed}\n                                        animationShow={props.animationShow}\n                                        bouncingBooks={props.bouncingBooks}\n                                        flyingBooks={props.flyingBooks}\n                                    />\n                                )\n                            }\n                        })}\n                        {props.animationShow &&\n                            props.bouncingBooks.map(book => {\n                                let alreadyOnShelf = shelfBook.some(i => i.code === book.code)\n                                if (alreadyOnShelf === false && book.level === props.level && book.position === props.position) {\n                                    return (\n                                        <Book\n                                            key={book.code}\n                                            code={book.code}\n                                            name={book.name}\n                                            created_date={book.created_date}\n                                            frequency={book.frequency}\n                                            last_borrowed={book.last_borrowed}\n                                            animationShow={props.animationShow}\n                                            bouncingBooks={props.bouncingBooks}\n                                            flyingBooks={props.flyingBooks}\n                                        />\n                                    );\n                                }\n                            })}\n                    </div>\n                </Tooltip>\n            </div >\n        );\n    }\n}\n\nexport default BookStand;","import React, { Component } from 'react';\nimport { Tooltip } from 'antd';\nimport BookStand from './BookStand';\n\nclass SingleBookCase extends Component {\n\n    render() {\n        // console.log(\"render bookcase\")\n        const levelIntro = \"Level \" + this.props.level;\n        const { numOfBooksPerLevel } = this.props;\n        let bookstands = [];\n        for (let i = 0; i < numOfBooksPerLevel; i++) {\n            bookstands = [...bookstands, {\n                position: i + 1,\n                level: this.props.level,\n                books: this.props.books,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n\n        let bookcaseSize = {\n            height: this.props.bookcaseHeight,\n            width: this.props.bookcaseWidth,\n        }\n\n        return (\n            <Tooltip placement=\"leftTop\" title={levelIntro}>\n                <div className=\"bookcase\" style={bookcaseSize}>\n                    {\n                        bookstands.map(i => {\n                            let bookstandMargin = {\n                                marginTop: i.bookstandMarginTop,\n                                marginLeft: i.bookstandMarginLeft\n                            }\n                            return (\n                                <div className=\"single\" style={bookstandMargin}>\n                                    <BookStand\n                                        position={i.position}\n                                        key={i.position}\n                                        level={i.level}\n                                        books={i.books}\n                                        numOfLevels={this.props.numOfLevels}\n                                        numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                        bookcaseHeight={i.bookcaseHeight}\n                                        bookcaseWidth={i.bookcaseWidth}\n                                        bookstandMarginTop={i.bookstandMarginTop}\n                                        dragHandler={this.props.dragHandler}\n                                        animationShow={this.props.animationShow}\n                                        bouncingBooks={this.props.bouncingBooks}\n                                        flyingBooks={this.props.flyingBooks}\n                                        bookshelfDim={this.props.bookshelfDim}\n                                        updateBookshelfDim={this.props.updateBookshelfDim}\n                                        showStepsInfo={this.props.showStepsInfo}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SingleBookCase;","import React, { Component } from 'react';\nimport SingleBookCase from './SingleBookCase';\n\nclass Bookshelf extends Component {\n\n    render() {\n        console.log(\"render bookshelf\")\n        const { numOfLevels } = this.props;\n        const { numOfBooksPerLevel } = this.props;\n        let bookcases = [];\n        for (let i = 0; i < numOfLevels; i++) {\n            bookcases = [...bookcases, {\n                level: i + 1,\n                numOfBooks: numOfBooksPerLevel,\n                books: this.props.books,\n                bookcaseHeight: this.props.bookcaseHeight,\n                bookcaseWidth: this.props.bookcaseWidth,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n        return (\n            <div className=\"bookshelf\">\n                {/* <h5 class=\"text-center\"><strong>Bookshelf</strong></h5> */}\n                {\n                    bookcases.map(i => {\n                        return (\n                            <SingleBookCase level={i.level}\n                                key={i.level}\n                                numOfBooksPerLevel={i.numOfBooks}\n                                numOfLevels={this.props.numOfLevels}\n                                bookcaseHeight={i.bookcaseHeight}\n                                bookcaseWidth={i.bookcaseWidth}\n                                bookstandMarginTop={i.bookstandMarginTop}\n                                bookstandMarginLeft={i.bookstandMarginLeft}\n                                books={i.books}\n                                dragHandler={this.props.dragHandler}\n                                dbclick={this.props.dbclick}\n                                animationShow={this.props.animationShow}\n                                bouncingBooks={this.props.bouncingBooks}\n                                flyingBooks={this.props.flyingBooks}\n                                bookshelfDim={this.props.bookshelfDim}\n                                updateBookshelfDim={this.props.updateBookshelfDim}\n                                showStepsInfo={this.props.showStepsInfo}\n                            />\n                        )\n                    })\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Bookshelf;","import React from 'react';\n\nconst STORED_BOOK_KEY = 'STORED_BOOK_KEY';\n\nfunction getStoredBooks() {\n  try {\n    const retrievedBooksString = localStorage.getItem(STORED_BOOK_KEY);\n    if (!retrievedBooksString) {\n      localStorage.setItem(STORED_BOOK_KEY, \"[]\")\n      return [];\n    }\n    return JSON.parse(retrievedBooksString);\n  }\n  catch (err) {\n    localStorage.setItem(STORED_BOOK_KEY, '[]');\n    return [];\n  }\n}\n\nexport function Catalog(props) {\n  const [location, setLocation] = React.useState();\n  const [level, setLevel] = React.useState();\n  const [position, setPosition] = React.useState();\n  const [bin, setBin] = React.useState();\n\n  // when modal open\n  React.useEffect(() => {\n    if (props.show) {\n      const books = getStoredBooks();\n      const found = books.find(book => book.name === props.query);\n      if (found) {\n        setLocation(found.location);\n        setLevel(found.level);\n        setPosition(found.position);\n        setBin(found.bin);\n      }\n    }\n  }, [props.show, props.query, props.numOfBins]);\n\n  return (\n    <pre>\n      <u>Book Name</u>: {props.query}{\"\\n\"}\n      <u>Location</u>: {location === 0 ? 'storage' : location === 1 ? 'bookshelf' : ''}{\"\\n\"}\n      <div style={{ display: location === 0 ? 'block' : 'none'}}><u>Storage Bin</u>: {bin} </div>\n      <div style={{ display: location === 1 ? 'block' : 'none'}}><u>Level</u>: {level} </div> \n      <div style={{ display: location === 1 ? 'block' : 'none'}}><u>Position</u>: {position}</div>\n    </pre>\n  );\n}","import React, { useRef, useEffect } from 'react';\nimport { Popover, Tooltip } from 'antd';\nimport Book from './Book';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\n\nfunction Bin(props) {\n    // console.log(\"render bin\")\n    const toStorage = 0;\n    const toBin = props.binId;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toStorage, toBin, 0, 0),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    const binRef = useRef();\n    var storageDim = props.storageDim;\n\n    const onWindowResize = _ => {\n        updateDimension();\n    };\n\n    const updateDimension = () => {\n        if (binRef.current) {\n            let NewBin = {\n                binId: props.binId,\n                x: binRef.current.getBoundingClientRect().x,\n                y: binRef.current.getBoundingClientRect().y\n            };\n            let index = storageDim.findIndex(bin => bin.binId === props.binId)\n            if (index === -1) {\n                storageDim.push(NewBin)\n            }\n            else {\n                storageDim[index] = NewBin\n            }\n            return storageDim;\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"bin use effect\")\n        props.updateStorageDim(updateDimension())\n        window.addEventListener(\"resize\", onWindowResize, true);\n        return () => {\n            window.removeEventListener(\"resize\", onWindowResize, true);\n        };\n    }, [props.numOfLevels, props.numOfBooksPerLevel, props.showStepsInfo]);\n\n    var content = (<div className=\"book-container\"></div>);\n    const binTitle = \"Bin \" + props.binId;\n    if (Object.keys(props.books).length === 0 && props.books.constructor === Object) {\n\n    } else {\n        // TODO: not only for location == 0, also need to seperate them by different bins\n        let storageBook = props.books.filter(book => book.location === 0);\n        if (!props.animationShow) {\n            content = (\n                <div className=\"book-container\">\n                    {\n                        storageBook.map(i => {\n                            return (\n                                <div className='book-align-block'>\n                                    <Book\n                                        key={i.code}\n                                        code={i.code}\n                                        name={i.name}\n                                        // author={i.author}\n                                        location={i.location}\n                                        level={i.level}\n                                        position={i.position}\n                                        created_date={i.created_date}\n                                        frequency={i.frequency}\n                                        last_borrowed={i.last_borrowed}\n                                        animationShow={props.animationShow}\n                                        bouncingBooks={props.bouncingBooks}\n                                        flyingBooks={props.flyingBooks}\n                                    />\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            );\n        }\n        else {\n            content = (\n                <div className=\"book-container\">\n                    {\n                        storageBook.map(i => {\n                            let alreadyOnBin = props.flyingBooks.some(book => book.code === i.code)\n                            if (alreadyOnBin === false) {\n                                return (\n                                    <div className='book-align-block'>\n                                        <Book\n                                            key={i.code}\n                                            code={i.code}\n                                            name={i.name}\n                                            // author={i.author}\n                                            location={i.location}\n                                            level={i.level}\n                                            position={i.position}\n                                            created_date={i.created_date}\n                                            frequency={i.frequency}\n                                            last_borrowed={i.last_borrowed}\n                                            animationShow={props.animationShow}\n                                            bouncingBooks={props.bouncingBooks}\n                                            flyingBooks={props.flyingBooks}\n                                        />\n                                    </div>\n                                );\n                            }\n                        })\n                    }\n                </div>\n            );\n        }\n    }\n    return (\n        <Tooltip placement=\"top\" title={binTitle}>\n            <Popover content={content} placement=\"top\" title={binTitle} trigger=\"click\">\n                <div className=\"bin\" ref={binRef}>\n                    <div className=\"bin\" ref={drop}>\n                        {props.animationShow &&\n                            props.flyingBooks.map(i => {\n                                if (i.from.bin === props.binId) {\n                                    return (\n                                        <div style={{\n                                            justifySelf: 'left',\n                                            // pointerEvents: 'auto',\n                                        }}>\n                                            <Book\n                                                key={i.code}\n                                                code={i.code}\n                                                name={i.name}\n                                                // author={i.author}\n                                                location={i.location}\n                                                level={i.level}\n                                                position={i.position}\n                                                created_date={i.created_date}\n                                                frequency={i.frequency}\n                                                last_borrowed={i.last_borrowed}\n                                                animationShow={props.animationShow}\n                                                bouncingBooks={props.bouncingBooks}\n                                                flyingBooks={props.flyingBooks}\n                                            />\n                                        </div>\n                                    );\n                                }\n\n                            })}\n                    </div>\n                </div>\n            </Popover>\n        </Tooltip>\n    );\n}\n\nexport default Bin;","import React, { Component } from 'react';\nimport Bin from './Bin';\nimport TweenOne from 'rc-tween-one';\nimport { Card, Popover, Badge, message } from 'antd';\nimport bookcover from '../assets/images/bookCover.jpg';\nimport BezierPlugin from 'rc-tween-one/lib/plugin/BezierPlugin';\nTweenOne.plugins.push(BezierPlugin);\n\nclass Storage extends Component {\n    state = {\n\n    }\n\n    render() {\n        // console.log(\"render storage\")\n        const { Meta } = Card;\n        const p0 = 'M0,100 L25,100 C34,20 40,0 100,0';\n        const p1 = 'M0,100 C5,120 25,130 25,100 C30,60 40,75 58,90 C69,98.5 83,99.5 100,100';\n        const ease0 = TweenOne.easing.path(p0);\n        const ease1 = TweenOne.easing.path(p1);\n\n        const bounce = [\n            {\n                // repeatDelay: 300,\n                y: -70,\n                repeat: 1,\n                yoyo: true,\n                ease: ease0,\n                duration: 500\n            },\n            {\n                // repeatDelay: 300,\n                appearTo: 0,\n                scaleX: 0,\n                scaleY: 2,\n                repeat: 1,\n                yoyo: true,\n                ease: ease1,\n                duration: 500,\n            }\n        ];\n        const { numOfBins } = this.props;\n        const { books } = this.props;\n        let bins = [];\n        // check if books array is empty\n        if (Object.keys(this.props.books).length === 0 && this.props.books.constructor === Object) {\n            for (let i = 0; i < numOfBins; i++) {\n                bins = [...bins, {\n                    binId: i + 1,\n                    // do we need to limit number of books in each bin? \n\n                    // filter books in different bins, still need to check\n                    books: [],\n                }];\n            }\n        } else {\n            for (let i = 0; i < numOfBins; i++) {\n                const binBooks = books.filter(book => book.bin === i + 1);\n                bins = [...bins, {\n                    binId: i + 1,\n                    // do we need to limit number of books in each bin? \n\n                    // filter books in different bins, still need to check\n                    books: binBooks,\n                }];\n            }\n        }\n\n        if (!this.props.animationShow) {\n            return (\n                <div className=\"storage\">\n                    <h5><strong>Book Storage</strong></h5>\n                    {\n                        bins.map(i => {\n                            return (\n                                <Bin\n                                    binId={i.binId}\n                                    key={i.binId}\n                                    books={i.books}\n                                    dragHandler={this.props.dragHandler}\n                                    animationShow={this.props.animationShow}\n                                    bouncingBooks={this.props.bouncingBooks}\n                                    flyingBooks={this.props.flyingBooks}\n                                    storageDim={this.props.storageDim}\n                                    updateStorageDim={this.props.updateStorageDim}\n                                    showStepsInfo={this.props.showStepsInfo}\n                                    numOfLevels={this.props.numOfLevels}\n                                    numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                />\n                            )\n                        })\n                    }\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"storage\">\n                    <h5><strong>Book Storage</strong></h5>\n                    {\n                        bins.map(i => {\n                            if (this.props.bouncingBooks.some(book => book.bin === i.binId)) {\n                                return (\n                                    <TweenOne animation={bounce}>\n                                        <Bin\n                                            binId={i.binId}\n                                            key={i.binId}\n                                            books={i.books}\n                                            dragHandler={this.props.dragHandler}\n                                            animationShow={this.props.animationShow}\n                                            bouncingBooks={this.props.bouncingBooks}\n                                            flyingBooks={this.props.flyingBooks}\n                                            storageDim={this.props.storageDim}\n                                            updateStorageDim={this.props.updateStorageDim}\n                                            showStepsInfo={this.props.showStepsInfo}\n                                            numOfLevels={this.props.numOfLevels}\n                                            numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                        />\n                                    </TweenOne>\n                                );\n                            }\n                            else {\n                                return (\n                                    <Bin\n                                        binId={i.binId}\n                                        key={i.binId}\n                                        books={i.books}\n                                        dragHandler={this.props.dragHandler}\n                                        animationShow={this.props.animationShow}\n                                        bouncingBooks={this.props.bouncingBooks}\n                                        flyingBooks={this.props.flyingBooks}\n                                        storageDim={this.props.storageDim}\n                                        updateStorageDim={this.props.updateStorageDim}\n                                        showStepsInfo={this.props.showStepsInfo}\n                                        numOfLevels={this.props.numOfLevels}\n                                        numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                    />\n                                )\n                            }\n                        })\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default Storage;","import React, { Component } from 'react';\nimport Bookshelf from './Bookshelf';\nimport \"../styles/Main.css\";\nimport \"antd/dist/antd.css\";\nimport Container from 'react-bootstrap/Container';\nimport '../App.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Catalog } from './Catalog.js';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Storage from './Storage';\nimport { message, Button, List, Tooltip, Select, Popconfirm, InputNumber, Statistic, Card, Popover } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nfunction getStoredBooks() {\n    try {\n        const retrievedBooksString = localStorage.getItem('STORED_BOOK_KEY');\n        if (!retrievedBooksString) {\n            localStorage.setItem('STORED_BOOK_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedBooksString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredSteps() {\n    try {\n        const retrievedStepsString = localStorage.getItem('STORED_STEP_KEY');\n        if (!retrievedStepsString) {\n            localStorage.setItem('STORED_STEP_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedStepsString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredFaults() {\n    try {\n        const retrivedNumOfFaults = localStorage.getItem('STORED_FAULTS_KEY');\n        if (!retrivedNumOfFaults) {\n            localStorage.setItem('STORED_FAULTS_KEY', 0)\n            return 0;\n        }\n        return JSON.parse(retrivedNumOfFaults);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction storeBook(name, numOfBins) {\n    console.log('storing book', name);\n    const today = new Date();\n    const storedBooks = getStoredBooks();\n    const found = storedBooks.find(book => {\n        return book.name === name;\n    })\n    if (found) {\n        sessionStorage.setItem('STORED_BOOK_KEY', name);\n    } else {\n        // store the book\n        var uniqid = require('uniqid');\n        const bookObj = {\n            code: uniqid(),\n            name: name,\n            location: 0,\n            bin: getRandomIntInclusive(1, numOfBins),  // store to bin randomly\n            level: 0,\n            position: 0,\n            created_date: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds(),\n            frequency: 0,\n            last_borrowed: 0,\n        };\n        storedBooks.push(bookObj);\n        const storedBooksJson = JSON.stringify(storedBooks);\n        localStorage.setItem('STORED_BOOK_KEY', storedBooksJson);\n    }\n}\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.hiddenFileInput = React.createRef();\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickPrevious = this.handleClickPrevious.bind(this);\n        this.handleClickShowSteps = this.handleClickShowSteps.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleFaultsIncrement = this.handleFaultsIncrement.bind(this);\n        this.handleClickSearch = this.handleClickSearch.bind(this);\n        this.state = {\n            role: this.props.role,\n            value: '',\n            lib: [],\n            catalogShow: false,\n            numOfShelfLevels: 5,\n            numOfBooksPerLevel: 3,\n            bookcaseHeight: '120px',\n            bookcaseWidth: '340px',\n            bookstandMarginTop: '30px',\n            bookstandMarginLeft: '5px',\n            numOfBins: 4,\n            books: getStoredBooks(), // location: 0-storage; 1-bookshelf\n            query: '',\n            error: 0,\n            steps: getStoredSteps(),\n            files: \"\",\n            pointer: 0,\n            isToggleOn: false,\n            display: 'none',\n            disableNext: true,\n            loading: false,\n            hasMore: true,\n            undoStep: null,\n            pageFaults: getStoredFaults(),\n            animationShow: false,\n            bouncingBooks: [],\n            flyingBooks: [],\n            nextClicked: false,\n            configVisible: false,\n            displayToLibrarianDialog: 'none',\n            displayMoveBookDialog: 'none',\n            displayNoticeDialog: 'none',\n            targetBookBinNumber: 0,\n            bookshelfDim: [],\n            storageDim: [],\n        }\n    }\n\n    updateBookshelfDim = (newDim) => {\n        this.setState(() => ({\n            bookshelfDim: newDim\n        }), function () {\n        })\n    }\n\n    updateStorageDim = (newDim) => {\n        this.setState(() => ({\n            storageDim: newDim\n        }), function () {\n        })\n    }\n\n    dragHandler = (item, toLocation, toBin, toLevel, toPosition) => {\n        // let booksCopy = [...this.state.books];\n        // console.log(this.state.books)\n        // let bookDragged = booksCopy.filter(book => book.code === item.code);\n        // if (bookDragged.length > 0){\n        //     console.log(bookDragged)\n        //     let index = booksCopy.indexOf(bookDragged[0]);\n        //     bookDragged[0].location = toLocation;\n        //     bookDragged[0].bin = toBin;\n        //     bookDragged[0].level = toLevel;\n        //     bookDragged[0].position = toPosition;\n        //     booksCopy[index] = bookDragged[0];\n        //     this.setState({ books: booksCopy });\n        // }\n\n        var is_empty = 0;\n        var shelf_book = 1;\n        var storedBooks = getStoredBooks();\n        for (var i = 0; i < storedBooks.length; i++) {\n            if (storedBooks[i].name !== item.name && toLocation === 1) {\n                if (storedBooks[i].level === toLevel && storedBooks[i].position === toPosition) {\n                    is_empty = 1;\n                }\n            }\n\n            if (storedBooks[i].location === 1) {\n                shelf_book += 1;\n            }\n        }\n\n        if (toLocation === 1 && shelf_book > this.state.numOfShelfLevels * this.state.numOfBooksPerLevel) {\n            is_empty = 2;\n        }\n\n        if (is_empty === 0) {\n            for (i = 0; i < storedBooks.length; i++) {\n                if (storedBooks[i].code === item.code) {\n                    if (storedBooks[i].location === 0 && toLocation === 1) {\n                        // var today = new Date();\n                        // storedBooks[i].created_date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n                        sessionStorage.setItem(\"STORED_BOOK_KEY\", item.name);\n                    }\n                    storedBooks[i].name = item.name;\n                    storedBooks[i].location = toLocation;\n                    storedBooks[i].bin = toBin;\n                    storedBooks[i].level = toLevel;\n                    storedBooks[i].position = toPosition\n                }\n                var storedBooksJson = JSON.stringify(storedBooks);\n                localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                this.setState({ catalogShow: true })\n            }\n            if (toLocation === 1) {\n                if (item.name === this.state.value) {\n                    this.handleToStudent();\n                } else {\n                    message.error(\"Moved a wrong book! Please move \"+ this.state.value + \" again!\");\n                }\n            }\n        }\n        else if (is_empty === 1) {\n            message.error(\"A book already exists on this position. Please choose another position as a librarian again!\");\n            this.setState({ error: 1 });\n        }\n        else {\n            message.error(\"The bookshelf is full. Please remove a book from the shelf to storage bin before adding another book to the shelf.\", 15);\n            message.info(\"You can remove the book with least frequency.\", 15);\n            this.setState({ error: 1 });\n        }\n\n        this.setState({ animationShow: false })\n    }\n\n    dbclick = () => {\n        document.ondblclick = DoubleClick;\n        function DoubleClick(e) {\n            if (e.target.draggable === true) {\n                let book_name = e.target.offsetParent.innerText;\n                let data = sessionStorage.getItem('STORED_BOOK_KEY');\n\n                if (data === book_name) {\n                    alert(\"You have successfully retrieved \" + data);\n\n                    var storedBooks = getStoredBooks();\n                    var today = new Date();\n                    for (var i = 0; i < storedBooks.length; i++) {\n                        if (storedBooks[i].name === data) {\n                            storedBooks[i].frequency += 1;\n                            // this.updateFrequency(storedBooks[i].frequency);\n                            storedBooks[i].last_borrowed = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n                        }\n                        var storedBooksJson = JSON.stringify(storedBooks);\n                        localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                    }\n                    sessionStorage.setItem('STORED_BOOK_KEY', '');\n                    window.location.reload();\n                }\n                else {\n                    message.warning(\"Please choose again\");\n                }\n            }\n        }\n    }\n\n    catalogClose = () => this.setState({ catalogShow: false });\n\n    componentDidUpdate(prevProps, prevStates) {\n        if (this.state.error !== prevStates.error) {\n            this.setState({\n                books: getStoredBooks(),\n            });\n            this.setState({ error: 0 });\n        }\n\n        if (this.state.catalogShow !== prevStates.catalogShow) {\n            this.setState({\n                books: getStoredBooks(),\n            });\n            this.catalogClose();\n        }\n    }\n\n    showToLibrarianDialog = () => {\n        this.setState({\n            displayToLibrarianDialog: 'block',\n            displayNoticeDialog: 'none'\n        })\n    }\n\n    handleToLibrarian = () => {\n        this.setState({\n            displayToLibrarianDialog: 'none',\n            displayMoveBookDialog: 'block'\n        })\n        this.props.handleRoleChange(\"Librarian\");\n\n    }\n\n    handleToStudent = () => {\n        // TODO: check if the dragged book is the book you search\n\n        this.setState({\n            displayMoveBookDialog: 'none',\n            displayNoticeDialog: 'block'\n        })\n        this.props.handleRoleChange(\"Student\");\n    }\n\n    handleFinishDialog = () => {\n        this.setState({\n            displayNoticeDialog: 'none'\n        })\n    }\n\n    handleClickSearch = () => {\n        if (!this.state.query) {\n            alert('Please input a name!');\n        } else {\n            // let books = getStoredBooks();\n            // let targetBook = books.find(book => book.name === this.state.query)\n            // if (targetBook){\n            //     this.setState({ catalogShow: true, value: this.state.query })\n            //     if (targetBook.location === 0) {\n            //         message.info(\"The librarian is preparing the book.\");\n            //         message.info(\"Please move \" + this.state.query + \" from storage bin to bookshelf.\");\n            //         this.props.handleRoleChange(\"Librarian\");\n            //         this.handleFaultsIncrement();\n            //     }\n            //     if (targetBook.location === 1) {\n            //         message.info(\"You can now retrieve the book on level \" + targetBook.level + \" and position \" + targetBook.position);\n            //         message.warn(\"Please double click on the book to retrieve\");\n            //     }\n            // }\n            // else {\n            //     storeBook(this.state.query, this.state.numOfBins);\n            //     this.setState({ catalogShow: true, value: this.state.query })\n            //     books = getStoredBooks()\n            // }\n            storeBook(this.state.query, this.state.numOfBins);\n            this.setState({ catalogShow: true, value: this.state.query })\n            let books = getStoredBooks()\n            let targetBook = books.find(book => book.name === this.state.query)\n            if (targetBook) {\n                if (targetBook.location === 0) {\n                    // message.info(\"The librarian is preparing the book.\");\n                    this.showToLibrarianDialog();\n                    this.setState({ targetBookBinNumber: targetBook.bin });\n                    // message.info(\"Please move \" + this.state.query + \" from storage bin to bookshelf.\");\n                    this.handleFaultsIncrement();\n                }\n                if (targetBook.location === 1) {\n                    this.setState({ displayNoticeDialog: 'block' });\n                    // message.info(\"You can now retrieve the book on level \" + targetBook.level + \" and position \" + targetBook.position);\n                    message.warn(\"Please double click on the book to retrieve\");\n                }\n            }\n        }\n        this.setState({ animationShow: false })\n    }\n\n    handleUpload = e => {\n        /* To do: upload error handling */\n        if (e.target.files[0]) {\n            const fileReader = new FileReader();\n            fileReader.readAsText(e.target.files[0], \"UTF-8\");\n            fileReader.onload = e => {\n                // check empty array; todo: check format\n                if ((JSON.parse(e.target.result).length > 0)) {\n                    this.setState({\n                        files: JSON.parse(e.target.result),\n                        books: JSON.parse(e.target.result)[0],\n                        steps: JSON.parse(e.target.result),\n                        disableNext: false,\n                        pointer: 0,\n                        flyingBooks: [],\n                        bouncingBooks: []\n                    });\n                    localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(JSON.parse(e.target.result)[0]))\n                    localStorage.setItem('STORED_STEP_KEY', JSON.stringify(JSON.parse(e.target.result)))\n                    message.success(\"The Json file has uploaded successfully!\")\n\n                    this.setState({\n                        animationShow: true,\n                        bouncingBooks: JSON.parse(e.target.result)[0]\n                    })\n                    // let firstStep = JSON.parse(e.target.result)[0]\n                    // if (firstStep && firstStep.length !== 0) {\n                    //     firstStep.map(book => {\n                    //         if (book.location === 0) {\n                    //             // storage\n                    //         }\n                    //         if (book.location === 1) {\n                    //             // bookshelf\n                    //         }\n                    //     })\n                    // }\n                }\n                else {\n                    message.error(\"There is something wrong with your file. Please try again!\")\n                }\n            };\n        }\n    };\n\n    handleClickUpload = e => {\n        this.hiddenFileInput.current.click();\n    }\n\n    handleClickRecord = () => {\n        const storedSteps = getStoredSteps();\n        var currentStep = this.state.books;\n        if (JSON.stringify(storedSteps[storedSteps.length - 1]) === JSON.stringify(currentStep)) {\n            console.log(\"Duplicate step\")\n            message.error(\"Duplicate step\")\n        }\n        else {\n            console.log(\"Step added\");\n            message.success(\"Step added\")\n            storedSteps.push(currentStep);\n        }\n        const storedStepsJson = JSON.stringify(storedSteps);\n        localStorage.setItem('STORED_STEP_KEY', storedStepsJson);\n        this.setState({ steps: storedSteps });\n    }\n\n    handleClickPrevious() {\n        const fileContent = this.state.files;\n        if (fileContent && this.state.pointer > 0) {\n            this.setState((prevState) => ({\n                pointer: prevState.pointer - 1,\n                disableNext: false,\n                animationShow: false,\n                bouncingBooks: [],\n            }), function () {\n                this.setState({ books: fileContent[this.state.pointer] })\n                localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer]))\n                message.success(\"Previous clicked! You are at step \" + (this.state.pointer + 1))\n            });\n        }\n    }\n\n    getDimension(level, position, binId) {\n        const bookshelfDim = this.state.bookshelfDim;\n        const storageDim = this.state.storageDim;\n        let dim = [];\n        if (level !== 0 && position !== 0) {\n            dim = bookshelfDim.find(bookstand => bookstand.level === level && bookstand.position === position)\n            if (dim) {\n                return ({ x: dim.x, y: dim.y })\n            }\n        }\n        if (binId !== 0) {\n            dim = storageDim.find(bin => bin.binId === binId)\n            if (dim) {\n                return ({ x: dim.x, y: dim.y })\n            }\n        }\n    }\n\n    handleClickNext() {\n        const fileContent = this.state.files;\n        if (fileContent && this.state.pointer < fileContent.length - 1) {\n            let currStep = fileContent[this.state.pointer]\n            let nextStep = fileContent[this.state.pointer + 1]\n            let existingBook = []\n            let newBook = []\n            for (let i = 0; i < currStep.length; i++) {\n                // compare existing book location\n                if (currStep[i].code === nextStep[i].code &&\n                    (currStep[i].level !== nextStep[i].level ||\n                        currStep[i].position !== nextStep[i].position ||\n                        currStep[i].bin !== nextStep[i].bin)) {\n                    if (currStep[i].location === 1 &&\n                        nextStep[i].location === 0) {\n                        let from = this.getDimension(currStep[i].level, currStep[i].position, 0)\n                        let to = this.getDimension(0, 0, nextStep[i].bin)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                    if (currStep[i].location === 0 &&\n                        nextStep[i].location === 1) {\n                        let from = this.getDimension(0, 0, currStep[i].bin)\n                        let to = this.getDimension(nextStep[i].level, nextStep[i].position, 0)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                    if (currStep[i].location === 1 &&\n                        nextStep[i].location === 1) {\n                        let from = this.getDimension(currStep[i].level, currStep[i].position, 0)\n                        let to = this.getDimension(nextStep[i].level, nextStep[i].position, 0)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                    if (currStep[i].location === 0 &&\n                        nextStep[i].location === 0) {\n                        let from = this.getDimension(0, 0, currStep[i].bin)\n                        let to = this.getDimension(0, 0, nextStep[i].bin)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                }\n                // this.setState({ bouncingBooks: [] })\n            }\n\n            if (nextStep.length > currStep.length) {\n                // handling new added book\n                for (let j = currStep.length; j < nextStep.length; j++) {\n                    newBook.push(nextStep[j])\n                }\n                // this.setState({\n                //     bouncingBooks: newBook,\n                //     animationShow: true,\n                // })\n            }\n\n            this.setState({\n                flyingBooks: existingBook,\n                bouncingBooks: newBook,\n                animationShow: true,\n                pointer: this.state.pointer + 1,\n                books: fileContent[this.state.pointer]\n            })\n            localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer + 1]))\n            message.success(\"Next clicked! You are at step \" + (this.state.pointer + 2))\n\n            // this.setState((prevState) => ({\n            //     pointer: prevState.pointer + 1,\n            //     // flyingBooks: existingBook,\n            //     // bouncingBooks: newBook,\n            //     // animationShow: true,\n            // }), function () {\n            //     this.setState({ books: fileContent[this.state.pointer] })\n            //     localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer]))\n            //     message.success(\"Next clicked! You are at step \" + (this.state.pointer + 1))\n            // });\n        }\n        if (this.state.pointer >= fileContent.length - 2) {\n            this.setState((prevState) => ({\n                disableNext: !prevState.disableNext\n            }))\n        }\n    }\n\n    handleClickShowSteps() {\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn,\n            display: prevState.isToggleOn ? 'none' : 'block'\n        }));\n    }\n\n    handleInfiniteOnLoad = () => {\n        let { steps } = this.state;\n        this.setState({\n            loading: true,\n        });\n        if (steps.length > 15) {\n            message.warning('Infinite List loaded all');\n            this.setState({\n                hasMore: false,\n                loading: false,\n            });\n            return;\n        }\n    }\n    handleSelectChange(value) {\n        console.log(`selected ${value}`);\n        this.setState({ undoStep: value })\n    }\n\n    handleConfirm = () => {\n        if (this.state.undoStep !== null && this.state.undoStep > 1) {\n            this.setState({\n                steps: this.state.steps.slice(0, this.state.undoStep - 1),\n                books: this.state.steps[this.state.undoStep - 2]\n            })\n            localStorage.setItem('STORED_STEP_KEY', JSON.stringify(this.state.steps.slice(0, this.state.undoStep - 1)))\n            localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(this.state.steps[this.state.undoStep - 2]))\n            message.success('Step ' + this.state.undoStep + ' and all the following steps have been removed. Now you can redo the recording from there.');\n        }\n        else if (this.state.undoStep === 1) {\n            this.setState({\n                steps: [],\n                books: []\n            })\n            localStorage.setItem('STORED_STEP_KEY', '[]')\n            localStorage.setItem('STORED_BOOK_KEY', '[]')\n        }\n        else {\n            message.error('Step value cannot be empty! Please try again to select a step.');\n        }\n\n    };\n\n    onChangeLevelInput = value => {\n        this.setState({\n            numOfShelfLevels: value,\n        });\n    };\n\n    onChangePositionInput = value => {\n        if (value === 4) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '165px',\n                bookcaseWidth: '475px',\n                bookstandMarginTop: '60px'\n            });\n        } else if (value === 5) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '200px',\n                bookcaseWidth: '567px',\n                bookstandMarginTop: '90px',\n                bookstandMarginLeft: '3px',\n            });\n        } else {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '120px',\n                bookcaseWidth: '340px',\n                bookstandMarginTop: '30px',\n                bookstandMarginLeft: '5px',\n            });\n        }\n    };\n    handleFaultsIncrement = () => {\n        localStorage.setItem('STORED_FAULTS_KEY', this.state.pageFaults + 1);\n        this.setState((prevState) => ({\n            pageFaults: prevState.pageFaults + 1,\n        }))\n    };\n\n    hideConfig = () => {\n        this.setState({\n            configVisible: false,\n        });\n    };\n\n    handleConfigVisibleChange = configVisible => {\n        this.setState({ configVisible });\n    };\n\n    handleCancel() {\n        this.setState({\n            displayToLibrarianDialog: 'none'\n        })\n    }\n\n    render() {\n        const role = this.props.role;\n        const { Option } = Select;\n\n        return (\n            <div className=\"main\" >\n                <Container fluid=\"xxl\">\n                    <Row>\n                        <Col>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickPrevious}\n                                disabled={this.state.pointer === 0 ? true : false}>\n                                Previous\n                            </Button>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickUpload}>\n                                Upload Json\n                            </Button>\n                            <input type=\"file\"\n                                ref={this.hiddenFileInput}\n                                onChange={this.handleUpload}\n                                style={{ display: 'none' }}\n                            />\n                            <Button type=\"primary\"\n                                onClick={this.handleClickNext}\n                                disabled={this.state.disableNext}>\n                                Next\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                type=\"primary\"\n                                href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                                    JSON.stringify(this.state.steps)\n                                    // JSON.stringify(JSON.parse(localStorage.getItem(`STORED_STEP_KEY`)))\n                                )}`}\n                                download=\"steps.json\"\n                            >\n                                Download Json\n                            </Button>\n                            <Tooltip placement=\"bottom\" title=\"Have any confusion? Check user manual from overview button.\">\n                                <Button type=\"primary\" onClick={this.handleClickRecord}>Record Step</Button>\n                            </Tooltip>\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_STEP_KEY\", \"[]\");\n                                this.setState({ steps: [], files: \"\", pointer: 0 })\n                            }}>Clear all Steps</Button>\n                        </Col>\n                        <Col>\n                            {/* Reset Library */}\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_BOOK_KEY\", \"[]\");\n                                localStorage.setItem(\"STORED_FAULTS_KEY\", 0);\n                                this.setState({\n                                    books: [],\n                                    pageFaults: 0,\n                                });\n                                // this.setState({catalogShow: true})\n                                this.props.handleRoleChange(\"Student\");\n                            }}>Reset Library</Button>\n                            <Button type=\"primary\" onClick={this.handleClickShowSteps}>\n                                {this.state.isToggleOn ? 'Hide Steps Info' : 'Show Steps Info'}\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 6, offset: 3 }}>\n                            <Select placeholder=\"Select a step\" style={{ width: 120 }} onChange={this.handleSelectChange}>\n                                {this.state.steps.map(step => (\n                                    <Option value={this.state.steps.indexOf(step) + 1}>{this.state.steps.indexOf(step) + 1}</Option>\n                                ))}\n                            </Select>\n                            <Popconfirm\n                                title={\"Are you sure to undo step \" + this.state.undoStep + \" and all the following steps?\"}\n                                onConfirm={this.handleConfirm}\n                                okText=\"Yes\"\n                                cancelText=\"No\">\n                                <Button>Undo</Button>\n                            </Popconfirm>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h5 className=\"computer-title\"><strong>Catalog Computer</strong></h5>\n                            <div className={(role === \"Librarian\") ? \"wrapper\" : \"\"}>\n                                <div className={(role === \"Librarian\") ? \"is-disabled\" : \"\"}>\n                                    <div className=\"search-monitor\">\n                                        <div className=\"search-container\">\n                                            <Row>\n                                                Please Search for any Book\n                                            </Row>\n                                            <Row>\n                                                <div className=\"form-inline mt-4 mb-4\" >\n                                                    <input className=\"form-control-sm\" type=\"text\" placeholder=\"Find a Book\" aria-label=\"Search\"\n                                                        value={this.state.query}\n                                                        onClick={event => {\n                                                            message.info(\"You can enter any book you want\")\n                                                        }}\n                                                        onChange={event => this.setState({ query: event.target.value })}\n                                                        onKeyPress={event => {\n                                                            if (event.key === 'Enter') {\n                                                                this.handleClickSearch()\n                                                            }\n                                                        }} />\n                                                    <Button type=\"primary\" onClick={this.handleClickSearch}>Search</Button>\n                                                </div>\n                                            </Row>\n                                            <Row>\n                                                <strong>Catalog Card</strong>\n                                            </Row>\n                                            <Row>\n                                                <Catalog\n                                                    query={this.state.value}\n                                                    show={this.state.catalogShow}\n                                                    onHide={this.catalogClose}\n                                                    numOfBins={this.state.numOfBins}\n                                                    handleRoleChange={this.props.handleRoleChange}\n                                                />\n                                            </Row>\n                                            <Row>\n                                                <div style={{ display: this.state.displayToLibrarianDialog }}>\n                                                    <p>Sorry, the book is not available now. You need to wait for librarian to retrieve the book from storage.</p>\n                                                    <Button type=\"primary\" onClick={this.handelCancel}>Cancel</Button>\n                                                    <Button type=\"primary\" onClick={this.handleToLibrarian}>Accept</Button>\n                                                </div>\n                                                <div style={{ display: this.state.displayNoticeDialog }}>\n                                                    <p>The book is available! You can retrieve the book based on the catalog card.</p>\n                                                    <Button type=\"primary\" onClick={this.handleFinishDialog}>Got it!</Button>\n                                                </div>\n                                            </Row>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pageFaults\">\n                                    <Card\n                                        style={{\n                                            width: 320,\n                                            height: 115,\n                                            marginTop: 25,\n                                            textAlign: 'center'\n                                        }}>\n                                        <Statistic\n                                            title=\"Page Faults\"\n                                            value={this.state.pageFaults}\n                                            valueStyle={{ color: '#cf1322' }}\n                                        />\n                                    </Card>\n                                </div>\n                            </div>\n                        </Col>\n                        <DndProvider backend={HTML5Backend}>\n                            <Col className=\"bookshelf-view\">\n                                <h5 className=\"computer-title\">\n                                    <strong>Bookshelf</strong>\n                                    <Popover\n                                        content={\n                                            <div>\n                                                <p><strong>Number of levels:</strong>  <InputNumber min={1} max={8} value={this.state.numOfShelfLevels} onChange={this.onChangeLevelInput} /> (Range: 1~8)</p>\n                                                <p><strong>Number of positions per level:</strong> <InputNumber min={3} max={5} value={this.state.numOfBooksPerLevel} onChange={this.onChangePositionInput} /> (Range: 3~5)</p>\n                                                <a onClick={this.hideConfig} className=\"closeButton\">Close</a>\n                                            </div>\n                                        }\n                                        placement=\"right\"\n                                        title=\"Bookshelf Control Panel\"\n                                        trigger=\"click\"\n                                        visible={this.state.configVisible}\n                                        onVisibleChange={this.handleConfigVisibleChange}\n                                    >\n                                        <a className=\"configButton\">Build Your Own</a>\n                                    </Popover>\n                                </h5>\n                                <div>\n                                    <Bookshelf\n                                        numOfLevels={this.state.numOfShelfLevels}\n                                        numOfBooksPerLevel={this.state.numOfBooksPerLevel}\n                                        bookcaseHeight={this.state.bookcaseHeight}\n                                        bookcaseWidth={this.state.bookcaseWidth}\n                                        bookstandMarginTop={this.state.bookstandMarginTop}\n                                        bookstandMarginLeft={this.state.bookstandMarginLeft}\n                                        books={this.state.books}\n                                        dragHandler={this.dragHandler.bind(this)}\n                                        dbclick={this.dbclick()}\n                                        animationShow={this.state.animationShow}\n                                        bouncingBooks={this.state.bouncingBooks}\n                                        flyingBooks={this.state.flyingBooks}\n                                        bookshelfDim={this.state.bookshelfDim}\n                                        updateBookshelfDim={this.updateBookshelfDim}\n                                        showStepsInfo={this.state.isToggleOn}\n                                    />\n                                </div>\n                            </Col>\n                            <Col className=\"storage-view\">\n                                <Row>\n                                    <div className=\"bubble bubble-bottom-left\" style={{ display: this.state.displayMoveBookDialog }}>\n                                        <p>Your role is librarian now! Please move {this.state.value} from bin {this.state.targetBookBinNumber}  to bookshelf.</p>\n                                        {/* <Popconfirm\n                                            title={\"Have you moved this book from storage to bookshelf?\"}\n                                            onConfirm={this.handleToStudent}\n                                            okText=\"Yes\"\n                                            cancelText=\"No\">\n                                            <Button>Notice Available</Button>\n                                        </Popconfirm> */}\n                                    </div>\n                                </Row>\n                                <Row>\n                                    <div className={(role === \"Student\") ? \"wrapper\" : \"\"}>\n                                        <div className={(role === \"Student\") ? \"is-disabled\" : \"\"}>\n                                            <Storage\n                                                books={this.state.books}\n                                                numOfBins={this.state.numOfBins}\n                                                dragHandler={this.dragHandler.bind(this)}\n                                                animationShow={this.state.animationShow}\n                                                bouncingBooks={this.state.bouncingBooks}\n                                                flyingBooks={this.state.flyingBooks}\n                                                storageDim={this.state.storageDim}\n                                                updateStorageDim={this.updateStorageDim}\n                                                showStepsInfo={this.state.isToggleOn}\n                                                numOfLevels={this.state.numOfShelfLevels}\n                                                numOfBooksPerLevel={this.state.numOfBooksPerLevel}\n                                            />\n                                        </div>\n                                    </div>\n                                </Row>\n                            </Col>\n                        </DndProvider>\n                        <Col style={{ display: this.state.display }}>\n                            <h5 className=\"computer-title\"><strong>Steps Info</strong></h5>\n                            <div className=\"demo-infinite-container\">\n                                <InfiniteScroll\n                                    initialLoad={false}\n                                    pageStart={0}\n                                    loadMore={this.handleInfiniteOnLoad}\n                                    hasMore={!this.state.loading && this.state.hasMore}\n                                    useWindow={false}\n                                >\n                                    <List\n                                        dataSource={this.state.steps}\n                                        bordered\n                                        renderItem={step => (\n                                            // <Card title={step.id}>\n                                            <List.Item key={step.id}>\n                                                <h5>Step {this.state.steps.indexOf(step) + 1}: </h5>\n                                                {step.map(book => (\n                                                    <p><strong>{book.name}</strong> {(book.location === 0 ? \"storage: bin\" + book.bin : \"bookshelf: level\" + book.level + \"; position\" + book.position)}</p>\n                                                ))}\n                                            </List.Item>\n                                            // </Card>\n                                        )} />\n                                </InfiniteScroll>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div >\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport { Drawer } from 'antd';\nimport \"./App.css\";\n\nclass App extends React.Component {\n\n  state = {\n    role: \"Student\",\n    visible: false\n  };\n\n  handleValueChange = (e) => {\n    console.log('role button checked', e.target.value);\n    this.setState({ role: e.target.value })\n  }\n\n  handleRoleChange(role) {\n    this.setState({ role: role })\n  }\n\n  clickOverview = (e) => {\n    // console.log('overview button clicked', e.target.value);\n    this.showDrawer();\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header role={this.state.role} onChange={this.handleValueChange.bind(this)} clickOverview={this.clickOverview.bind(this)} />\n        <Drawer\n          title=\"Introduction\"\n          placement=\"right\"\n          width=\"600px\"\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}\n        >\n          <h5>Memory Paging vs. Library Analogy</h5>\n          <ul>\n            <li>A <strong>page</strong> is a <strong>book</strong> on the bookshelf.</li>\n            <li><strong>Virtual memory</strong> is the <strong>catelog computer</strong> with list of names of books available.</li>\n            <li><strong>Physical memory</strong> is the <strong>bookshelf</strong> with level numbers and position numbers as 'addresses'.</li>\n            <li><strong>Swap space</strong> is the basement <strong>book storage</strong> where unpopular books are kept.</li>\n            <li><strong>Page table</strong> is the <strong>catalog card</strong> that maps a book name to level number and position number.</li>\n            <li><strong>Operating system</strong> is the <strong>librarian</strong> in charge of organizing the books.</li>\n          </ul>\n\n          <h5>Bookshelf Function Instruction (For each book)</h5>\n          <ul>\n            <li>Mouse over 2 seconds for the book details.</li>\n            <li>Double click for retriving the book.</li>\n            <li>The red badge at the corner indicates its retrieve frequency.</li>\n          </ul>\n\n          <h5>Record Series Buttons Function</h5>\n          <ul>\n            <li><strong>Record Step: </strong>Record current books in the library.</li>\n            <li><strong>Clear all Steps: </strong>Clear all recorded steps.</li>\n            <li><strong>Download Json: </strong>Download all recorded steps as Json file.</li>\n            <li><strong>Upload Json: </strong>Upload downloaded Json file or formatted Json file with steps and show with initial step.</li>\n            <li><strong>Next: </strong>Go to the next step in uploaded Json file.</li>\n            <li><strong>Previous: </strong>Go to the previous step in uploaded Json file.</li>\n          </ul>\n\n          <h5>Record Buttons User Manual</h5>\n          <ul>\n            <li>Recording process:</li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Record Step\" button after any actions or movement until you are satisfied with books in current library.</li>\n              <li><strong>Adanced Step:</strong> Click on the dropdown menu from \"Undo\" button and select the specific step you want to erase and redo recording process following step 1.</li>\n              <li><strong>Step 2:</strong> Click on \"Download Json\" button to export the Json file with all steps you recorded recently.</li>\n            </ul>\n            <br />\n            <li>Uploading and display process: </li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Upload Json\" button to import the downloaded Json file and books from the first step would appear on screen as default.</li>\n              <li><strong>Step 2:</strong> Display books from Json file step by step.</li>\n              <ul>\n                <li><strong>Step 2.1:</strong> Click on \"next\" button to display books from the next step.</li>\n                <li><strong>Step 2.2:</strong> Click on \"previous\" button to display books from the previous step.</li>\n              </ul>\n            </ul>\n\n          </ul>\n        </Drawer>\n        <Main role={this.state.role} handleRoleChange={this.handleRoleChange.bind(this)} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}