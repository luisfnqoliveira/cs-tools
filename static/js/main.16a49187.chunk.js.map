{"version":3,"sources":["assets/images/Upitt_logo_400x400.jpg","components/Header.js","components/Footer.js","utilities/items.js","assets/images/bookCover.jpg","components/Book.js","components/BookStand.js","components/SingleBookCase.js","components/Bookshelf.js","components/Catalog.js","components/Bin.js","components/Storage.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["roles","label","value","Role","Group","options","onChange","this","props","role","optionType","buttonStyle","Component","Header","className","src","upittLogo","alt","style","color","onClick","clickOverview","Footer","ItemTypes","TweenOne","plugins","push","BezierPlugin","Book","Meta","Card","useDrag","type","item","code","name","collect","monitor","isDragging","drag","content","created_date","frequency","last_borrowed","bounce","y","repeat","yoyo","ease","easing","path","duration","appearTo","scaleX","scaleY","useEffect","animationShow","bouncingBooks","some","book","flyingBooks","ref","count","title","mouseEnterDelay","hoverable","left","width","height","cover","bookcover","description","author","query","message","success","map","animation","bezier","vars","onComplete","onAnimComplete","pointerEvents","BookStand","positionIntro","position","useDrop","accept","drop","dragHandler","level","isOver","bookstandRef","useRef","bookshelfDim","onWindowResize","_","updateDimension","current","Newbookstand","x","getBoundingClientRect","index","findIndex","stand","updateBookshelfDim","window","addEventListener","removeEventListener","numOfLevels","numOfBooksPerLevel","showStepsInfo","document","event","preventDefault","books","Object","keys","length","constructor","placement","shelfBook","filter","location","i","SingleBookCase","levelIntro","bookstands","bookstandMarginTop","bookstandMarginLeft","bookcaseSize","bookcaseHeight","bookcaseWidth","bookstandMargin","marginTop","marginLeft","Bookshelf","bookcases","numOfBooks","dbclick","PureComponent","STORED_BOOK_KEY","Catalog","React","useState","setLocation","setLevel","setPosition","bin","setBin","show","found","retrievedBooksString","localStorage","getItem","JSON","parse","setItem","err","getStoredBooks","find","onHide","display","Bin","toBin","binId","binRef","storageDim","NewBin","updateStorageDim","binTitle","storageBook","trigger","from","justifySelf","Storage","state","numOfBins","bins","binBooks","getStoredSteps","retrievedStepsString","getStoredFaults","retrivedNumOfFaults","Main","newDim","setState","setTimeout","steps","pointer","toLocation","toLevel","toPosition","is_empty","shelf_book","storedBooks","numOfShelfLevels","handleToStudent","error","storedBooksJson","stringify","catalogShow","info","ondblclick","e","target","draggable","book_name","offsetParent","innerText","data","sessionStorage","retrieveSuccess","isSuccess","showRetriveSuccess","today","Date","indexOf","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","warning","bind","catalogClose","showToLibrarianDialog","displayToLibrarianDialog","displayNoticeDialog","displayRetriveSuccessDialog","handleToLibrarian","displayMoveBookDialog","handleRoleChange","handleFinishDialog","onSearch","alert","console","log","min","max","bookObj","require","uniqid","Math","ceil","floor","random","storeBook","targetBook","targetBookBinNumber","handleFaultsIncrement","warn","handleUpload","files","fileReader","FileReader","readAsText","onload","result","disableNext","pageFaults","faults","hiddenFileInput","handleClickUpload","click","handleClickRecord","storedSteps","currentStep","storedStepsJson","handleInfiniteOnLoad","loading","hasMore","handleConfirm","undoStep","slice","onChangeLevelInput","onChangePositionInput","prevState","hideConfig","configVisible","handleConfigVisibleChange","createRef","handleClickNext","handleClickPrevious","handleClickShowSteps","handleSelectChange","queryRef","lib","isToggleOn","displayStepInfos","nextClicked","prevProps","prevStates","fileContent","dim","bookstand","currStep","nextStep","existingBook","newBook","getDimension","to","j","Option","Select","Container","fluid","Row","Col","flexGrow","disabled","href","encodeURIComponent","download","md","span","offset","placeholder","step","onConfirm","okText","cancelText","Search","enterButton","textAlign","valueStyle","DndProvider","backend","HTML5Backend","visible","onVisibleChange","justifyContent","initialLoad","pageStart","loadMore","useWindow","dataSource","bordered","renderItem","Item","App","handleValueChange","showDrawer","onClose","closable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16a49187.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Upitt_logo_400x400.8afe9141.jpg\";","import React, { Component } from 'react';\nimport upittLogo from '../assets/images/Upitt_logo_400x400.jpg';\nimport { Radio } from \"antd\";\nimport \"../styles/Header.css\";\nimport \"antd/dist/antd.css\";\n\nconst roles = [\n\t{ label: \"Student\", value: \"Student\" },\n\t{ label: \"Librarian\", value: \"Librarian\" }\n];\n\nclass Role extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Radio.Group\n\t\t\t\toptions={roles}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\tvalue={this.props.role}\n\t\t\t\toptionType=\"button\"\n\t\t\t\tbuttonStyle=\"solid\"\n\t\t\t/>\n\t\t);\n\t}\n}\n\nclass Header extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"App-header\" >\n\t\t\t\t<img src={upittLogo} alt='logo' className=\"App-logo\" />\n\t\t\t\t<p className=\"title\" >\n\t\t\t\t\tMemory Paging Practice System\n                </p>\n\t\t\t\t<div className=\"overview-button\">\n\t\t\t\t\t<a style={{ color: \"white\" }} onClick={this.props.clickOverview}>Overview</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"role-button\">\n\t\t\t\t\t<Role role={this.props.role} onChange={this.props.onChange} />\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport \"../styles/Footer.css\"\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className=\"footer\" >\n                University of Pittsburgh\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","// Define draggable item\nexport const ItemTypes = {\n    BOOK: 'book',\n  }","export default __webpack_public_path__ + \"static/media/bookCover.6a39f467.jpg\";","import React, { useEffect } from 'react';\nimport { Card, Popover, Badge, message } from 'antd';\nimport bookcover from '../assets/images/bookCover.jpg';\nimport { ItemTypes } from '../utilities/items.js';\nimport { useDrag } from 'react-dnd';\n// import PropTypes from 'prop-types';\nimport TweenOne from 'rc-tween-one';\nimport BezierPlugin from 'rc-tween-one/lib/plugin/BezierPlugin';\nTweenOne.plugins.push(BezierPlugin);\n\nfunction Book(props) {\n    // console.log(\"render book\")\n    const { Meta } = Card;\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.BOOK,\n        item: {\n            code: props.code,\n            name: props.name,\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    }))\n\n    const content = (\n        <div>\n            <p>Created: {props.created_date}</p>\n            <p>Frequency: {props.frequency}</p>\n            <p>Last borrowed: {props.last_borrowed}</p>\n        </div>\n    );\n\n    const p0 = 'M0,100 L25,100 C34,20 40,0 100,0';\n    const p1 = 'M0,100 C5,120 25,130 25,100 C30,60 40,75 58,90 C69,98.5 83,99.5 100,100';\n    const ease0 = TweenOne.easing.path(p0);\n    const ease1 = TweenOne.easing.path(p1);\n\n    const bounce = [\n        {\n            y: -70,\n            repeat: 1,\n            yoyo: true,\n            ease: ease0,\n            duration: 500\n        },\n        {\n            appearTo: 0,\n            scaleX: 0,\n            scaleY: 2,\n            repeat: 1,\n            yoyo: true,\n            ease: ease1,\n            duration: 500,\n        }\n    ];\n\n    useEffect(() => {\n        // console.log(\"book use effect\")\n        // console.log(props.animationShow)\n        // if (props.animationShow) {\n        //     setTimeout(() => {\n        //         props.onFlyingComplete()\n        //     }, 1600)\n        // }\n    }, []);\n\n    if (!props.animationShow) {\n        return (\n            <div ref={drag}>\n                <Badge count={props.frequency}>\n                    <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                        <Card\n                            hoverable\n                            style={{ left: 14, width: 70, height: 80, pointerEvents: 'auto' }}\n                            cover={<img alt=\"bookcover\" src={bookcover} />}\n                        >\n                            <Meta title={props.name}\n                                description={props.author}\n                                onClick={() => {\n                                    if (props.name === props.query)\n                                        message.success(\"You have successfully retrieved \" + props.name);\n                                }}\n                            />\n                        </Card>\n                    </Popover>\n                </Badge>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>\n                {(props.bouncingBooks.some(book => book.code === props.code) === false) &&\n                    (props.flyingBooks.some(book => book.code === props.code) === false) &&\n                    <div ref={drag}>\n                        <Badge count={props.frequency}>\n                            <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                                <Card\n                                    hoverable\n                                    style={{ left: 14, width: 70, height: 80 }}\n                                    cover={<img alt=\"bookcover\" src={bookcover} />}\n                                >\n                                    <Meta title={props.name}\n                                        description={props.author}\n                                        onClick={() => {\n                                            if (props.name === props.query)\n                                                message.success(\"You have successfully retrieved \" + props.name);\n                                        }}\n                                    />\n                                </Card>\n                            </Popover>\n                        </Badge>\n                    </div>\n                }\n                {props.bouncingBooks.map(book => {\n                    if (book.code === props.code) {\n                        return (\n                            <div ref={drag}>\n                                <TweenOne\n                                    animation={bounce}\n                                >\n                                    <Badge count={props.frequency}>\n                                        <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                                            <Card\n                                                hoverable\n                                                style={{ left: 14, width: 70, height: 80 }}\n                                                cover={<img alt=\"bookcover\" src={bookcover} />}\n                                            >\n                                                <Meta title={props.name}\n                                                    description={props.author}\n                                                    onClick={() => {\n                                                        if (props.name === props.query)\n                                                            message.success(\"You have successfully retrieved \" + props.name);\n                                                    }}\n                                                />\n                                            </Card>\n                                        </Popover>\n                                    </Badge>\n                                </TweenOne>\n                            </div>\n                        );\n                    }\n                })}\n                {props.flyingBooks.map(book => {\n                    if (book.code === props.code) {\n                        return (\n                            <div ref={drag}>\n                                <TweenOne\n                                    animation={{\n                                        bezier: {\n                                            type: 'thru',\n                                            vars: [book.bezier],\n                                        },\n                                        duration: 1500,\n                                        onComplete: props.onAnimComplete()\n                                    }}\n                                >\n                                    <Badge count={props.frequency}>\n                                        <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                                            <Card\n                                                hoverable\n                                                style={{ left: 14, width: 70, height: 80 }}\n                                                cover={<img alt=\"bookcover\" src={bookcover} />}\n                                            >\n                                                <Meta title={props.name}\n                                                    description={props.author}\n                                                    onClick={() => {\n                                                        if (props.name === props.query)\n                                                            message.success(\"You have successfully retrieved \" + props.name);\n                                                    }}\n                                                />\n                                            </Card>\n                                        </Popover>\n                                    </Badge>\n                                </TweenOne>\n                            </div>\n                        );\n                    }\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Book;","import React, { useRef, useEffect } from 'react';\nimport { Tooltip } from 'antd';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\nimport Book from './Book.js';\n\nfunction BookStand(props) {\n    // console.log(\"render bookstand\")\n    const positionIntro = \"Position \" + props.position;\n    const toShelf = 1;\n    const toBin = 0;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toShelf, toBin, props.level, props.position),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    const bookstandRef = useRef();\n    var bookshelfDim = props.bookshelfDim;\n\n    const onWindowResize = _ => {\n        updateDimension();\n    };\n\n    const updateDimension = () => {\n        if (bookstandRef.current) {\n            let Newbookstand = {\n                level: props.level,\n                position: props.position,\n                x: bookstandRef.current.getBoundingClientRect().x,\n                y: bookstandRef.current.getBoundingClientRect().y\n            };\n            let index = bookshelfDim.findIndex(stand => stand.level === props.level && stand.position === props.position)\n            if (index === -1) {\n                bookshelfDim.push(Newbookstand)\n            }\n            else {\n                bookshelfDim[index] = Newbookstand\n            }\n            return bookshelfDim;\n        }\n    }\n\n    useEffect(() => {\n        props.updateBookshelfDim(updateDimension())\n        window.addEventListener(\"resize\", onWindowResize, true);\n        return () => {\n            window.removeEventListener(\"resize\", onWindowResize, true);\n        };\n    }, [props.numOfLevels, props.numOfBooksPerLevel, props.showStepsInfo]);\n\n    document.addEventListener(\"drop\", function (event) {\n        event.preventDefault();\n    })\n\n    const books = props.books;\n    if (Object.keys(books).length === 0 && books.constructor === Object) {\n        return (\n            <Tooltip placement=\"bottom\" title={positionIntro}>\n                <div className=\"bookstand\">\n                </div>\n            </Tooltip>\n        );\n    }\n    else {\n        let shelfBook = books.filter(book => book.location === 1);\n        return (\n            <div ref={bookstandRef}>\n                <Tooltip placement=\"bottom\" title={positionIntro}>\n                    <div className=\"bookstand\" ref={drop}>\n                        {shelfBook.map(i => {\n                            if (i.level === props.level && i.position === props.position) {\n                                return (\n                                    <Book\n                                        key={i.code}\n                                        code={i.code}\n                                        name={i.name}\n                                        created_date={i.created_date}\n                                        frequency={i.frequency}\n                                        last_borrowed={i.last_borrowed}\n                                        animationShow={props.animationShow}\n                                        bouncingBooks={props.bouncingBooks}\n                                        flyingBooks={props.flyingBooks}\n                                        onAnimComplete={props.onAnimComplete}\n                                    />\n                                )\n                            }\n                        })}\n                        {props.animationShow &&\n                            props.bouncingBooks.map(book => {\n                                let alreadyOnShelf = shelfBook.some(i => i.code === book.code)\n                                if (alreadyOnShelf === false && book.level === props.level && book.position === props.position) {\n                                    return (\n                                        <Book\n                                            key={book.code}\n                                            code={book.code}\n                                            name={book.name}\n                                            created_date={book.created_date}\n                                            frequency={book.frequency}\n                                            last_borrowed={book.last_borrowed}\n                                            animationShow={props.animationShow}\n                                            bouncingBooks={props.bouncingBooks}\n                                            flyingBooks={props.flyingBooks}\n                                            onAnimComplete={props.onAnimComplete}\n                                        />\n                                    );\n                                }\n                            })}\n                    </div>\n                </Tooltip>\n            </div >\n        );\n    }\n}\n\nexport default BookStand;","import React, { Component } from 'react';\nimport { Tooltip } from 'antd';\nimport BookStand from './BookStand';\n\nclass SingleBookCase extends Component {\n\n    render() {\n        // console.log(\"render bookcase\")\n        const levelIntro = \"Level \" + this.props.level;\n        const { numOfBooksPerLevel } = this.props;\n        let bookstands = [];\n        for (let i = 0; i < numOfBooksPerLevel; i++) {\n            bookstands = [...bookstands, {\n                position: i + 1,\n                level: this.props.level,\n                books: this.props.books,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n\n        let bookcaseSize = {\n            height: this.props.bookcaseHeight,\n            width: this.props.bookcaseWidth,\n        }\n\n        return (\n            <Tooltip placement=\"leftTop\" title={levelIntro}>\n                <div className=\"bookcase\" style={bookcaseSize}>\n                    {\n                        bookstands.map(i => {\n                            let bookstandMargin = {\n                                marginTop: i.bookstandMarginTop,\n                                marginLeft: i.bookstandMarginLeft\n                            }\n                            return (\n                                <div key={i.position} className=\"single\" style={bookstandMargin}>\n                                    <BookStand\n                                        position={i.position}\n                                        level={i.level}\n                                        books={i.books}\n                                        numOfLevels={this.props.numOfLevels}\n                                        numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                        bookcaseHeight={i.bookcaseHeight}\n                                        bookcaseWidth={i.bookcaseWidth}\n                                        bookstandMarginTop={i.bookstandMarginTop}\n                                        dragHandler={this.props.dragHandler}\n                                        animationShow={this.props.animationShow}\n                                        bouncingBooks={this.props.bouncingBooks}\n                                        flyingBooks={this.props.flyingBooks}\n                                        bookshelfDim={this.props.bookshelfDim}\n                                        updateBookshelfDim={this.props.updateBookshelfDim}\n                                        showStepsInfo={this.props.showStepsInfo}\n                                        onAnimComplete={this.props.onAnimComplete}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SingleBookCase;","import React, { PureComponent } from 'react';\nimport SingleBookCase from './SingleBookCase';\n\nclass Bookshelf extends PureComponent {\n    render() {\n        const { numOfLevels } = this.props;\n        const { numOfBooksPerLevel } = this.props;\n        let bookcases = [];\n        for (let i = 0; i < numOfLevels; i++) {\n            bookcases = [...bookcases, {\n                level: i + 1,\n                numOfBooks: numOfBooksPerLevel,\n                books: this.props.books,\n                bookcaseHeight: this.props.bookcaseHeight,\n                bookcaseWidth: this.props.bookcaseWidth,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n        return (\n            <div className=\"bookshelf\">\n                {\n                    bookcases.map(i => {\n                        return (\n                            <SingleBookCase level={i.level}\n                                key={i.level}\n                                numOfBooksPerLevel={i.numOfBooks}\n                                numOfLevels={this.props.numOfLevels}\n                                bookcaseHeight={i.bookcaseHeight}\n                                bookcaseWidth={i.bookcaseWidth}\n                                bookstandMarginTop={i.bookstandMarginTop}\n                                bookstandMarginLeft={i.bookstandMarginLeft}\n                                books={i.books}\n                                dragHandler={this.props.dragHandler}\n                                dbclick={this.props.dbclick}\n                                animationShow={this.props.animationShow}\n                                bouncingBooks={this.props.bouncingBooks}\n                                flyingBooks={this.props.flyingBooks}\n                                bookshelfDim={this.props.bookshelfDim}\n                                updateBookshelfDim={this.props.updateBookshelfDim}\n                                showStepsInfo={this.props.showStepsInfo}\n                                onAnimComplete={this.props.onAnimComplete}\n                            />\n                        )\n                    })\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Bookshelf;","import React from 'react';\n\nconst STORED_BOOK_KEY = 'STORED_BOOK_KEY';\n\nfunction getStoredBooks() {\n  try {\n    const retrievedBooksString = localStorage.getItem(STORED_BOOK_KEY);\n    if (!retrievedBooksString) {\n      localStorage.setItem(STORED_BOOK_KEY, \"[]\")\n      return [];\n    }\n    return JSON.parse(retrievedBooksString);\n  }\n  catch (err) {\n    localStorage.setItem(STORED_BOOK_KEY, '[]');\n    return [];\n  }\n}\n\nexport function Catalog(props) {\n  const [location, setLocation] = React.useState();\n  const [level, setLevel] = React.useState();\n  const [position, setPosition] = React.useState();\n  const [bin, setBin] = React.useState();\n\n  React.useEffect(() => {\n    if (props.show) {\n      const books = getStoredBooks();\n      const found = books.find(book => book.name === props.query);\n      if (found) {\n        setLocation(found.location);\n        setLevel(found.level);\n        setPosition(found.position);\n        setBin(found.bin);\n      }\n    } \n    if (props.query === \"\") {\n      setLocation(-1); // reset location as neither bookshelf or storage.\n    }\n    props.onHide();\n  }, [props.show, props.query]);\n\n  return (\n    <pre>\n      <u>Book Name</u>: {props.query}{\"\\n\"}\n      <u>Location</u>: {location === 0 ? 'storage' : location === 1 ? 'bookshelf' : ''}{\"\\n\"}\n      <div style={{ display: location === 0 ? 'block' : 'none' }}><u>Storage Bin</u>: {bin} </div>\n      <div style={{ display: location === 1 ? 'block' : 'none' }}><u>Level</u>: {level} </div>\n      <div style={{ display: location === 1 ? 'block' : 'none' }}><u>Position</u>: {position}</div>\n    </pre>\n  );\n}","import React, { useRef, useEffect } from 'react';\nimport { Popover, Tooltip } from 'antd';\nimport Book from './Book';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\n\nfunction Bin(props) {\n    // console.log(\"render bin\")\n    const toStorage = 0;\n    const toBin = props.binId;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toStorage, toBin, 0, 0),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    const binRef = useRef();\n    var storageDim = props.storageDim;\n\n    const onWindowResize = _ => {\n        updateDimension();\n    };\n\n    const updateDimension = () => {\n        if (binRef.current) {\n            let NewBin = {\n                binId: props.binId,\n                x: binRef.current.getBoundingClientRect().x,\n                y: binRef.current.getBoundingClientRect().y\n            };\n            let index = storageDim.findIndex(bin => bin.binId === props.binId)\n            if (index === -1) {\n                storageDim.push(NewBin)\n            }\n            else {\n                storageDim[index] = NewBin\n            }\n            return storageDim;\n        }\n    }\n\n    useEffect(() => {\n        props.updateStorageDim(updateDimension())\n        window.addEventListener(\"resize\", onWindowResize, true);\n        return () => {\n            window.removeEventListener(\"resize\", onWindowResize, true);\n        };\n    }, [props.numOfLevels, props.numOfBooksPerLevel, props.showStepsInfo]);\n\n    var content = (<div className=\"book-container\"></div>);\n    const binTitle = \"Bin \" + props.binId;\n    if (Object.keys(props.books).length === 0 && props.books.constructor === Object) {\n\n    } else {\n        let storageBook = props.books.filter(book => book.location === 0);\n        if (!props.animationShow) {\n            content = (\n                <div className=\"book-container\">\n                    {\n                        storageBook.map(i => {\n                            return (\n                                <div key={i.code} className='book-align-block'>\n                                    <Book\n                                        code={i.code}\n                                        name={i.name}\n                                        created_date={i.created_date}\n                                        frequency={i.frequency}\n                                        last_borrowed={i.last_borrowed}\n                                        animationShow={props.animationShow}\n                                        bouncingBooks={props.bouncingBooks}\n                                        flyingBooks={props.flyingBooks}\n                                        onAnimComplete={props.onAnimComplete}\n                                    />\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            );\n        }\n        else {\n            content = (\n                <div className=\"book-container\">\n                    {\n                        storageBook.map(i => {\n                            let alreadyOnBin = props.flyingBooks.some(book => book.code === i.code)\n                            if (alreadyOnBin === false) {\n                                return (\n                                    <div key={i.code} className='book-align-block'>\n                                        <Book\n                                            code={i.code}\n                                            name={i.name}\n                                            created_date={i.created_date}\n                                            frequency={i.frequency}\n                                            last_borrowed={i.last_borrowed}\n                                            animationShow={props.animationShow}\n                                            bouncingBooks={props.bouncingBooks}\n                                            flyingBooks={props.flyingBooks}\n                                            onAnimComplete={props.onAnimComplete}\n                                        />\n                                    </div>\n                                );\n                            }\n                        })\n                    }\n                </div>\n            );\n        }\n    }\n    return (\n        <Tooltip placement=\"top\" title={binTitle}>\n            <Popover content={content} placement=\"top\" title={binTitle} trigger=\"click\">\n                <div ref={binRef}>\n                    <div className=\"bin\" ref={drop}>\n                        {props.animationShow &&\n                            props.flyingBooks.map(i => {\n                                if (i.from.bin === props.binId) {\n                                    return (\n                                        <div key={i.code} style={{\n                                            justifySelf: 'left',\n                                            // pointerEvents: 'auto',\n                                        }}>\n                                            <Book\n                                                code={i.code}\n                                                name={i.name}\n                                                created_date={i.created_date}\n                                                frequency={i.frequency}\n                                                last_borrowed={i.last_borrowed}\n                                                animationShow={props.animationShow}\n                                                bouncingBooks={props.bouncingBooks}\n                                                flyingBooks={props.flyingBooks}\n                                                onAnimComplete={props.onAnimComplete}\n                                            />\n                                        </div>\n                                    );\n                                } else {\n                                    return (\n                                        <div></div>\n                                    )\n                                }\n\n                            })}\n                    </div>\n                </div>\n            </Popover>\n        </Tooltip>\n    );\n}\n\nexport default Bin;","import React, { Component } from 'react';\nimport Bin from './Bin';\nimport TweenOne from 'rc-tween-one';\nimport BezierPlugin from 'rc-tween-one/lib/plugin/BezierPlugin';\nTweenOne.plugins.push(BezierPlugin);\n\nclass Storage extends Component {\n    state = {\n\n    }\n\n    render() {\n        // console.log(\"render storage\")\n        const p0 = 'M0,100 L25,100 C34,20 40,0 100,0';\n        const p1 = 'M0,100 C5,120 25,130 25,100 C30,60 40,75 58,90 C69,98.5 83,99.5 100,100';\n        const ease0 = TweenOne.easing.path(p0);\n        const ease1 = TweenOne.easing.path(p1);\n\n        const bounce = [\n            {\n                // repeatDelay: 300,\n                y: -70,\n                repeat: 1,\n                yoyo: true,\n                ease: ease0,\n                duration: 500\n            },\n            {\n                // repeatDelay: 300,\n                appearTo: 0,\n                scaleX: 0,\n                scaleY: 2,\n                repeat: 1,\n                yoyo: true,\n                ease: ease1,\n                duration: 500,\n                onComplete: this.props.onAnimComplete()\n            },\n        ];\n        const { numOfBins } = this.props;\n        const { books } = this.props;\n        let bins = [];\n        // check if books array is empty\n        if (Object.keys(this.props.books).length === 0 && this.props.books.constructor === Object) {\n            for (let i = 0; i < numOfBins; i++) {\n                bins = [...bins, {\n                    binId: i + 1,\n                    books: [],\n                }];\n            }\n        } else {\n            for (let i = 0; i < numOfBins; i++) {\n                const binBooks = books.filter(book => book.bin === i + 1);\n                bins = [...bins, {\n                    binId: i + 1,\n                    books: binBooks,\n                }];\n            }\n        }\n\n        if (!this.props.animationShow) {\n            return (\n                <div className=\"storage\">\n                    <h5><strong>Book Storage</strong></h5>\n                    {\n                        bins.map(i => {\n                            return (\n                                <Bin\n                                    binId={i.binId}\n                                    key={i.binId}\n                                    books={i.books}\n                                    dragHandler={this.props.dragHandler}\n                                    animationShow={this.props.animationShow}\n                                    bouncingBooks={this.props.bouncingBooks}\n                                    flyingBooks={this.props.flyingBooks}\n                                    storageDim={this.props.storageDim}\n                                    updateStorageDim={this.props.updateStorageDim}\n                                    showStepsInfo={this.props.showStepsInfo}\n                                    numOfLevels={this.props.numOfLevels}\n                                    numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                    onAnimComplete={this.props.onAnimComplete}\n                                />\n                            )\n                        })\n                    }\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"storage\">\n                    <h5><strong>Book Storage</strong></h5>\n                    {\n                        bins.map(i => {\n                            if (this.props.bouncingBooks.some(book => book.bin === i.binId)) {\n                                return (\n                                    <TweenOne key={i.binId} animation={bounce}>\n                                        <Bin\n                                            binId={i.binId}\n                                            books={i.books}\n                                            dragHandler={this.props.dragHandler}\n                                            animationShow={this.props.animationShow}\n                                            bouncingBooks={this.props.bouncingBooks}\n                                            flyingBooks={this.props.flyingBooks}\n                                            storageDim={this.props.storageDim}\n                                            updateStorageDim={this.props.updateStorageDim}\n                                            showStepsInfo={this.props.showStepsInfo}\n                                            numOfLevels={this.props.numOfLevels}\n                                            numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                            onAnimComplete={this.props.onAnimComplete}\n                                        />\n                                    </TweenOne>\n                                );\n                            }\n                            else {\n                                return (\n                                    <Bin\n                                        binId={i.binId}\n                                        key={i.binId}\n                                        books={i.books}\n                                        dragHandler={this.props.dragHandler}\n                                        animationShow={this.props.animationShow}\n                                        bouncingBooks={this.props.bouncingBooks}\n                                        flyingBooks={this.props.flyingBooks}\n                                        storageDim={this.props.storageDim}\n                                        updateStorageDim={this.props.updateStorageDim}\n                                        showStepsInfo={this.props.showStepsInfo}\n                                        numOfLevels={this.props.numOfLevels}\n                                        numOfBooksPerLevel={this.props.numOfBooksPerLevel}\n                                        onAnimComplete={this.props.onAnimComplete}\n                                    />\n                                )\n                            }\n                        })\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default Storage;","import React, { PureComponent } from 'react';\nimport Bookshelf from './Bookshelf';\nimport \"../styles/Main.css\";\nimport \"antd/dist/antd.css\";\nimport Container from 'react-bootstrap/Container';\nimport '../App.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Catalog } from './Catalog.js';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Storage from './Storage';\nimport { message, Button, List, Tooltip, Select, Popconfirm, InputNumber, Statistic, Card, Popover, Input } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nfunction getStoredBooks() {\n    try {\n        const retrievedBooksString = localStorage.getItem('STORED_BOOK_KEY');\n        if (!retrievedBooksString) {\n            localStorage.setItem('STORED_BOOK_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedBooksString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredSteps() {\n    try {\n        const retrievedStepsString = localStorage.getItem('STORED_STEP_KEY');\n        if (!retrievedStepsString) {\n            localStorage.setItem('STORED_STEP_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedStepsString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredFaults() {\n    try {\n        const retrivedNumOfFaults = localStorage.getItem('STORED_FAULTS_KEY');\n        if (!retrivedNumOfFaults) {\n            localStorage.setItem('STORED_FAULTS_KEY', 0)\n            return 0;\n        }\n        return JSON.parse(retrivedNumOfFaults);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction storeBook(name, numOfBins) {\n    console.log('storing book', name);\n    const today = new Date();\n    const storedBooks = getStoredBooks();\n    const found = storedBooks.find(book => {\n        return book.name === name;\n    })\n    if (found) {\n        // sessionStorage.setItem('STORED_BOOK_KEY', name);\n    } else {\n        // store the book\n        var uniqid = require('uniqid');\n        const bookObj = {\n            code: uniqid(),\n            name: name,\n            location: 0,\n            bin: getRandomIntInclusive(1, numOfBins),  // store to bin randomly\n            level: 0,\n            position: 0,\n            created_date: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds(),\n            frequency: 0,\n            last_borrowed: 0,\n        };\n        storedBooks.push(bookObj);\n        const storedBooksJson = JSON.stringify(storedBooks);\n        localStorage.setItem('STORED_BOOK_KEY', storedBooksJson);\n    }\n}\n\nclass Main extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.hiddenFileInput = React.createRef(); // Element reference for upload JSON input\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickPrevious = this.handleClickPrevious.bind(this);\n        this.handleClickShowSteps = this.handleClickShowSteps.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleFaultsIncrement = this.handleFaultsIncrement.bind(this);\n        this.queryRef = React.createRef(); // Element reference for search input\n        this.state = {\n            role: this.props.role,\n            value: '',\n            lib: [],\n            catalogShow: false,\n            numOfShelfLevels: 5,\n            numOfBooksPerLevel: 3,\n            bookcaseHeight: '120px',\n            bookcaseWidth: '340px',\n            bookstandMarginTop: '30px',\n            bookstandMarginLeft: '5px',\n            numOfBins: 4,\n            books: getStoredBooks(), // location: 0-storage; 1-bookshelf\n            error: 0,\n            steps: getStoredSteps(),\n            pointer: 0,\n            isToggleOn: false,\n            displayStepInfos: 'none',\n            disableNext: true,\n            loading: false,\n            hasMore: true,\n            undoStep: null,\n            pageFaults: getStoredFaults(),\n            animationShow: false,\n            bouncingBooks: [],\n            flyingBooks: [],\n            nextClicked: false,\n            configVisible: false, // show config table in \"build your own\" or not\n            isSuccess: false,\n            displayToLibrarianDialog: 'none',\n            displayMoveBookDialog: 'none',\n            displayNoticeDialog: 'none',\n            displayRetriveSuccessDialog: 'none',\n            targetBookBinNumber: 0,\n            bookshelfDim: [],\n            storageDim: [],\n        }\n    }\n\n    updateBookshelfDim = (newDim) => {\n        this.setState(() => ({\n            bookshelfDim: newDim\n        }), function () {\n        })\n    }\n\n    updateStorageDim = (newDim) => {\n        this.setState(() => ({\n            storageDim: newDim\n        }), function () {\n        })\n    }\n\n    onAnimComplete = () => {\n        if (this.state.animationShow) {\n            setTimeout(() => {\n                let steps = this.state.steps;\n                this.setState({\n                    books: steps[this.state.pointer],\n                    animationShow: false,\n                })\n            }, 1700)\n        }\n    }\n\n    dragHandler = (item, toLocation, toBin, toLevel, toPosition) => {\n        var is_empty = 0;\n        var shelf_book = 1;\n        var storedBooks = getStoredBooks();\n        for (var i = 0; i < storedBooks.length; i++) {\n            if (storedBooks[i].name !== item.name && toLocation === 1) {\n                if (storedBooks[i].level === toLevel && storedBooks[i].position === toPosition) {\n                    is_empty = 1;\n                }\n            }\n\n            if (storedBooks[i].location === 1) {\n                shelf_book += 1;\n            }\n        }\n\n        if (toLocation === 1 && shelf_book > this.state.numOfShelfLevels * this.state.numOfBooksPerLevel) {\n            is_empty = 2;\n        }\n\n        if (is_empty === 0) {\n            for (i = 0; i < storedBooks.length; i++) {\n                if (storedBooks[i].code === item.code) {\n                    if (storedBooks[i].location === 0 && toLocation === 1) {\n                        if (item.name === this.state.value) {\n                            this.handleToStudent();\n                        } else if (this.state.value) {\n                            message.error(\"Moved a wrong book! Please move \" + this.state.value + \" again!\");\n                        }\n                    }\n                    storedBooks[i].name = item.name;\n                    storedBooks[i].location = toLocation;\n                    storedBooks[i].bin = toBin;\n                    storedBooks[i].level = toLevel;\n                    storedBooks[i].position = toPosition\n\n                    var storedBooksJson = JSON.stringify(storedBooks);\n                    localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                    if (item.name === this.state.value) {\n                        // update catalog\n                        this.setState({ catalogShow: true })\n                    }\n                    this.setState({ animationShow: false, books: getStoredBooks() })\n                }\n            }\n        }\n        else if (is_empty === 1) {\n            message.error(\"A book already exists on this position. Please choose another position as a librarian again!\");\n            this.setState({ error: 1 });\n        }\n        else {\n            message.error(\"The bookshelf is full. Please remove a book from the shelf to storage bin before adding another book to the shelf.\", 15);\n            message.info(\"You can remove the book with least frequency.\", 15);\n            this.setState({ error: 1 });\n        }\n    }\n\n    showRetriveSuccess() {\n        if (this.state.isSuccess === true) {\n            this.setState({\n                displayRetriveSuccessDialog: 'block',\n                displayNoticeDialog: 'none'\n            })\n        }\n    }\n\n    dbclick = () => {\n        document.ondblclick = DoubleClick.bind(this);\n        function DoubleClick(e) {\n            if (e.target.draggable === true) {\n                let book_name = e.target.offsetParent.innerText;\n                let data = sessionStorage.getItem('STORED_BOOK_KEY');\n                let retrieveSuccess = false;\n                let storedBooks = getStoredBooks();\n                let found = storedBooks.find(book => book.name === book_name)\n                if (found) {\n                    if (found.location === 1) {\n                        if (data === book_name && book_name === this.state.value) {\n                            retrieveSuccess = true;\n                            this.setState({\n                                isSuccess: retrieveSuccess,\n                            });\n                            this.showRetriveSuccess();\n                            let today = new Date();\n                            let index = storedBooks.indexOf(found)\n                            found.frequency += 1;\n                            found.last_borrowed = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n                            storedBooks[index] = found\n                            let storedBooksJson = JSON.stringify(storedBooks);\n                            localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                            sessionStorage.setItem('STORED_BOOK_KEY', '');\n                            this.setState({\n                                books: getStoredBooks()\n                            });\n                        }\n                        else if (this.state.value && data) {\n                            message.warning(\"Chose a wrong book. Please try again!\")\n                        }\n                    }\n                    if (found.location === 0 && this.state.value && data) {\n                        message.warning(\"Cannot retrieve book in storage! Please drag the book to bookshelf.\")\n                    }\n                }\n            }\n        }\n    }\n\n    catalogClose = () => this.setState({ catalogShow: false });\n\n    componentDidUpdate(prevProps, prevStates) {\n        if (this.state.error !== prevStates.error) {\n            this.setState({\n                books: getStoredBooks(),\n            });\n            this.setState({ error: 0 });\n        }\n    }\n\n    showToLibrarianDialog = () => {\n        this.setState({\n            displayToLibrarianDialog: 'block',\n            displayNoticeDialog: 'none',\n            displayRetriveSuccessDialog: 'none'\n        })\n    }\n\n    handleToLibrarian = () => {\n        this.setState({\n            displayToLibrarianDialog: 'none',\n            displayMoveBookDialog: 'block',\n            displayRetriveSuccessDialog: 'none'\n        })\n        this.props.handleRoleChange(\"Librarian\");\n\n    }\n\n    handleToStudent = () => {\n        this.setState({\n            displayToLibrarianDialog: 'none',\n            displayMoveBookDialog: 'none',\n            displayNoticeDialog: 'block',\n            displayRetriveSuccessDialog: 'none',\n        })\n        this.props.handleRoleChange(\"Student\");\n    }\n\n    handleFinishDialog = () => {\n        this.setState({\n            displayNoticeDialog: 'none'\n        })\n    }\n\n    onSearch = (value) => {\n        if (value === \"\") {\n            alert('Please input a name!');\n        } else {\n            storeBook(value, this.state.numOfBins);\n            this.setState({\n                catalogShow: true,\n                value: value,\n                books: getStoredBooks()\n            })\n            sessionStorage.setItem('STORED_BOOK_KEY', value)\n            let books = getStoredBooks()\n            let targetBook = books.find(book => book.name === value)\n            if (targetBook) {\n                if (targetBook.location === 0) {\n                    this.showToLibrarianDialog();\n                    this.setState({ targetBookBinNumber: targetBook.bin, animationShow: false });\n                    this.handleFaultsIncrement();\n                }\n                if (targetBook.location === 1) {\n                    this.setState({ displayNoticeDialog: 'block', displayRetriveSuccessDialog: 'none', animationShow: false });\n                    message.warn(\"Please double click on the book to retrieve\");\n                }\n            }\n        }\n    }\n\n    handleUpload = e => {\n        /* To do: upload error handling */\n        if (e.target.files[0]) {\n            let fileReader = new FileReader();\n            fileReader.readAsText(e.target.files[0], \"UTF-8\");\n            fileReader.onload = e => {\n                // check empty array; todo: check format\n                if ((JSON.parse(e.target.result).length > 0)) {\n                    this.setState({\n                        books: JSON.parse(e.target.result)[0],\n                        steps: JSON.parse(e.target.result),\n                        pointer: 0,\n                        disableNext: false,\n                        flyingBooks: [],\n                        animationShow: true,\n                        bouncingBooks: JSON.parse(e.target.result)[0]\n                    });\n                    if (JSON.parse(e.target.result)[0].length > 0) {\n                        this.setState({ pageFaults: JSON.parse(e.target.result)[0][0].faults })\n                    }\n                    else {\n                        this.setState({ pageFaults: 0 })\n                    }\n                    localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(JSON.parse(e.target.result)[0]))\n                    localStorage.setItem('STORED_STEP_KEY', JSON.stringify(JSON.parse(e.target.result)))\n                    message.success(\"The Json file has uploaded successfully!\")\n                    // set to libarian mode automatically with both bookshelf and storage\n                    this.props.handleRoleChange(\"Librarian\");\n                }\n                else {\n                    message.error(\"There is something wrong with your file. Please try again!\")\n                }\n                this.hiddenFileInput.current.value = \"\"; // Enable uploading duplicate files\n            };\n        }\n    };\n\n    handleClickUpload = e => {\n        this.hiddenFileInput.current.click();\n    }\n\n    handleClickRecord = () => {\n        const storedSteps = getStoredSteps();\n        var currentStep = this.state.books;\n        currentStep.map(book => book.faults = this.state.pageFaults)\n        if (JSON.stringify(storedSteps[storedSteps.length - 1]) === JSON.stringify(currentStep)) {\n            console.log(\"Duplicate step\")\n            message.error(\"Duplicate step\")\n        }\n        else {\n            console.log(\"Step added\");\n            message.success(\"Step added\")\n            storedSteps.push(currentStep);\n        }\n        const storedStepsJson = JSON.stringify(storedSteps);\n        localStorage.setItem('STORED_STEP_KEY', storedStepsJson);\n        this.setState({ steps: storedSteps });\n    }\n\n    handleClickPrevious() {\n        const fileContent = this.state.steps;\n        if (fileContent && this.state.pointer > 0) {\n            this.setState((prevState) => ({\n                pointer: prevState.pointer - 1,\n                disableNext: false,\n                animationShow: false,\n                bouncingBooks: [],\n            }), function () {\n                this.setState({ books: fileContent[this.state.pointer] })\n                if (fileContent[this.state.pointer].length > 0) {\n                    this.setState({ pageFaults: fileContent[this.state.pointer][0].faults })\n                }\n                else {\n                    this.setState({ pageFaults: 0 })\n                }\n                localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer]))\n                message.success(\"Previous clicked! You are at step \" + (this.state.pointer + 1))\n            });\n        }\n    }\n\n    getDimension(level, position, binId) {\n        const bookshelfDim = this.state.bookshelfDim;\n        const storageDim = this.state.storageDim;\n        let dim = [];\n        if (level !== 0 && position !== 0) {\n            dim = bookshelfDim.find(bookstand => bookstand.level === level && bookstand.position === position)\n            if (dim) {\n                return ({ x: dim.x, y: dim.y })\n            }\n        }\n        if (binId !== 0) {\n            dim = storageDim.find(bin => bin.binId === binId)\n            if (dim) {\n                return ({ x: dim.x, y: dim.y })\n            }\n        }\n    }\n\n    handleClickNext() {\n        const fileContent = this.state.steps;\n        if (fileContent && this.state.pointer < fileContent.length - 1) {\n            let currStep = fileContent[this.state.pointer]\n            let nextStep = fileContent[this.state.pointer + 1]\n            let existingBook = []\n            let newBook = []\n            for (let i = 0; i < currStep.length; i++) {\n                // compare existing book location\n                if (nextStep.length > 0 && currStep[i].code === nextStep[i].code &&\n                    (currStep[i].level !== nextStep[i].level ||\n                        currStep[i].position !== nextStep[i].position ||\n                        currStep[i].bin !== nextStep[i].bin)) {\n                    if (currStep[i].location === 1 &&\n                        nextStep[i].location === 0) {\n                        let from = this.getDimension(currStep[i].level, currStep[i].position, 0)\n                        let to = this.getDimension(0, 0, nextStep[i].bin)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                    if (currStep[i].location === 0 &&\n                        nextStep[i].location === 1) {\n                        let from = this.getDimension(0, 0, currStep[i].bin)\n                        let to = this.getDimension(nextStep[i].level, nextStep[i].position, 0)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                    if (currStep[i].location === 1 &&\n                        nextStep[i].location === 1) {\n                        let from = this.getDimension(currStep[i].level, currStep[i].position, 0)\n                        let to = this.getDimension(nextStep[i].level, nextStep[i].position, 0)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                    if (currStep[i].location === 0 &&\n                        nextStep[i].location === 0) {\n                        let from = this.getDimension(0, 0, currStep[i].bin)\n                        let to = this.getDimension(0, 0, nextStep[i].bin)\n                        existingBook.push({\n                            code: currStep[i].code,\n                            name: currStep[i].name,\n                            created_date: nextStep[i].created_date,\n                            frequency: nextStep[i].frequency,\n                            last_borrowed: nextStep[i].last_borrowed,\n                            from: { location: currStep[i].location, level: currStep[i].level, position: currStep[i].position, bin: currStep[i].bin },\n                            to: { location: currStep[i].location, level: nextStep[i].level, position: nextStep[i].position, bin: nextStep[i].bin },\n                            bezier: { x: to.x - from.x, y: to.y - from.y }\n                        })\n                    }\n                }\n            }\n\n            if (nextStep.length > currStep.length) {\n                // handling new added book\n                for (let j = currStep.length; j < nextStep.length; j++) {\n                    newBook.push(nextStep[j])\n                }\n            }\n\n            this.setState({\n                flyingBooks: existingBook,\n                bouncingBooks: newBook,\n                animationShow: true,\n                pointer: this.state.pointer + 1,\n                books: fileContent[this.state.pointer],\n            })\n            if (fileContent[this.state.pointer + 1].length > 0) {\n                this.setState({ pageFaults: fileContent[this.state.pointer + 1][0].faults })\n            }\n            else {\n                this.setState({ pageFaults: 0 })\n            }\n            localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer + 1]))\n            message.success(\"Next clicked! You are at step \" + (this.state.pointer + 2))\n        }\n        if (this.state.pointer >= fileContent.length - 2) {\n            this.setState((prevState) => ({\n                disableNext: !prevState.disableNext\n            }))\n        }\n    }\n\n    handleClickShowSteps() {\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn,\n            displayStepInfos: prevState.isToggleOn ? 'none' : 'block'\n        }));\n    }\n\n    // used for step infos inner scroll\n    handleInfiniteOnLoad = () => {\n        let { steps } = this.state;\n        this.setState({\n            loading: true,\n        });\n        if (steps.length > 15) {\n            message.warning('Infinite List loaded all');\n            this.setState({\n                hasMore: false,\n                loading: false,\n            });\n            return;\n        }\n    }\n    handleSelectChange(value) {\n        console.log(`selected ${value}`);\n        this.setState({ undoStep: value })\n    }\n\n    handleConfirm = () => {\n        if (this.state.undoStep !== null && this.state.undoStep > 1) {\n            this.setState({\n                steps: this.state.steps.slice(0, this.state.undoStep - 1),\n                books: this.state.steps[this.state.undoStep - 2],\n                pointer: this.state.undoStep - 2,\n            })\n            if (this.state.steps[this.state.undoStep - 2].length > 0){\n                this.setState({pageFaults: this.state.steps[this.state.undoStep - 2][0].faults})\n            }\n            else {\n                this.setState({pageFaults: 0})\n            }\n            this.handleToStudent();\n            localStorage.setItem('STORED_STEP_KEY', JSON.stringify(this.state.steps.slice(0, this.state.undoStep - 1)))\n            localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(this.state.steps[this.state.undoStep - 2]))\n            message.success('Step ' + this.state.undoStep + ' and all the following steps have been removed. Now you can redo the recording from there.');\n        }\n        else if (this.state.undoStep === 1) {\n            this.setState({\n                steps: [],\n                books: [],\n                pointer: 0,\n                pageFaults: 0,\n            })\n            localStorage.setItem('STORED_STEP_KEY', '[]')\n            localStorage.setItem('STORED_BOOK_KEY', '[]')\n            this.handleToStudent();\n        }\n        else {\n            message.error('Step value cannot be empty! Please try again to select a step.');\n        }\n\n    };\n\n    onChangeLevelInput = value => {\n        this.setState({\n            numOfShelfLevels: value,\n        });\n    };\n\n    onChangePositionInput = value => {\n        if (value === 4) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '165px',\n                bookcaseWidth: '475px',\n                bookstandMarginTop: '60px'\n            });\n        } else if (value === 5) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '200px',\n                bookcaseWidth: '567px',\n                bookstandMarginTop: '90px',\n                bookstandMarginLeft: '3px',\n            });\n        } else {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '120px',\n                bookcaseWidth: '340px',\n                bookstandMarginTop: '30px',\n                bookstandMarginLeft: '5px',\n            });\n        }\n    };\n    handleFaultsIncrement = () => {\n        localStorage.setItem('STORED_FAULTS_KEY', this.state.pageFaults + 1);\n        this.setState((prevState) => ({\n            pageFaults: prevState.pageFaults + 1,\n        }))\n    };\n\n    hideConfig = () => {\n        this.setState({\n            configVisible: false,\n        });\n    };\n\n    handleConfigVisibleChange = configVisible => {\n        this.setState({ configVisible });\n    };\n\n    render() {\n        const role = this.props.role;\n        const { Option } = Select;\n\n        return (\n            <div className=\"main\" >\n                <Container fluid=\"xxl\">\n                    <Row>\n                        <Col style={{ flexGrow: 1.2, marginLeft: 25 }}>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickPrevious}\n                                disabled={this.state.pointer === 0 ? true : false}>\n                                Previous\n                            </Button>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickUpload}>\n                                Upload Json\n                            </Button>\n                            <input type=\"file\"\n                                ref={this.hiddenFileInput}\n                                onChange={this.handleUpload}\n                                style={{ display: 'none' }}\n                            />\n                            <Button type=\"primary\"\n                                onClick={this.handleClickNext}\n                                disabled={this.state.disableNext}>\n                                Next\n                            </Button>\n                        </Col>\n                        <Col style={{ flexGrow: 1.5 }}>\n                            <Button\n                                type=\"primary\"\n                                href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                                    JSON.stringify(this.state.steps)\n                                    // JSON.stringify(JSON.parse(localStorage.getItem(`STORED_STEP_KEY`)))\n                                )}`}\n                                download=\"steps.json\"\n                            >\n                                Download Json\n                            </Button>\n                            <Tooltip placement=\"bottom\" title=\"Have any confusion? Check user manual from overview button.\">\n                                <Button type=\"primary\" onClick={this.handleClickRecord}>Record Step</Button>\n                            </Tooltip>\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_STEP_KEY\", \"[]\");\n                                this.setState({ steps: [], pointer: 0 })\n                            }}>Clear all Steps</Button>\n                        </Col>\n                        <Col>\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_BOOK_KEY\", \"[]\");\n                                localStorage.setItem(\"STORED_STEP_KEY\", \"[]\");\n                                localStorage.setItem(\"STORED_FAULTS_KEY\", 0);\n                                this.queryRef.current.state.value = \"\";\n                                this.setState({\n                                    books: [],\n                                    steps: [],\n                                    bouncingBooks: [],\n                                    flyingBooks: [],\n                                    pageFaults: 0,\n                                    value: \"\",\n                                    displayMoveBookDialog: 'none',\n                                    displayToLibrarianDialog: 'none',\n                                    displayNoticeDialog: 'none',\n                                    displayRetriveSuccessDialog: 'none',\n                                });\n                            }}>Reset Library</Button>\n                            <Button type=\"primary\" onClick={this.handleClickShowSteps}>\n                                {this.state.isToggleOn ? 'Hide Steps Info' : 'Show Steps Info'}\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 6, offset: 3 }}>\n                            <Select placeholder=\"Select a step\" style={{ width: 120 }} onChange={this.handleSelectChange}>\n                                {this.state.steps.map((step) => (\n                                    <Option key={this.state.steps.indexOf(step)} value={this.state.steps.indexOf(step) + 1}>{this.state.steps.indexOf(step) + 1}</Option>\n                                ))}\n                            </Select>\n                            <Popconfirm\n                                title={\"Are you sure to undo step \" + this.state.undoStep + \" and all the following steps?\"}\n                                onConfirm={this.handleConfirm}\n                                okText=\"Yes\"\n                                cancelText=\"No\">\n                                <Button>Undo</Button>\n                            </Popconfirm>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h5 className=\"computer-title\"><strong>Catalog Computer</strong></h5>\n                            <div className={(role === \"Librarian\") ? \"wrapper\" : \"\"}>\n                                <div className={(role === \"Librarian\") ? \"is-disabled\" : \"\"}>\n                                    <div className=\"search-monitor\">\n                                        <div className=\"search-container\">\n                                            <Row>\n                                                Please Search for any Book\n                                            </Row>\n                                            <Row>\n                                                <div className=\"form-inline mt-4 mb-4\" >\n                                                    <Input.Search\n                                                        type=\"text\"\n                                                        placeholder=\"Find a Book\"\n                                                        ref={this.queryRef}\n                                                        onClick={event => {\n                                                            message.info(\"You can enter any book you want\")\n                                                        }}\n                                                        enterButton=\"Search\"\n                                                        onSearch={this.onSearch}\n                                                    />\n                                                </div>\n                                            </Row>\n                                            <Row>\n                                                <strong>Catalog Card</strong>\n                                            </Row>\n                                            <Row>\n                                                <Catalog\n                                                    query={this.state.value}\n                                                    onHide={this.catalogClose}\n                                                    show={this.state.catalogShow}\n                                                    numOfBins={this.state.numOfBins}\n                                                    handleRoleChange={this.props.handleRoleChange}\n                                                />\n                                            </Row>\n                                            <Row>\n                                                <div style={{ display: this.state.displayToLibrarianDialog }}>\n                                                    <strong style={{ display: this.state.displayToLibrarianDialog }}>Sorry, the book is not available now. You need to wait for librarian to retrieve the book from storage.</strong>\n                                                    <Button type=\"primary\" onClick={this.handleToLibrarian}>Accept</Button>\n                                                </div>\n                                                <div style={{ display: this.state.displayNoticeDialog }}>\n                                                    <strong style={{ display: this.state.displayNoticeDialog }}>The book is available! Please refer to the information on the catalog card, and retrieve the book by double clicking.</strong>\n                                                </div>\n                                                <div style={{ display: this.state.displayRetriveSuccessDialog }}>\n                                                    <strong style={{ display: this.state.displayRetriveSuccessDialog }}>You have retrieved {this.state.value} successfully! Thank you so much!</strong>\n                                                </div>\n                                            </Row>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pageFaults\">\n                                    <Card\n                                        style={{\n                                            width: 320,\n                                            height: 115,\n                                            marginTop: 25,\n                                            textAlign: 'center',\n                                            marginLeft: 20\n                                        }}>\n                                        <Statistic\n                                            title=\"Page Faults\"\n                                            value={this.state.pageFaults}\n                                            valueStyle={{ color: '#cf1322' }}\n                                        />\n                                    </Card>\n                                </div>\n                            </div>\n                        </Col>\n                        <DndProvider backend={HTML5Backend}>\n                            <Col className=\"bookshelf-view\" style={{ marginLeft: 40 }}>\n                                <h5 className=\"computer-title\">\n                                    <strong>Bookshelf</strong>\n                                    <Popover\n                                        content={\n                                            <div>\n                                                <p><strong>Number of levels:</strong>  <InputNumber min={1} max={8} value={this.state.numOfShelfLevels} onChange={this.onChangeLevelInput} /> (Range: 1~8)</p>\n                                                <p><strong>Number of positions per level:</strong> <InputNumber min={3} max={5} value={this.state.numOfBooksPerLevel} onChange={this.onChangePositionInput} /> (Range: 3~5)</p>\n                                                <a onClick={this.hideConfig} className=\"closeButton\">Close</a>\n                                            </div>\n                                        }\n                                        placement=\"right\"\n                                        title=\"Bookshelf Control Panel\"\n                                        trigger=\"click\"\n                                        visible={this.state.configVisible}\n                                        onVisibleChange={this.handleConfigVisibleChange}\n                                    >\n                                        <a className=\"configButton\">Build Your Own</a>\n                                    </Popover>\n                                </h5>\n                                <div>\n                                    <Bookshelf\n                                        numOfLevels={this.state.numOfShelfLevels}\n                                        numOfBooksPerLevel={this.state.numOfBooksPerLevel}\n                                        bookcaseHeight={this.state.bookcaseHeight}\n                                        bookcaseWidth={this.state.bookcaseWidth}\n                                        bookstandMarginTop={this.state.bookstandMarginTop}\n                                        bookstandMarginLeft={this.state.bookstandMarginLeft}\n                                        books={this.state.books}\n                                        dragHandler={this.dragHandler}\n                                        dbclick={this.dbclick()}\n                                        animationShow={this.state.animationShow}\n                                        bouncingBooks={this.state.bouncingBooks}\n                                        flyingBooks={this.state.flyingBooks}\n                                        bookshelfDim={this.state.bookshelfDim}\n                                        updateBookshelfDim={this.updateBookshelfDim}\n                                        showStepsInfo={this.state.isToggleOn}\n                                        onAnimComplete={this.onAnimComplete.bind(this)}\n                                    />\n                                </div>\n                            </Col>\n                            <Col className=\"storage-view\">\n                                <Row>\n                                    <div className=\"bubble bubble-bottom-left\" style={{ display: (role === \"Student\" ? 'none' : this.state.displayMoveBookDialog) }}>\n                                        <p>Your role is librarian now! Please move {this.state.value} from bin {this.state.targetBookBinNumber}  to bookshelf.</p>\n                                    </div>\n                                </Row>\n                                <Row style={{ justifyContent: \"center\" }}>\n                                    <div className={(role === \"Student\") ? \"wrapper\" : \"\"}>\n                                        <div className={(role === \"Student\") ? \"is-disabled\" : \"\"}>\n                                            <Storage\n                                                books={this.state.books}\n                                                numOfBins={this.state.numOfBins}\n                                                dragHandler={this.dragHandler.bind(this)}\n                                                animationShow={this.state.animationShow}\n                                                bouncingBooks={this.state.bouncingBooks}\n                                                flyingBooks={this.state.flyingBooks}\n                                                storageDim={this.state.storageDim}\n                                                updateStorageDim={this.updateStorageDim}\n                                                showStepsInfo={this.state.isToggleOn}\n                                                numOfLevels={this.state.numOfShelfLevels}\n                                                numOfBooksPerLevel={this.state.numOfBooksPerLevel}\n                                                onAnimComplete={this.onAnimComplete.bind(this)}\n                                            />\n                                        </div>\n                                    </div>\n                                </Row>\n                            </Col>\n                        </DndProvider>\n                        <Col style={{ display: this.state.displayStepInfos }}>\n                            <h5 className=\"computer-title\"><strong>Steps Info</strong></h5>\n                            <div className=\"demo-infinite-container\">\n                                <InfiniteScroll\n                                    initialLoad={false}\n                                    pageStart={0}\n                                    loadMore={this.handleInfiniteOnLoad}\n                                    hasMore={!this.state.loading && this.state.hasMore}\n                                    useWindow={false}\n                                >\n                                    <List\n                                        dataSource={this.state.steps}\n                                        bordered\n                                        renderItem={step => (\n                                            <List.Item>\n                                                <h5>Step {this.state.steps.indexOf(step) + 1}: </h5>\n                                                {step.map(book => (\n                                                    <p key={step.indexOf(book)}><strong>{book.name}</strong> {(book.location === 0 ? \"storage: bin\" + book.bin : \"bookshelf: level\" + book.level + \"; position\" + book.position)}</p>\n                                                ))}\n                                                <p><strong>Current page faults:</strong> {step[0].faults}</p>\n                                            </List.Item>\n                                        )} />\n                                </InfiniteScroll>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div >\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport { Drawer } from 'antd';\nimport \"./App.css\";\n\nclass App extends React.Component {\n\n  state = {\n    role: \"Student\",\n    visible: false\n  };\n\n  handleValueChange = (e) => {\n    console.log('role button checked', e.target.value);\n    this.setState({ role: e.target.value })\n  }\n\n  handleRoleChange(role) {\n    this.setState({ role: role })\n  }\n\n  clickOverview = (e) => {\n    this.showDrawer();\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header role={this.state.role} onChange={this.handleValueChange.bind(this)} clickOverview={this.clickOverview.bind(this)} />\n        <Drawer\n          title=\"Introduction\"\n          placement=\"right\"\n          width=\"600px\"\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}\n        >\n          <h5>Memory Paging vs. Library Analogy</h5>\n          <ul>\n            <li>A <strong>page</strong> is a <strong>book</strong> on the bookshelf.</li>\n            <li><strong>Virtual memory</strong> is the <strong>catelog computer</strong> with list of names of books available.</li>\n            <li><strong>Physical memory</strong> is the <strong>bookshelf</strong> with level numbers and position numbers as 'addresses'.</li>\n            <li><strong>Swap space</strong> is the basement <strong>book storage</strong> where unpopular books are kept.</li>\n            <li><strong>Page table</strong> is the <strong>catalog card</strong> that maps a book name to level number and position number.</li>\n            <li><strong>Operating system</strong> is the <strong>librarian</strong> in charge of organizing the books.</li>\n          </ul>\n\n          <h5>Bookshelf Function Instruction (For each book)</h5>\n          <ul>\n            <li>Mouse over 2 seconds for the book details.</li>\n            <li>Double click for retriving the book.</li>\n            <li>The red badge at the corner indicates its retrieve frequency.</li>\n          </ul>\n\n          <h5>Record Series Buttons Function</h5>\n          <ul>\n            <li><strong>Record Step: </strong>Record current books in the library.</li>\n            <li><strong>Clear all Steps: </strong>Clear all recorded steps.</li>\n            <li><strong>Download Json: </strong>Download all recorded steps as Json file.</li>\n            <li><strong>Upload Json: </strong>Upload downloaded Json file or formatted Json file with steps and show with initial step.</li>\n            <li><strong>Next: </strong>Go to the next step in uploaded Json file.</li>\n            <li><strong>Previous: </strong>Go to the previous step in uploaded Json file.</li>\n          </ul>\n\n          <h5>Record Buttons User Manual</h5>\n          <ul>\n            <li>Recording process:</li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Record Step\" button after any actions or movement until you are satisfied with books in current library.</li>\n              <li><strong>Adanced Step:</strong> Click on the dropdown menu from \"Undo\" button and select the specific step you want to erase and redo recording process following step 1.</li>\n              <li><strong>Step 2:</strong> Click on \"Download Json\" button to export the Json file with all steps you recorded recently.</li>\n            </ul>\n            <br />\n            <li>Uploading and display process: </li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Upload Json\" button to import the downloaded Json file and books from the first step would appear on screen as default.</li>\n              <li><strong>Step 2:</strong> Display books from Json file step by step.</li>\n              <ul>\n                <li><strong>Step 2.1:</strong> Click on \"next\" button to display books from the next step.</li>\n                <li><strong>Step 2.2:</strong> Click on \"previous\" button to display books from the previous step.</li>\n              </ul>\n            </ul>\n\n          </ul>\n        </Drawer>\n        <Main role={this.state.role} handleRoleChange={this.handleRoleChange.bind(this)} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}