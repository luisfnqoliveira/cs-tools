{"version":3,"sources":["assets/images/Upitt_logo_400x400.jpg","components/Header.js","components/Footer.js","utilities/items.js","assets/images/bookCover.jpg","components/Book.js","components/BookStand.js","components/SingleBookCase.js","components/Bookshelf.js","components/Catalog.js","components/Bin.js","components/Storage.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["roles","label","value","Role","Group","options","onChange","this","props","role","optionType","buttonStyle","Component","Header","className","src","upittLogo","alt","style","color","onClick","clickOverview","Footer","ItemTypes","Book","Meta","Card","useDrag","type","item","code","name","author","level","position","created_date","frequency","last_borrowed","collect","monitor","isDragging","drag","content","ref","count","title","mouseEnterDelay","hoverable","left","width","height","cover","bookcover","description","query","message","success","BookStand","positionIntro","useDrop","accept","drop","dragHandler","isOver","document","addEventListener","event","preventDefault","books","Object","keys","length","constructor","placement","shelfBook","filter","book","location","map","i","SingleBookCase","levelIntro","numOfBooksPerLevel","bookstands","bookstandMarginTop","bookstandMarginLeft","bookcaseSize","bookcaseHeight","bookcaseWidth","bookstandMargin","marginTop","marginLeft","Bookshelf","state","numOfLevels","bookcases","numOfBooks","dbclick","STORED_BOOK_KEY","Catalog","React","useState","setLocation","setLevel","setPosition","bin","setBin","useEffect","show","found","retrievedBooksString","localStorage","getItem","JSON","parse","setItem","err","getStoredBooks","find","numOfBins","Bin","toBin","binId","binTitle","storageBook","trigger","Storage","bins","binBooks","getStoredSteps","retrievedStepsString","getStoredFaults","retrivedNumOfFaults","Main","toLocation","toLevel","toPosition","booksCopy","bookDragged","index","indexOf","setState","is_empty","shelf_book","storedBooks","numOfShelfLevels","sessionStorage","storedBooksJson","stringify","catalogShow","handleRoleChange","error","info","ondblclick","e","target","draggable","book_name","offsetParent","innerText","data","alert","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","window","reload","warning","catalogClose","handleClickSearch","console","log","min","max","bookObj","require","uniqid","Math","ceil","floor","random","push","storeBook","targetBook","handleFaultsIncrement","warn","handleUpload","fileReader","FileReader","readAsText","files","onload","result","steps","handleClickUpload","hiddenFileInput","current","click","handleClickRecord","storedSteps","currentStep","storedStepsJson","handleInfiniteOnLoad","loading","hasMore","handleConfirm","undoStep","slice","onChangeLevelInput","onChangePositionInput","pageFaults","prevState","createRef","handleClickNext","bind","handleClickPrevious","handleClickShowSteps","handleSelectChange","lib","pointer","isToggleOn","display","disableNext","prevProps","prevStates","fileContent","Option","Select","Container","fluid","Row","Col","md","valueStyle","disabled","href","encodeURIComponent","download","span","offset","placeholder","step","onConfirm","okText","cancelText","aria-label","onKeyPress","key","onHide","DndProvider","backend","HTML5Backend","initialLoad","pageStart","loadMore","useWindow","dataSource","bordered","renderItem","Item","id","App","visible","handleValueChange","showDrawer","onClose","closable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+SAAe,MAA0B,+C,gCCMnCA,EAAQ,CACb,CAAEC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,YAAaC,MAAO,cAGxBC,E,4JAEL,WACC,OACC,cAAC,IAAMC,MAAP,CACCC,QAASL,EACTM,SAAUC,KAAKC,MAAMF,SACrBJ,MAAOK,KAAKC,MAAMC,KAClBC,WAAW,SACXC,YAAY,c,GATGC,aAmCJC,E,4JAlBd,WACC,OACC,yBAAQC,UAAU,aAAlB,UACC,qBAAKC,IAAKC,EAAWC,IAAI,OAAOH,UAAU,aAC1C,mBAAGA,UAAU,QAAb,2CAGA,qBAAKA,UAAU,kBAAf,SACC,mBAAGI,MAAO,CAACC,MAAO,SAAUC,QAASb,KAAKC,MAAMa,cAAhD,wBAED,qBAAKP,UAAU,cAAf,SACC,cAAC,EAAD,CAAML,KAAMF,KAAKC,MAAMC,KAAMH,SAAUC,KAAKC,MAAMF,oB,GAblCM,aCbNU,G,mKATX,WACI,OACI,wBAAQR,UAAY,SAApB,0C,GAHSF,c,0CCHRW,EACH,O,2BCDK,MAA0B,sC,kBCyD1BC,MAlDf,SAAchB,GAAQ,IACViB,EAASC,IAATD,KADS,EAEcE,aAAQ,iBAAO,CAC1CC,KAAML,EACNM,KAAM,CACFC,KAAMtB,EAAMsB,KACZC,KAAMvB,EAAMuB,KACZC,OAAQxB,EAAMwB,OACdC,MAAOzB,EAAMyB,MACbC,SAAU1B,EAAM0B,SAChBC,aAAc3B,EAAM2B,aACpBC,UAAW5B,EAAM4B,UACjBC,cAAe7B,EAAM6B,eAEzBC,QAAS,SAAAC,GAAO,MAAK,CACjBC,aAAcD,EAAQC,mBAfb,mBAEMC,GAFN,KAERD,WAFQ,MAmBXE,EACF,gCACI,0CAAalC,EAAM2B,gBACnB,4CAAe3B,EAAM4B,aACrB,gDAAmB5B,EAAM6B,oBAIjC,OACI,qBAAKM,IAAKF,EAAV,SACI,cAAC,IAAD,CAAOG,MAAOpC,EAAM4B,UAApB,SACI,cAAC,IAAD,CAASM,QAASA,EAASG,MAAOrC,EAAMuB,KAAMe,gBAAiB,EAA/D,SACI,cAAC,IAAD,CACIC,WAAS,EACT7B,MAAO,CAAE8B,KAAM,GAAIC,MAAO,GAAIC,OAAQ,IACtCC,MAAO,qBAAKlC,IAAI,YAAYF,IAAKqC,IAHrC,SAKI,cAAC3B,EAAD,CAAMoB,MAAOrC,EAAMuB,KACfsB,YAAa7C,EAAMwB,OACnBZ,QAAS,WACDZ,EAAMuB,OAASvB,EAAM8C,OACrBC,IAAQC,QAAQ,mCAAqChD,EAAMuB,kBCWhF0B,MApDf,SAAmBjD,GACf,IAAMkD,EAAgB,YAAclD,EAAM0B,SADpB,EAIKyB,YAAQ,CAC/BC,OAAQrC,EACRsC,KAAM,SAAChC,EAAMU,GAAP,OAAmB/B,EAAMsD,YAAYjC,EAJ/B,EACF,EAGuDrB,EAAMyB,MAAOzB,EAAM0B,WACpFI,QAAS,SAAAC,GAAO,MAAK,CACjBwB,SAAUxB,EAAQwB,aARJ,mBAIHF,GAJG,KAIbE,OAJa,MAYtBC,SAASC,iBAAiB,QAAQ,SAAUC,GACxCA,EAAMC,oBAGV,IAAMC,EAAQ5D,EAAM4D,MACpB,GAAkC,IAA9BC,OAAOC,KAAKF,GAAOG,QAAgBH,EAAMI,cAAgBH,OACzD,OACI,cAAC,IAAD,CAASI,UAAU,SAAS5B,MAAOa,EAAnC,SACI,qBAAK5C,UAAU,gBAMvB,IAAM4D,EAAYN,EAAMO,QAAO,SAAAC,GAAI,OAAsB,IAAlBA,EAAKC,YAC5C,OACI,cAAC,IAAD,CAASJ,UAAU,SAAS5B,MAAOa,EAAnC,SACI,qBAAK5C,UAAU,YAAY6B,IAAKkB,EAAhC,SACKa,EAAUI,KAAI,SAAAC,GACX,GAAIA,EAAE9C,QAAUzB,EAAMyB,OAAS8C,EAAE7C,WAAa1B,EAAM0B,SAChD,OAAQ,cAAC,EAAD,CAEJJ,KAAMiD,EAAEjD,KACRC,KAAMgD,EAAEhD,KACRC,OAAQ+C,EAAE/C,OACV6C,SAAUE,EAAEF,SACZ5C,MAAO8C,EAAE9C,MACTC,SAAU6C,EAAE7C,SACZC,aAAc4C,EAAE5C,aAChBC,UAAW2C,EAAE3C,UACbC,cAAe0C,EAAE1C,eATZ0C,EAAEjD,cCgBxBkD,E,4JAjDX,WAII,IAJM,IAAD,OACCC,EAAa,SAAW1E,KAAKC,MAAMyB,MACjCiD,EAAuB3E,KAAKC,MAA5B0E,mBACJC,EAAa,GACRJ,EAAI,EAAGA,EAAIG,EAAoBH,IACpCI,EAAU,sBAAOA,GAAP,CAAmB,CACzBjD,SAAU6C,EAAI,EACd9C,MAAO1B,KAAKC,MAAMyB,MAClBmC,MAAO7D,KAAKC,MAAM4D,MAClBgB,mBAAoB7E,KAAKC,MAAM4E,mBAC/BC,oBAAqB9E,KAAKC,MAAM6E,uBAIxC,IAAIC,EAAe,CACfpC,OAAQ3C,KAAKC,MAAM+E,eACnBtC,MAAO1C,KAAKC,MAAMgF,eAGtB,OACI,cAAC,IAAD,CAASf,UAAU,UAAU5B,MAAOoC,EAApC,SACI,qBAAKnE,UAAU,WAAWI,MAAOoE,EAAjC,SAEQH,EAAWL,KAAI,SAAAC,GACX,IAAIU,EAAkB,CAClBC,UAAWX,EAAEK,mBACbO,WAAYZ,EAAEM,qBAElB,OACI,qBAAKvE,UAAU,SAASI,MAAOuE,EAA/B,SACI,cAAC,EAAD,CACIvD,SAAU6C,EAAE7C,SAEZD,MAAO8C,EAAE9C,MACTmC,MAAOW,EAAEX,MACTmB,eAAgBR,EAAEQ,eAClBC,cAAeT,EAAES,cACjBJ,mBAAoBL,EAAEK,mBACtBtB,YAAa,EAAKtD,MAAMsD,aANnBiB,EAAE7C,uB,GAlClBtB,aC6CdgF,E,4MA5CXC,MAAQ,G,4CAIR,WAII,IAJM,IAAD,OACGC,EAAgBvF,KAAKC,MAArBsF,YACAZ,EAAuB3E,KAAKC,MAA5B0E,mBACJa,EAAY,GACPhB,EAAI,EAAGA,EAAIe,EAAaf,IAC7BgB,EAAS,sBAAOA,GAAP,CAAkB,CACvB9D,MAAO8C,EAAI,EACXiB,WAAYd,EACZd,MAAO7D,KAAKC,MAAM4D,MAClBmB,eAAgBhF,KAAKC,MAAM+E,eAC3BC,cAAejF,KAAKC,MAAMgF,cAC1BJ,mBAAoB7E,KAAKC,MAAM4E,mBAC/BC,oBAAqB9E,KAAKC,MAAM6E,uBAGxC,OACI,qBAAKvE,UAAU,YAAf,SAGQiF,EAAUjB,KAAI,SAAAC,GACV,OACI,cAAC,EAAD,CAAgB9C,MAAO8C,EAAE9C,MAErBiD,mBAAoBH,EAAEiB,WACtBT,eAAgBR,EAAEQ,eAClBC,cAAeT,EAAES,cACjBJ,mBAAoBL,EAAEK,mBACtBC,oBAAqBN,EAAEM,oBACvBjB,MAAOW,EAAEX,MACTN,YAAa,EAAKtD,MAAMsD,YACxBmC,QAAS,EAAKzF,MAAMyF,SARflB,EAAE9C,gB,GA5BfrB,a,kCCDlBsF,EAAkB,kBAiBjB,SAASC,EAAQ3F,GAAQ,IAAD,EACG4F,IAAMC,WADT,mBACtBxB,EADsB,KACZyB,EADY,OAEHF,IAAMC,WAFH,mBAEtBpE,EAFsB,KAEfsE,EAFe,OAGGH,IAAMC,WAHT,mBAGtBnE,EAHsB,KAGZsE,EAHY,OAIPJ,IAAMC,WAJC,mBAItBI,EAJsB,KAIjBC,EAJiB,KAoB7B,OAbAN,IAAMO,WAAU,WACd,GAAInG,EAAMoG,KAAM,CACd,IACMC,EAzBZ,WACE,IACE,IAAMC,EAAuBC,aAAaC,QAAQd,GAClD,OAAKY,EAIEG,KAAKC,MAAMJ,IAHhBC,aAAaI,QAAQjB,EAAiB,MAC/B,IAIX,MAAOkB,GAEL,OADAL,aAAaI,QAAQjB,EAAiB,MAC/B,IAaSmB,GACMC,MAAK,SAAA1C,GAAI,OAAIA,EAAK7C,OAASvB,EAAM8C,SACjDuD,IACFP,EAAYO,EAAMhC,UAClB0B,EAASM,EAAM5E,OACfuE,EAAYK,EAAM3E,UAClBwE,EAAOG,EAAMJ,SAGhB,CAACjG,EAAMoG,KAAMpG,EAAM8C,MAAO9C,EAAM+G,YAGjC,gCACE,0CADF,KACqB/G,EAAM8C,MAAO,KAChC,yCAFF,KAEiC,IAAbuB,EAAiB,UAAyB,IAAbA,EAAiB,YAAc,GAAI,KAClF,4CAHF,KAGuB4B,EAHvB,IAG6B,KAC3B,sCAJF,KAIiBxE,EAJjB,IAIyB,KACvB,yCALF,KAKoBC,EALpB,IAK+B,KAC5B,Q,sBCcQsF,MAtDf,SAAahH,GACT,IACMiH,EAAQjH,EAAMkH,MAFJ,EAGW/D,YAAQ,CAC/BC,OAAQrC,EACRsC,KAAM,SAAChC,EAAMU,GAAP,OAAmB/B,EAAMsD,YAAYjC,EAJ7B,EAI8C4F,EAAO,EAAG,IACtEnF,QAAS,SAAAC,GAAO,MAAK,CACjBwB,SAAUxB,EAAQwB,aAPV,mBAGGF,GAHH,KAGPE,OAHO,MAWZrB,EAAW,qBAAK5B,UAAU,mBACxB6G,EAAW,OAASnH,EAAMkH,MAChC,GAAwC,IAApCrD,OAAOC,KAAK9D,EAAM4D,OAAOG,QAAgB/D,EAAM4D,MAAMI,cAAgBH,YAElE,CAEH,IAAIuD,EAAcpH,EAAM4D,MAAMO,QAAO,SAAAC,GAAI,OAAsB,IAAlBA,EAAKC,YAElDnC,EACI,qBAAK5B,UAAU,iBAAf,SAEQ8G,EAAY9C,KAAI,SAAAC,GACZ,OACI,qBAAKjE,UAAU,mBAAf,SACI,cAAC,EAAD,CAEIgB,KAAMiD,EAAEjD,KACRC,KAAMgD,EAAEhD,KACRC,OAAQ+C,EAAE/C,OACV6C,SAAUE,EAAEF,SACZ5C,MAAO8C,EAAE9C,MACTC,SAAU6C,EAAE7C,SACZC,aAAc4C,EAAE5C,aAChBC,UAAW2C,EAAE3C,UACbC,cAAe0C,EAAE1C,eATZ0C,EAAEjD,aAkBvC,OACI,cAAC,IAAD,CAAS2C,UAAU,MAAM5B,MAAO8E,EAAhC,SACI,cAAC,IAAD,CAASjF,QAASA,EAAS+B,UAAU,MAAM5B,MAAO8E,EAAUE,QAAQ,QAApE,SACI,qBAAK/G,UAAU,MAAM6B,IAAKkB,SCE3BiE,E,4MAnDXjC,MAAQ,G,4CAIR,WAAU,IAAD,OACG0B,EAAchH,KAAKC,MAAnB+G,UACAnD,EAAU7D,KAAKC,MAAf4D,MACJ2D,EAAO,GAEX,GAA6C,IAAzC1D,OAAOC,KAAK/D,KAAKC,MAAM4D,OAAOG,QAAgBhE,KAAKC,MAAM4D,MAAMI,cAAgBH,OAC/E,IAAK,IAAIU,EAAI,EAAGA,EAAIwC,EAAWxC,IAC3BgD,EAAI,sBAAOA,GAAP,CAAa,CACbL,MAAO3C,EAAI,EAIXX,MAAO,WAIf,IADI,IAAD,WACMW,GACL,IAAMiD,EAAW5D,EAAMO,QAAO,SAAAC,GAAI,OAAIA,EAAK6B,MAAQ1B,EAAI,KACvDgD,EAAI,sBAAOA,GAAP,CAAa,CACbL,MAAO3C,EAAI,EAIXX,MAAO4D,MAPNjD,EAAI,EAAGA,EAAIwC,EAAWxC,IAAM,EAA5BA,GAYb,OACI,sBAAKjE,UAAU,UAAf,UACI,6BAAI,oDAEAiH,EAAKjD,KAAI,SAAAC,GACL,OACI,cAAC,EAAD,CACI2C,MAAO3C,EAAE2C,MAETtD,MAAOW,EAAEX,MACTN,YAAa,EAAKtD,MAAMsD,aAFnBiB,EAAE2C,iB,GAzCjB9G,a,uECYtB,SAASyG,IACL,IACI,IAAMP,EAAuBC,aAAaC,QAAQ,mBAClD,OAAKF,EAIEG,KAAKC,MAAMJ,IAHdC,aAAaI,QAAQ,kBAAmB,MACjC,IAGb,MAAOC,GACL,MAAO,IAIf,SAASa,IACL,IACI,IAAMC,EAAuBnB,aAAaC,QAAQ,mBAClD,OAAKkB,EAIEjB,KAAKC,MAAMgB,IAHdnB,aAAaI,QAAQ,kBAAmB,MACjC,IAGb,MAAOC,GACL,MAAO,IAIf,SAASe,IACL,IACI,IAAMC,EAAsBrB,aAAaC,QAAQ,qBACjD,OAAKoB,EAIEnB,KAAKC,MAAMkB,IAHdrB,aAAaI,QAAQ,oBAAqB,GACnC,GAGb,MAAOC,GACL,MAAO,I,IA6jBAiB,G,kDAphBX,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IAqCVsD,YAAc,SAACjC,EAAMyG,EAAYb,EAAOc,EAASC,GAC7C,IAAIC,EAAS,YAAO,EAAK5C,MAAMzB,OAC3BsE,EAAcD,EAAU9D,QAAO,SAAAC,GAAI,OAAIA,EAAK9C,OAASD,EAAKC,QAC1D6G,EAAQF,EAAUG,QAAQF,EAAY,IAC1CA,EAAY,GAAG7D,SAAWyD,EAC1BI,EAAY,GAAGjC,IAAMgB,EACrBiB,EAAY,GAAGzG,MAAQsG,EACvBG,EAAY,GAAGxG,SAAWsG,EAC1BC,EAAUE,GAASD,EAAY,GAC/B,EAAKG,SAAS,CAAEzE,MAAOqE,IAKvB,IAHA,IAAIK,EAAW,EACXC,EAAa,EACbC,EAAc3B,IACTtC,EAAI,EAAGA,EAAIiE,EAAYzE,OAAQQ,IAChCiE,EAAYjE,GAAGhD,OAASF,EAAKE,MAAuB,IAAfuG,GACjCU,EAAYjE,GAAG9C,QAAUsG,GAAWS,EAAYjE,GAAG7C,WAAasG,IAChEM,EAAW,GAIa,IAA5BE,EAAYjE,GAAGF,WACfkE,GAAc,GAQtB,GAJmB,IAAfT,GAAoBS,EAAa,EAAKlD,MAAMoD,iBAAmB,EAAKpD,MAAMX,qBAC1E4D,EAAW,GAGE,IAAbA,EAAgB,CAChB,IAAK/D,EAAI,EAAGA,EAAIiE,EAAYzE,OAAQQ,IAAK,CACjCiE,EAAYjE,GAAGjD,OAASD,EAAKC,OACG,IAA5BkH,EAAYjE,GAAGF,UAAiC,IAAfyD,GAGjCY,eAAe/B,QAAQ,kBAAmBtF,EAAKE,MAEnDiH,EAAYjE,GAAGhD,KAAOF,EAAKE,KAC3BiH,EAAYjE,GAAGF,SAAWyD,EAC1BU,EAAYjE,GAAG0B,IAAMgB,EACrBuB,EAAYjE,GAAG9C,MAAQsG,EACvBS,EAAYjE,GAAG7C,SAAWsG,GAE9B,IAAIW,EAAkBlC,KAAKmC,UAAUJ,GACrCjC,aAAaI,QAAQ,kBAAmBgC,GACxC,EAAKN,SAAS,CAAEQ,aAAa,IAEd,IAAff,IACA/E,IAAQC,QAAQ3B,EAAKE,KAAO,kEAC5B,EAAKvB,MAAM8I,iBAAiB,iBAGd,IAAbR,GACLvF,IAAQgG,MAAM,gGACd,EAAKV,SAAS,CAAEU,MAAO,MAGvBhG,IAAQgG,MAAM,qHAAsH,IACpIhG,IAAQiG,KAAK,gDAAiD,IAC9D,EAAKX,SAAS,CAAEU,MAAO,MAlGZ,EAsGnBtD,QAAU,WACNjC,SAASyF,WACT,SAAqBC,GACjB,IAA2B,IAAvBA,EAAEC,OAAOC,UAAoB,CAC7B,IAAIC,EAAYH,EAAEC,OAAOG,aAAaC,UAClCC,EAAOd,eAAelC,QAAQ,mBAElC,GAAIgD,IAASH,EAAW,CACpBI,MAAM,mCAAqCD,GAI3C,IAFA,IAAIhB,EAAc3B,IACd6C,EAAQ,IAAIC,KACPpF,EAAI,EAAGA,EAAIiE,EAAYzE,OAAQQ,IAAK,CACrCiE,EAAYjE,GAAGhD,OAASiI,IACxBhB,EAAYjE,GAAG3C,WAAa,EAE5B4G,EAAYjE,GAAG1C,cAAgB6H,EAAME,cAAgB,KAAOF,EAAMG,WAAa,GAAK,IAAMH,EAAMI,UAAY,IAAMJ,EAAMK,WAAa,IAAML,EAAMM,aAAe,IAAMN,EAAMO,cAEhL,IAAItB,EAAkBlC,KAAKmC,UAAUJ,GACrCjC,aAAaI,QAAQ,kBAAmBgC,GAE5CD,eAAe/B,QAAQ,kBAAmB,IAC1CuD,OAAO7F,SAAS8F,cAGhBpH,IAAQqH,QAAQ,0BA/Hb,EAqInBC,aAAe,kBAAM,EAAKhC,SAAS,CAAEQ,aAAa,KArI/B,EAuJnByB,kBAAoB,WAChB,GAAK,EAAKjF,MAAMvC,MAET,EAzLf,SAAmBvB,EAAMwF,GACrBwD,QAAQC,IAAI,eAAgBjJ,GAC5B,IAR2BkJ,EAAKC,EAQ1BhB,EAAQ,IAAIC,KACZnB,EAAc3B,IAIpB,GAHc2B,EAAY1B,MAAK,SAAA1C,GAC3B,OAAOA,EAAK7C,OAASA,KAGrBmH,eAAe/B,QAAQ,kBAAmBpF,OACvC,CAEH,IACMoJ,EAAU,CACZrJ,KAFSsJ,EAAQ,IAEXC,GACNtJ,KAAMA,EACN8C,SAAU,EACV4B,KAtBmBwE,EAsBQ,EAtBHC,EAsBM3D,EArBtC0D,EAAMK,KAAKC,KAAKN,GAChBC,EAAMI,KAAKE,MAAMN,GACVI,KAAKE,MAAMF,KAAKG,UAAYP,EAAMD,EAAM,GAAKA,IAoB5ChJ,MAAO,EACPC,SAAU,EACVC,aAAc+H,EAAME,cAAgB,KAAOF,EAAMG,WAAa,GAAK,IAAMH,EAAMI,UAAY,IAAMJ,EAAMK,WAAa,IAAML,EAAMM,aAAe,IAAMN,EAAMO,aAC3JrI,UAAW,EACXC,cAAe,GAEnB2G,EAAY0C,KAAKP,GACjB,IAAMhC,EAAkBlC,KAAKmC,UAAUJ,GACvCjC,aAAaI,QAAQ,kBAAmBgC,IAiKpCwC,CAAU,EAAK9F,MAAMvC,MAAO,EAAKuC,MAAM0B,WACvC,EAAKsB,SAAS,CAAEQ,aAAa,EAAMnJ,MAAO,EAAK2F,MAAMvC,QACrD,IACIsI,EADQvE,IACWC,MAAK,SAAA1C,GAAI,OAAIA,EAAK7C,OAAS,EAAK8D,MAAMvC,SACzDsI,IAC4B,IAAxBA,EAAW/G,WACXtB,IAAQiG,KAAK,wCACbjG,IAAQiG,KAAK,eAAiB,EAAK3D,MAAMvC,MAAQ,mCACjD,EAAK9C,MAAM8I,iBAAiB,aAC5B,EAAKuC,yBAEmB,IAAxBD,EAAW/G,WACXtB,IAAQiG,KAAK,0CAA4CoC,EAAW3J,MAAQ,iBAAmB2J,EAAW1J,UAC1GqB,IAAQuI,KAAK,sDAfrB7B,MAAM,yBAzJK,EA8KnB8B,aAAe,SAAArC,GACX,IAAMsC,EAAa,IAAIC,WACvBD,EAAWE,WAAWxC,EAAEC,OAAOwC,MAAM,GAAI,SACzCH,EAAWI,OAAS,SAAA1C,GAChB,EAAKb,SAAS,CACVsD,MAAOlF,KAAKC,MAAMwC,EAAEC,OAAO0C,QAC3BjI,MAAO6C,KAAKC,MAAMwC,EAAEC,OAAO0C,QAAQ,GACnCC,MAAOrF,KAAKC,MAAMwC,EAAEC,OAAO0C,UAE/BtF,aAAaI,QAAQ,kBAAmBF,KAAKmC,UAAUnC,KAAKC,MAAMwC,EAAEC,OAAO0C,QAAQ,KACnFtF,aAAaI,QAAQ,kBAAmBF,KAAKmC,UAAUnC,KAAKC,MAAMwC,EAAEC,OAAO0C,UAC3E9I,IAAQC,QAAQ,8CAzLL,EA6LnB+I,kBAAoB,SAAA7C,GAChB,EAAK8C,gBAAgBC,QAAQC,SA9Ld,EAiMnBC,kBAAoB,WAChB,IAAMC,EAAc3E,IAChB4E,EAAc,EAAKhH,MAAMzB,MACzB6C,KAAKmC,UAAUwD,EAAYA,EAAYrI,OAAS,MAAQ0C,KAAKmC,UAAUyD,IACvE9B,QAAQC,IAAI,kBACZzH,IAAQgG,MAAM,oBAGdwB,QAAQC,IAAI,cACZzH,IAAQC,QAAQ,cAChBoJ,EAAYlB,KAAKmB,IAErB,IAAMC,EAAkB7F,KAAKmC,UAAUwD,GACvC7F,aAAaI,QAAQ,kBAAmB2F,GACxC,EAAKjE,SAAS,CAAEyD,MAAOM,KA/MR,EAyPnBG,qBAAuB,WAAO,IACpBT,EAAU,EAAKzG,MAAfyG,MAIN,GAHA,EAAKzD,SAAS,CACVmE,SAAS,IAETV,EAAM/H,OAAS,GAMf,OALAhB,IAAQqH,QAAQ,iCAChB,EAAK/B,SAAS,CACVoE,SAAS,EACTD,SAAS,KAlQF,EA4QnBE,cAAgB,WACgB,OAAxB,EAAKrH,MAAMsH,UAAqB,EAAKtH,MAAMsH,SAAW,GACtD,EAAKtE,SAAS,CACVyD,MAAO,EAAKzG,MAAMyG,MAAMc,MAAM,EAAG,EAAKvH,MAAMsH,SAAW,GACvD/I,MAAO,EAAKyB,MAAMyG,MAAM,EAAKzG,MAAMsH,SAAW,KAElDpG,aAAaI,QAAQ,kBAAmBF,KAAKmC,UAAU,EAAKvD,MAAMyG,MAAMc,MAAM,EAAG,EAAKvH,MAAMsH,SAAW,KACvGpG,aAAaI,QAAQ,kBAAmBF,KAAKmC,UAAU,EAAKvD,MAAMyG,MAAM,EAAKzG,MAAMsH,SAAW,KAC9F5J,IAAQC,QAAQ,QAAU,EAAKqC,MAAMsH,SAAW,+FAEnB,IAAxB,EAAKtH,MAAMsH,UAChB,EAAKtE,SAAS,CACVyD,MAAO,GACPlI,MAAO,KAEX2C,aAAaI,QAAQ,kBAAmB,MACxCJ,aAAaI,QAAQ,kBAAmB,OAGxC5D,IAAQgG,MAAM,mEA/RH,EAoSnB8D,mBAAqB,SAAAnN,GACjB,EAAK2I,SAAS,CACVI,iBAAkB/I,KAtSP,EA0SnBoN,sBAAwB,SAAApN,GACN,IAAVA,EACA,EAAK2I,SAAS,CACV3D,mBAAoBhF,EACpBqF,eAAgB,QAChBC,cAAe,QACfJ,mBAAoB,SAEP,IAAVlF,EACP,EAAK2I,SAAS,CACV3D,mBAAoBhF,EACpBqF,eAAgB,QAChBC,cAAe,QACfJ,mBAAoB,OACpBC,oBAAqB,QAGzB,EAAKwD,SAAS,CACV3D,mBAAoBhF,EACpBqF,eAAgB,QAChBC,cAAe,QACfJ,mBAAoB,OACpBC,oBAAqB,SAhUd,EAoUnBwG,sBAAwB,WACpB9E,aAAaI,QAAQ,oBAAqB,EAAKtB,MAAM0H,WAAa,GAClE,EAAK1E,UAAS,SAAC2E,GAAD,MAAgB,CAC1BD,WAAYC,EAAUD,WAAa,OArUvC,EAAKf,gBAAkBpG,IAAMqH,YAC7B,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,qBAAuB,EAAKA,qBAAqBF,KAA1B,gBAC5B,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAC1B,EAAKT,cAAgB,EAAKA,cAAcS,KAAnB,gBACrB,EAAK9B,sBAAwB,EAAKA,sBAAsB8B,KAA3B,gBAC7B,EAAK7C,kBAAoB,EAAKA,kBAAkB6C,KAAvB,gBACzB,EAAK9H,MAAQ,CACTpF,KAAM,EAAKD,MAAMC,KACjBP,MAAO,GACP6N,IAAK,GACL1E,aAAa,EACbJ,iBAAkB,EAClB/D,mBAAoB,EACpBK,eAAgB,QAChBC,cAAe,QACfJ,mBAAoB,OACpBC,oBAAqB,MACrBkC,UAAW,EACXnD,MAAOiD,IACP/D,MAAO,GACPiG,MAAO,EACP+C,MAAOrE,IACPkE,MAAO,GACP6B,QAAS,EACTC,YAAY,EACZC,QAAS,OACTC,aAAa,EACbnB,SAAS,EACTC,SAAS,EACTE,SAAU,KACVI,WAAYpF,KAlCD,E,sDAuInB,SAAmBiG,EAAWC,GACtB9N,KAAKsF,MAAM0D,QAAU8E,EAAW9E,QAChChJ,KAAKsI,SAAS,CACVzE,MAAOiD,MAEX9G,KAAKsI,SAAS,CAAEU,MAAO,KAGvBhJ,KAAKsF,MAAMwD,cAAgBgF,EAAWhF,cACtC9I,KAAKsI,SAAS,CACVzE,MAAOiD,MAEX9G,KAAKsK,kB,iCA+Db,WACI,IAAMyD,EAAc/N,KAAKsF,MAAMsG,MAC3BmC,GAAe/N,KAAKsF,MAAMmI,QAAU,GACpCzN,KAAKsI,UAAS,SAAC2E,GAAD,MAAgB,CAC1BQ,QAASR,EAAUQ,QAAU,EAC7BG,aAAa,MACb,WACA5N,KAAKsI,SAAS,CAAEzE,MAAOkK,EAAY/N,KAAKsF,MAAMmI,WAC9CjH,aAAaI,QAAQ,kBAAmBF,KAAKmC,UAAUkF,EAAY/N,KAAKsF,MAAMmI,WAC9EzK,IAAQC,QAAQ,sCAAwCjD,KAAKsF,MAAMmI,QAAU,S,6BAKzF,WACI,IAAMM,EAAc/N,KAAKsF,MAAMsG,MAC3BmC,GAAe/N,KAAKsF,MAAMmI,QAAUM,EAAY/J,OAAS,GACzDhE,KAAKsI,UAAS,SAAC2E,GAAD,MAAgB,CAC1BQ,QAASR,EAAUQ,QAAU,MAC7B,WACAzN,KAAKsI,SAAS,CAAEzE,MAAOkK,EAAY/N,KAAKsF,MAAMmI,WAC9CjH,aAAaI,QAAQ,kBAAmBF,KAAKmC,UAAUkF,EAAY/N,KAAKsF,MAAMmI,WAC9EzK,IAAQC,QAAQ,kCAAoCjD,KAAKsF,MAAMmI,QAAU,OAG7EzN,KAAKsF,MAAMmI,SAAWM,EAAY/J,OAAS,GAC3ChE,KAAKsI,UAAS,SAAC2E,GAAD,MAAgB,CAC1BW,aAAcX,EAAUW,kB,kCAKpC,WACI5N,KAAKsI,UAAS,SAAA2E,GAAS,MAAK,CACxBS,YAAaT,EAAUS,WACvBC,QAASV,EAAUS,WAAa,OAAS,c,gCAkBjD,SAAmB/N,GACf6K,QAAQC,IAAR,mBAAwB9K,IACxBK,KAAKsI,SAAS,CAAEsE,SAAUjN,M,oBAkE9B,WAAU,IAAD,OACCO,EAAOF,KAAKC,MAAMC,KAChB8N,EAAWC,IAAXD,OAER,OACI,qBAAKzN,UAAU,OAAf,SACI,eAAC2N,EAAA,EAAD,CAAWC,MAAM,MAAjB,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,IAAD,CACI3N,MAAO,CAAE+B,MAAO,KADpB,SAEI,cAAC,IAAD,CACIJ,MAAM,cACN3C,MAAOK,KAAKsF,MAAM0H,WAClBuB,WAAY,CAAE3N,MAAO,mBAMrC,eAACwN,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAQhN,KAAK,UACTR,QAASb,KAAKqN,oBACdmB,SAAiC,IAAvBxO,KAAKsF,MAAMmI,QAFzB,sBAKA,cAAC,IAAD,CAAQpM,KAAK,UACTR,QAASb,KAAKgM,kBADlB,yBAIA,uBAAO3K,KAAK,OACRe,IAAKpC,KAAKiM,gBACVlM,SAAUC,KAAKwL,aACf7K,MAAO,CAAEgN,QAAS,UAEtB,cAAC,IAAD,CAAQtM,KAAK,UACTR,QAASb,KAAKmN,gBACdqB,SAAUxO,KAAKsF,MAAMsI,YAFzB,qBAMJ,eAACS,EAAA,EAAD,WACI,cAAC,IAAD,CACIhN,KAAK,UACLoN,KAAI,uCAAkCC,mBAClChI,KAAKmC,UAAU7I,KAAKsF,MAAMyG,SAG9B4C,SAAS,aANb,2BAUA,cAAC,IAAD,CAASzK,UAAU,SAAS5B,MAAM,8DAAlC,SACI,cAAC,IAAD,CAAQjB,KAAK,UAAUR,QAASb,KAAKoM,kBAArC,2BAEJ,cAAC,IAAD,CAAQ/K,KAAK,UAAUR,QAAS,WAC5B2F,aAAaI,QAAQ,kBAAmB,MACxC,EAAK0B,SAAS,CAAEyD,MAAO,MAF3B,gCAKJ,eAACsC,EAAA,EAAD,WAEI,cAAC,IAAD,CAAQhN,KAAK,UAAUR,QAAS,WAC5B2F,aAAaI,QAAQ,kBAAmB,MACxCJ,aAAaI,QAAQ,oBAAqB,GAC1C,EAAK0B,SAAS,CACVzE,MAAO,GACPmJ,WAAY,IAGhB,EAAK/M,MAAM8I,iBAAiB,YARhC,2BAUA,cAAC,IAAD,CAAQ1H,KAAK,UAAUR,QAASb,KAAKsN,qBAArC,SACKtN,KAAKsF,MAAMoI,WAAa,kBAAoB,0BAIzD,cAACU,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEM,KAAM,EAAGC,OAAQ,GAA5B,UACI,cAAC,IAAD,CAAQC,YAAY,gBAAgBnO,MAAO,CAAE+B,MAAO,KAAO3C,SAAUC,KAAKuN,mBAA1E,SACKvN,KAAKsF,MAAMyG,MAAMxH,KAAI,SAAAwK,GAAI,OACtB,cAACf,EAAD,CAAQrO,MAAO,EAAK2F,MAAMyG,MAAM1D,QAAQ0G,GAAQ,EAAhD,SAAoD,EAAKzJ,MAAMyG,MAAM1D,QAAQ0G,GAAQ,SAG7F,cAAC,IAAD,CACIzM,MAAO,6BAA+BtC,KAAKsF,MAAMsH,SAAW,gCAC5DoC,UAAWhP,KAAK2M,cAChBsC,OAAO,MACPC,WAAW,KAJf,SAKI,cAAC,IAAD,0BAIZ,eAACd,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACI,oBAAI9N,UAAU,iBAAd,SAA+B,wDAC/B,qBAAKA,UAAqB,cAATL,EAAwB,UAAY,GAArD,SACI,qBAAKK,UAAqB,cAATL,EAAwB,cAAgB,GAAzD,SACI,qBAAKK,UAAU,iBAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,cAAC6N,EAAA,EAAD,yCAGA,cAACA,EAAA,EAAD,UACI,sBAAK7N,UAAU,wBAAf,UACI,uBAAOA,UAAU,kBAAkBc,KAAK,OAAOyN,YAAY,cAAcK,aAAW,SAChFxP,MAAOK,KAAKsF,MAAMvC,MAClBlC,QAAS,SAAA8C,GACLX,IAAQiG,KAAK,oCAEjBlJ,SAAU,SAAA4D,GAAK,OAAI,EAAK2E,SAAS,CAAEvF,MAAOY,EAAMyF,OAAOzJ,SACvDyP,WAAY,SAAAzL,GACU,UAAdA,EAAM0L,KACN,EAAK9E,uBAGjB,cAAC,IAAD,CAAQlJ,KAAK,UAAUR,QAASb,KAAKuK,kBAArC,yBAGR,cAAC6D,EAAA,EAAD,UACI,oDAEJ,cAACA,EAAA,EAAD,UACI,cAACxI,EAAD,CACI7C,MAAO/C,KAAKsF,MAAM3F,MAClB0G,KAAMrG,KAAKsF,MAAMwD,YACjBwG,OAAQtP,KAAKsK,aACbtD,UAAWhH,KAAKsF,MAAM0B,UACtB+B,iBAAkB/I,KAAKC,MAAM8I,iCAQzD,eAACwG,EAAA,EAAD,CAAaC,QAASC,IAAtB,UACI,eAACpB,EAAA,EAAD,CAAK9N,UAAU,iBAAf,UACI,oBAAIA,UAAU,iBAAd,SAA+B,iDAC/B,8BAAG,uDAAH,KAAuC,cAAC,IAAD,CAAamK,IAAK,EAAGC,IAAK,EAAGhL,MAAOK,KAAKsF,MAAMoD,iBAAkB3I,SAAUC,KAAK8M,qBAAvH,uBACA,8BAAG,oEAAH,IAAmD,cAAC,IAAD,CAAapC,IAAK,EAAGC,IAAK,EAAGhL,MAAOK,KAAKsF,MAAMX,mBAAoB5E,SAAUC,KAAK+M,wBAArI,uBACA,8BACI,cAAC,EAAD,CACIxH,YAAavF,KAAKsF,MAAMoD,iBACxB/D,mBAAoB3E,KAAKsF,MAAMX,mBAC/BK,eAAgBhF,KAAKsF,MAAMN,eAC3BC,cAAejF,KAAKsF,MAAML,cAC1BJ,mBAAoB7E,KAAKsF,MAAMT,mBAC/BC,oBAAqB9E,KAAKsF,MAAMR,oBAChCjB,MAAO7D,KAAKsF,MAAMzB,MAClBN,YAAavD,KAAKuD,YAAY6J,KAAKpN,MACnC0F,QAAS1F,KAAK0F,iBAI1B,cAAC2I,EAAA,EAAD,CAAK9N,UAAU,eAAf,SACI,qBAAKA,UAAqB,YAATL,EAAsB,UAAY,GAAnD,SACI,qBAAKK,UAAqB,YAATL,EAAsB,cAAgB,GAAvD,SACI,cAAC,EAAD,CACI2D,MAAO7D,KAAKsF,MAAMzB,MAClBmD,UAAWhH,KAAKsF,MAAM0B,UACtBzD,YAAavD,KAAKuD,YAAY6J,KAAKpN,iBAMvD,eAACqO,EAAA,EAAD,CAAK1N,MAAO,CAAEgN,QAAS3N,KAAKsF,MAAMqI,SAAlC,UACI,oBAAIpN,UAAU,iBAAd,SAA+B,kDAC/B,qBAAKA,UAAU,0BAAf,SACI,cAAC,IAAD,CACImP,aAAa,EACbC,UAAW,EACXC,SAAU5P,KAAKwM,qBACfE,SAAU1M,KAAKsF,MAAMmH,SAAWzM,KAAKsF,MAAMoH,QAC3CmD,WAAW,EALf,SAOI,cAAC,IAAD,CACIC,WAAY9P,KAAKsF,MAAMyG,MACvBgE,UAAQ,EACRC,WAAY,SAAAjB,GAAI,OAEZ,cADA,CACC,IAAKkB,KAAN,WACI,uCAAU,EAAK3K,MAAMyG,MAAM1D,QAAQ0G,GAAQ,EAA3C,QACCA,EAAKxK,KAAI,SAAAF,GAAI,OACV,8BAAG,iCAASA,EAAK7C,OAAjB,IAAoD,IAAlB6C,EAAKC,SAAiB,eAAiBD,EAAK6B,IAAM,mBAAqB7B,EAAK3C,MAAQ,aAAe2C,EAAK1C,iBAHlIoN,EAAKmB,0B,GApgB9C7P,a,UCkBJ8P,I,mNAlGb7K,MAAQ,CACNpF,KAAM,UACNkQ,SAAS,G,EAGXC,kBAAoB,SAAClH,GACnBqB,QAAQC,IAAI,sBAAuBtB,EAAEC,OAAOzJ,OAC5C,EAAK2I,SAAS,CAAEpI,KAAMiJ,EAAEC,OAAOzJ,S,EAOjCmB,cAAgB,SAACqI,GAEf,EAAKmH,c,EAGPA,WAAa,WACX,EAAKhI,SAAS,CACZ8H,SAAS,K,EAIbG,QAAU,WACR,EAAKjI,SAAS,CACZ8H,SAAS,K,sDAjBb,SAAiBlQ,GACfF,KAAKsI,SAAS,CAAEpI,KAAMA,M,oBAoBxB,WACE,OACE,sBAAKK,UAAU,MAAf,UACE,cAAC,EAAD,CAAQL,KAAMF,KAAKsF,MAAMpF,KAAMH,SAAUC,KAAKqQ,kBAAkBjD,KAAKpN,MAAOc,cAAed,KAAKc,cAAcsM,KAAKpN,QACnH,eAAC,KAAD,CACEsC,MAAM,eACN4B,UAAU,QACVxB,MAAM,QACN8N,UAAU,EACVD,QAASvQ,KAAKuQ,QACdH,QAASpQ,KAAKsF,MAAM8K,QANtB,UAQE,mEACA,+BACE,oCAAM,0CAAN,SAAiC,0CAAjC,wBACA,+BAAI,oDAAJ,WAA2C,sDAA3C,6CACA,+BAAI,qDAAJ,WAA4C,+CAA5C,8DACA,+BAAI,gDAAJ,oBAAgD,kDAAhD,sCACA,+BAAI,gDAAJ,WAAuC,kDAAvC,iEACA,+BAAI,sDAAJ,WAA6C,+CAA7C,4CAGF,gFACA,+BACE,4EACA,sEACA,kGAGF,gEACA,+BACE,+BAAI,mDAAJ,0CACA,+BAAI,uDAAJ,+BACA,+BAAI,qDAAJ,+CACA,+BAAI,mDAAJ,+FACA,+BAAI,4CAAJ,gDACA,+BAAI,gDAAJ,uDAGF,4DACA,+BACE,oDACA,+BACE,+BAAI,6CAAJ,yHACA,+BAAI,mDAAJ,gJACA,+BAAI,6CAAJ,uGAEF,uBACA,iEACA,+BACE,+BAAI,6CAAJ,wIACA,+BAAI,6CAAJ,iDACA,+BACE,+BAAI,+CAAJ,kEACA,+BAAI,+CAAJ,sFAMR,cAAC,GAAD,CAAMlQ,KAAMF,KAAKsF,MAAMpF,KAAM6I,iBAAkB/I,KAAK+I,iBAAiBqE,KAAKpN,QAC1E,cAAC,EAAD,W,GA9FU6F,IAAMxF,YCKToQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CCMdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF3N,SAAS4N,eAAe,SAM1BZ,O","file":"static/js/main.9900079d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Upitt_logo_400x400.8afe9141.jpg\";","import React, { Component } from 'react';\nimport upittLogo from '../assets/images/Upitt_logo_400x400.jpg';\nimport { Radio } from \"antd\";\nimport \"../styles/Header.css\";\nimport \"antd/dist/antd.css\";\n\nconst roles = [\n\t{ label: \"Student\", value: \"Student\" },\n\t{ label: \"Librarian\", value: \"Librarian\" }\n];\n\nclass Role extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Radio.Group\n\t\t\t\toptions={roles}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\tvalue={this.props.role}\n\t\t\t\toptionType=\"button\"\n\t\t\t\tbuttonStyle=\"solid\"\n\t\t\t/>\n\t\t);\n\t}\n}\n\nclass Header extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"App-header\" >\n\t\t\t\t<img src={upittLogo} alt='logo' className=\"App-logo\" />\n\t\t\t\t<p className=\"title\" >\n\t\t\t\t\tMemory Paging Practice System\n                </p>\n\t\t\t\t<div className=\"overview-button\">\n\t\t\t\t\t<a style={{color: \"white\"}} onClick={this.props.clickOverview}>Overview</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"role-button\">\n\t\t\t\t\t<Role role={this.props.role} onChange={this.props.onChange} />\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport \"../styles/Footer.css\"\n\nclass Footer extends Component {\n    render() {\n        return ( \n            <footer className = \"footer\" >\n            University of Pittsburgh \n            </footer>\n        );\n    }\n}\n\nexport default Footer;","export const ItemTypes = {\n    BOOK: 'book',\n  }","export default __webpack_public_path__ + \"static/media/bookCover.6a39f467.jpg\";","import React from 'react';\nimport { Card, Popover, Badge } from 'antd';\nimport bookcover from '../assets/images/bookCover.jpg';\nimport { ItemTypes } from '../utilities/items.js';\nimport { useDrag } from 'react-dnd';\nimport { message } from 'antd';\n\nfunction Book(props) {\n    const { Meta } = Card;\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.BOOK,\n        item: {\n            code: props.code,\n            name: props.name,\n            author: props.author,\n            level: props.level,\n            position: props.position,\n            created_date: props.created_date,\n            frequency: props.frequency,\n            last_borrowed: props.last_borrowed,\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    }))\n\n    const content = (\n        <div>\n            <p>Created: {props.created_date}</p>\n            <p>Frequency: {props.frequency}</p>\n            <p>Last borrowed: {props.last_borrowed}</p>\n        </div>\n    );\n\n    return (\n        <div ref={drag}>\n            <Badge count={props.frequency}>\n                <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                    <Card\n                        hoverable\n                        style={{ left: 14, width: 70, height: 80 }}\n                        cover={<img alt=\"bookcover\" src={bookcover} />}\n                    >\n                        <Meta title={props.name}\n                            description={props.author}\n                            onClick={() => {\n                                if (props.name === props.query)\n                                    message.success(\"You have successfully retrieved \" + props.name);\n                            }}\n                        />\n                    </Card>\n                </Popover>\n            </Badge>\n        </div>\n    );\n}\n\nexport default Book;","import React from 'react';\nimport { Tooltip } from 'antd';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\nimport Book from './Book.js';\n\nfunction BookStand(props) {\n    const positionIntro = \"Position \" + props.position;\n    const toShelf = 1;\n    const toBin = 0;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toShelf, toBin, props.level, props.position),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    document.addEventListener(\"drop\", function( event ) {\n        event.preventDefault();\n    })\n\n    const books = props.books;\n    if (Object.keys(books).length === 0 && books.constructor === Object) {\n        return (\n            <Tooltip placement=\"bottom\" title={positionIntro}>\n                <div className=\"bookstand\">\n                </div>\n            </Tooltip>\n        );\n    }\n    else {\n        const shelfBook = books.filter(book => book.location === 1);\n        return (\n            <Tooltip placement=\"bottom\" title={positionIntro}>\n                <div className=\"bookstand\" ref={drop}>\n                    {shelfBook.map(i => {\n                        if (i.level === props.level && i.position === props.position) {\n                            return (<Book \n                                key={i.code}\n                                code={i.code}\n                                name={i.name}\n                                author={i.author}\n                                location={i.location}\n                                level={i.level}\n                                position={i.position}\n                                created_date={i.created_date}\n                                frequency={i.frequency}\n                                last_borrowed={i.last_borrowed}\n                            />)\n                        }\n                    })}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default BookStand;","import React, { Component } from 'react';\nimport { Tooltip } from 'antd';\nimport BookStand from './BookStand';\n\nclass SingleBookCase extends Component {\n\n    render() {\n        const levelIntro = \"Level \" + this.props.level;\n        const { numOfBooksPerLevel } = this.props;\n        let bookstands = [];\n        for (let i = 0; i < numOfBooksPerLevel; i++) {\n            bookstands = [...bookstands, {\n                position: i + 1,\n                level: this.props.level,\n                books: this.props.books,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n\n        let bookcaseSize = {\n            height: this.props.bookcaseHeight,\n            width: this.props.bookcaseWidth,\n        }\n\n        return (\n            <Tooltip placement=\"leftTop\" title={levelIntro}>\n                <div className=\"bookcase\" style={bookcaseSize}>\n                    {\n                        bookstands.map(i => {\n                            let bookstandMargin = {\n                                marginTop: i.bookstandMarginTop,\n                                marginLeft: i.bookstandMarginLeft\n                            }\n                            return (\n                                <div className=\"single\" style={bookstandMargin}>\n                                    <BookStand\n                                        position={i.position}\n                                        key={i.position}\n                                        level={i.level}\n                                        books={i.books}\n                                        bookcaseHeight={i.bookcaseHeight}\n                                        bookcaseWidth={i.bookcaseWidth}\n                                        bookstandMarginTop={i.bookstandMarginTop}\n                                        dragHandler={this.props.dragHandler} />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SingleBookCase;","import React, { Component } from 'react';\nimport SingleBookCase from './SingleBookCase';\n\nclass Bookshelf extends Component {\n\n    state = {\n\n    }\n\n    render() {\n        const { numOfLevels } = this.props;\n        const { numOfBooksPerLevel } = this.props;\n        let bookcases = [];\n        for (let i = 0; i < numOfLevels; i++) {\n            bookcases = [...bookcases, {\n                level: i + 1,\n                numOfBooks: numOfBooksPerLevel,\n                books: this.props.books,\n                bookcaseHeight: this.props.bookcaseHeight,\n                bookcaseWidth: this.props.bookcaseWidth,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n        return (\n            <div className=\"bookshelf\">\n                {/* <h5 class=\"text-center\"><strong>Bookshelf</strong></h5> */}\n                {\n                    bookcases.map(i => {\n                        return (\n                            <SingleBookCase level={i.level}\n                                key={i.level}\n                                numOfBooksPerLevel={i.numOfBooks}\n                                bookcaseHeight={i.bookcaseHeight}\n                                bookcaseWidth={i.bookcaseWidth}\n                                bookstandMarginTop={i.bookstandMarginTop}\n                                bookstandMarginLeft={i.bookstandMarginLeft}\n                                books={i.books}\n                                dragHandler={this.props.dragHandler}\n                                dbclick={this.props.dbclick} />\n                        )\n                    })\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Bookshelf;","import React from 'react';\n\nconst STORED_BOOK_KEY = 'STORED_BOOK_KEY';\n\nfunction getStoredBooks() {\n  try {\n    const retrievedBooksString = localStorage.getItem(STORED_BOOK_KEY);\n    if (!retrievedBooksString) {\n      localStorage.setItem(STORED_BOOK_KEY, \"[]\")\n      return [];\n    }\n    return JSON.parse(retrievedBooksString);\n  }\n  catch (err) {\n    localStorage.setItem(STORED_BOOK_KEY, '[]');\n    return [];\n  }\n}\n\nexport function Catalog(props) {\n  const [location, setLocation] = React.useState();\n  const [level, setLevel] = React.useState();\n  const [position, setPosition] = React.useState();\n  const [bin, setBin] = React.useState();\n\n  // when modal open\n  React.useEffect(() => {\n    if (props.show) {\n      const books = getStoredBooks();\n      const found = books.find(book => book.name === props.query);\n      if (found) {\n        setLocation(found.location);\n        setLevel(found.level);\n        setPosition(found.position);\n        setBin(found.bin);\n      }\n    }\n  }, [props.show, props.query, props.numOfBins]);\n\n  return (\n    <pre>\n      <u>Book Name</u>: {props.query}{\"\\n\"}\n      <u>Location</u>: {location === 0 ? 'storage' : location === 1 ? 'bookshelf' : ''}{\"\\n\"}\n      <u>Storage Bin</u>: {bin} {\"\\n\"}\n      <u>Level</u>: {level} {\"\\n\"}\n      <u>Position</u>: {position} {\"\\n\"}\n      {\"\\n\"}\n    </pre>\n  );\n}","import React from 'react';\nimport { Popover, Tooltip } from 'antd';\nimport Book from './Book';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\n\nfunction Bin(props) {\n    const toStorage = 0;\n    const toBin = props.binId;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toStorage, toBin, 0, 0),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    var content = (<div className=\"book-container\"></div>);\n    const binTitle = \"Bin \" + props.binId;\n    if (Object.keys(props.books).length === 0 && props.books.constructor === Object) {\n\n    } else {\n        // TODO: not only for location == 0, also need to seperate them by different bins\n        let storageBook = props.books.filter(book => book.location === 0);\n        // console.log(storageBook)\n        content = (\n            <div className=\"book-container\">\n                {\n                    storageBook.map(i => {\n                        return (\n                            <div className='book-align-block'>\n                                <Book\n                                    key={i.code}\n                                    code={i.code}\n                                    name={i.name}\n                                    author={i.author}\n                                    location={i.location}\n                                    level={i.level}\n                                    position={i.position}\n                                    created_date={i.created_date}\n                                    frequency={i.frequency}\n                                    last_borrowed={i.last_borrowed}\n                                />\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n    return (\n        <Tooltip placement=\"top\" title={binTitle}>\n            <Popover content={content} placement=\"top\" title={binTitle} trigger=\"click\">\n                <div className=\"bin\" ref={drop}></div>\n            </Popover>\n        </Tooltip>\n\n    );\n}\n\nexport default Bin;","import React, { Component } from 'react';\nimport Bin from './Bin';\n\nclass Storage extends Component {\n    state = {\n\n    }\n\n    render() {\n        const { numOfBins } = this.props;\n        const { books } = this.props;\n        let bins = [];\n        // check if books array is empty\n        if (Object.keys(this.props.books).length === 0 && this.props.books.constructor === Object) {\n            for (let i = 0; i < numOfBins; i++) {\n                bins = [...bins, {\n                    binId: i + 1,\n                    // do we need to limit number of books in each bin? \n\n                    // filter books in different bins, still need to check\n                    books: [],\n                }];\n            }\n        } else {\n            for (let i = 0; i < numOfBins; i++) {\n                const binBooks = books.filter(book => book.bin === i + 1);\n                bins = [...bins, {\n                    binId: i + 1,\n                    // do we need to limit number of books in each bin? \n\n                    // filter books in different bins, still need to check\n                    books: binBooks,\n                }];\n            }\n        }\n\n        return (\n            <div className=\"storage\">\n                <h5><strong>Book Storage</strong></h5>\n                {\n                    bins.map(i => {\n                        return (\n                            <Bin\n                                binId={i.binId}\n                                key={i.binId}\n                                books={i.books}\n                                dragHandler={this.props.dragHandler} />\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default Storage;","import React, { Component } from 'react';\nimport Bookshelf from './Bookshelf';\nimport \"../styles/Main.css\";\nimport \"antd/dist/antd.css\";\nimport Container from 'react-bootstrap/Container';\nimport '../App.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Catalog } from './Catalog.js';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Storage from './Storage';\nimport { message, Button, List, Tooltip, Select, Popconfirm, InputNumber, Statistic, Card } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nfunction getStoredBooks() {\n    try {\n        const retrievedBooksString = localStorage.getItem('STORED_BOOK_KEY');\n        if (!retrievedBooksString) {\n            localStorage.setItem('STORED_BOOK_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedBooksString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredSteps() {\n    try {\n        const retrievedStepsString = localStorage.getItem('STORED_STEP_KEY');\n        if (!retrievedStepsString) {\n            localStorage.setItem('STORED_STEP_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedStepsString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredFaults() {\n    try {\n        const retrivedNumOfFaults = localStorage.getItem('STORED_FAULTS_KEY');\n        if (!retrivedNumOfFaults) {\n            localStorage.setItem('STORED_FAULTS_KEY', 0)\n            return 0;\n        }\n        return JSON.parse(retrivedNumOfFaults);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction storeBook(name, numOfBins) {\n    console.log('storing book', name);\n    const today = new Date();\n    const storedBooks = getStoredBooks();\n    const found = storedBooks.find(book => {\n        return book.name === name;\n    })\n    if (found) {\n        sessionStorage.setItem('STORED_BOOK_KEY', name);\n    } else {\n        // store the book\n        var uniqid = require('uniqid');\n        const bookObj = {\n            code: uniqid(),\n            name: name,\n            location: 0,\n            bin: getRandomIntInclusive(1, numOfBins),  // store to bin randomly\n            level: 0,\n            position: 0,\n            created_date: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds(),\n            frequency: 0,\n            last_borrowed: 0,\n        };\n        storedBooks.push(bookObj);\n        const storedBooksJson = JSON.stringify(storedBooks);\n        localStorage.setItem('STORED_BOOK_KEY', storedBooksJson);\n    }\n}\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.hiddenFileInput = React.createRef();\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickPrevious = this.handleClickPrevious.bind(this);\n        this.handleClickShowSteps = this.handleClickShowSteps.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleFaultsIncrement = this.handleFaultsIncrement.bind(this);\n        this.handleClickSearch = this.handleClickSearch.bind(this);\n        this.state = {\n            role: this.props.role,\n            value: '',\n            lib: [],\n            catalogShow: false,\n            numOfShelfLevels: 5,\n            numOfBooksPerLevel: 3,\n            bookcaseHeight: '120px',\n            bookcaseWidth: '340px',\n            bookstandMarginTop: '30px',\n            bookstandMarginLeft: '5px',\n            numOfBins: 4,\n            books: getStoredBooks(), // location: 0-storage; 1-bookshelf\n            query: '',\n            error: 0,\n            steps: getStoredSteps(),\n            files: \"\",\n            pointer: 0,\n            isToggleOn: false,\n            display: 'none',\n            disableNext: false,\n            loading: false,\n            hasMore: true,\n            undoStep: null,\n            pageFaults: getStoredFaults()\n        }\n    }\n\n    dragHandler = (item, toLocation, toBin, toLevel, toPosition) => {\n        let booksCopy = [...this.state.books];\n        let bookDragged = booksCopy.filter(book => book.code === item.code);\n        let index = booksCopy.indexOf(bookDragged[0]);\n        bookDragged[0].location = toLocation;\n        bookDragged[0].bin = toBin;\n        bookDragged[0].level = toLevel;\n        bookDragged[0].position = toPosition;\n        booksCopy[index] = bookDragged[0];\n        this.setState({ books: booksCopy });\n\n        var is_empty = 0;\n        var shelf_book = 1;\n        var storedBooks = getStoredBooks();\n        for (var i = 0; i < storedBooks.length; i++) {\n            if (storedBooks[i].name !== item.name && toLocation === 1) {\n                if (storedBooks[i].level === toLevel && storedBooks[i].position === toPosition) {\n                    is_empty = 1;\n                }\n            }\n\n            if (storedBooks[i].location === 1) {\n                shelf_book += 1;\n            }\n        }\n\n        if (toLocation === 1 && shelf_book > this.state.numOfShelfLevels * this.state.numOfBooksPerLevel) {\n            is_empty = 2;\n        }\n\n        if (is_empty === 0) {\n            for (i = 0; i < storedBooks.length; i++) {\n                if (storedBooks[i].code === item.code) {\n                    if (storedBooks[i].location === 0 && toLocation === 1) {\n                        // var today = new Date();\n                        // storedBooks[i].created_date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n                        sessionStorage.setItem(\"STORED_BOOK_KEY\", item.name);\n                    }\n                    storedBooks[i].name = item.name;\n                    storedBooks[i].location = toLocation;\n                    storedBooks[i].bin = toBin;\n                    storedBooks[i].level = toLevel;\n                    storedBooks[i].position = toPosition\n                }\n                var storedBooksJson = JSON.stringify(storedBooks);\n                localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                this.setState({ catalogShow: true })\n            }\n            if (toLocation === 1) {\n                message.success(item.name + \" is available on bookshelf now. Please double click to access.\");\n                this.props.handleRoleChange(\"Student\");\n            }\n        }\n        else if (is_empty === 1) {\n            message.error(\"A book already exists on this position. Please choose another position as a librarian again!\");\n            this.setState({ error: 1 });\n        }\n        else {\n            message.error(\"The bookshelf is full. Please remove a book from the shelf to storage bin before adding another book to the shelf.\", 15);\n            message.info(\"You can remove the book with least frequency.\", 15);\n            this.setState({ error: 1 });\n        }\n    }\n\n    dbclick = () => {\n        document.ondblclick = DoubleClick;\n        function DoubleClick(e) {\n            if (e.target.draggable === true) {\n                let book_name = e.target.offsetParent.innerText;\n                let data = sessionStorage.getItem('STORED_BOOK_KEY');\n\n                if (data === book_name) {\n                    alert(\"You have successfully retrieved \" + data);\n\n                    var storedBooks = getStoredBooks();\n                    var today = new Date();\n                    for (var i = 0; i < storedBooks.length; i++) {\n                        if (storedBooks[i].name === data) {\n                            storedBooks[i].frequency += 1;\n                            // this.updateFrequency(storedBooks[i].frequency);\n                            storedBooks[i].last_borrowed = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n                        }\n                        var storedBooksJson = JSON.stringify(storedBooks);\n                        localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                    }\n                    sessionStorage.setItem('STORED_BOOK_KEY', '');\n                    window.location.reload();\n                }\n                else {\n                    message.warning(\"Please choose again\");\n                }\n            }\n        }\n    }\n\n    catalogClose = () => this.setState({ catalogShow: false });\n\n    componentDidUpdate(prevProps, prevStates) {\n        if (this.state.error !== prevStates.error) {\n            this.setState({\n                books: getStoredBooks(),\n            });\n            this.setState({ error: 0 });\n        }\n\n        if (this.state.catalogShow !== prevStates.catalogShow) {\n            this.setState({\n                books: getStoredBooks(),\n            });\n            this.catalogClose();\n        }\n    }\n\n    handleClickSearch = () => {\n        if (!this.state.query) {\n            alert('Please input a name!');\n        } else {\n            storeBook(this.state.query, this.state.numOfBins);\n            this.setState({ catalogShow: true, value: this.state.query })\n            let books = getStoredBooks()\n            let targetBook = books.find(book => book.name === this.state.query)\n            if (targetBook) {\n                if (targetBook.location === 0) {\n                    message.info(\"The librarian is preparing the book.\");\n                    message.info(\"Please move \" + this.state.query + \" from storage bin to bookshelf.\");\n                    this.props.handleRoleChange(\"Librarian\");\n                    this.handleFaultsIncrement();\n                }\n                if (targetBook.location === 1) {\n                    message.info(\"You can now retrieve the book on level \" + targetBook.level + \" and position \" + targetBook.position);\n                    message.warn(\"Please double click on the book to retrieve\");\n                }\n            }\n        }\n    }\n\n    handleUpload = e => {\n        const fileReader = new FileReader();\n        fileReader.readAsText(e.target.files[0], \"UTF-8\");\n        fileReader.onload = e => {\n            this.setState({\n                files: JSON.parse(e.target.result),\n                books: JSON.parse(e.target.result)[0],\n                steps: JSON.parse(e.target.result)\n            });\n            localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(JSON.parse(e.target.result)[0]))\n            localStorage.setItem('STORED_STEP_KEY', JSON.stringify(JSON.parse(e.target.result)))\n            message.success(\"The Json file has uploaded successfully!\")\n        };\n    };\n\n    handleClickUpload = e => {\n        this.hiddenFileInput.current.click();\n    }\n\n    handleClickRecord = () => {\n        const storedSteps = getStoredSteps();\n        var currentStep = this.state.books;\n        if (JSON.stringify(storedSteps[storedSteps.length - 1]) === JSON.stringify(currentStep)) {\n            console.log(\"Duplicate step\")\n            message.error(\"Duplicate step\")\n        }\n        else {\n            console.log(\"Step added\");\n            message.success(\"Step added\")\n            storedSteps.push(currentStep);\n        }\n        const storedStepsJson = JSON.stringify(storedSteps);\n        localStorage.setItem('STORED_STEP_KEY', storedStepsJson);\n        this.setState({ steps: storedSteps });\n    }\n\n    handleClickPrevious() {\n        const fileContent = this.state.files;\n        if (fileContent && this.state.pointer > 0) {\n            this.setState((prevState) => ({\n                pointer: prevState.pointer - 1,\n                disableNext: false\n            }), function () {\n                this.setState({ books: fileContent[this.state.pointer] })\n                localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer]))\n                message.success(\"Previous clicked! You are at step \" + (this.state.pointer + 1))\n            });\n        }\n    }\n\n    handleClickNext() {\n        const fileContent = this.state.files;\n        if (fileContent && this.state.pointer < fileContent.length - 1) {\n            this.setState((prevState) => ({\n                pointer: prevState.pointer + 1,\n            }), function () {\n                this.setState({ books: fileContent[this.state.pointer] })\n                localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer]))\n                message.success(\"Next clicked! You are at step \" + (this.state.pointer + 1))\n            });\n        }\n        if (this.state.pointer >= fileContent.length - 2) {\n            this.setState((prevState) => ({\n                disableNext: !prevState.disableNext\n            }))\n        }\n    }\n\n    handleClickShowSteps() {\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn,\n            display: prevState.isToggleOn ? 'none' : 'block'\n        }));\n    }\n\n    handleInfiniteOnLoad = () => {\n        let { steps } = this.state;\n        this.setState({\n            loading: true,\n        });\n        if (steps.length > 15) {\n            message.warning('Infinite List loaded all');\n            this.setState({\n                hasMore: false,\n                loading: false,\n            });\n            return;\n        }\n    }\n    handleSelectChange(value) {\n        console.log(`selected ${value}`);\n        this.setState({ undoStep: value })\n    }\n\n    handleConfirm = () => {\n        if (this.state.undoStep !== null && this.state.undoStep > 1) {\n            this.setState({\n                steps: this.state.steps.slice(0, this.state.undoStep - 1),\n                books: this.state.steps[this.state.undoStep - 2]\n            })\n            localStorage.setItem('STORED_STEP_KEY', JSON.stringify(this.state.steps.slice(0, this.state.undoStep - 1)))\n            localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(this.state.steps[this.state.undoStep - 2]))\n            message.success('Step ' + this.state.undoStep + ' and all the following steps have been removed. Now you can redo the recording from there.');\n        }\n        else if (this.state.undoStep === 1) {\n            this.setState({\n                steps: [],\n                books: []\n            })\n            localStorage.setItem('STORED_STEP_KEY', '[]')\n            localStorage.setItem('STORED_BOOK_KEY', '[]')\n        }\n        else {\n            message.error('Step value cannot be empty! Please try again to select a step.');\n        }\n\n    };\n\n    onChangeLevelInput = value => {\n        this.setState({\n            numOfShelfLevels: value,\n        });\n    };\n\n    onChangePositionInput = value => {\n        if (value === 4) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '165px',\n                bookcaseWidth: '475px',\n                bookstandMarginTop: '60px'\n            });\n        } else if (value === 5) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '200px',\n                bookcaseWidth: '567px',\n                bookstandMarginTop: '90px',\n                bookstandMarginLeft: '3px',\n            });\n        } else {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '120px',\n                bookcaseWidth: '340px',\n                bookstandMarginTop: '30px',\n                bookstandMarginLeft: '5px',\n            });\n        }\n    };\n    handleFaultsIncrement = () => {\n        localStorage.setItem('STORED_FAULTS_KEY', this.state.pageFaults + 1);\n        this.setState((prevState) => ({\n            pageFaults: prevState.pageFaults + 1,\n        }))\n    }\n\n    render() {\n        const role = this.props.role;\n        const { Option } = Select;\n\n        return (\n            <div className=\"main\" >\n                <Container fluid=\"xxl\">\n                    <Row>\n                        <Col md={2}>\n                            <Card\n                                style={{ width: 110 }} >\n                                <Statistic\n                                    title=\"Page Faults\"\n                                    value={this.state.pageFaults}\n                                    valueStyle={{ color: '#cf1322' }}\n\n                                />\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickPrevious}\n                                disabled={this.state.pointer === 0 ? true : false}>\n                                Previous\n                            </Button>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickUpload}>\n                                Upload Json\n                            </Button>\n                            <input type=\"file\"\n                                ref={this.hiddenFileInput}\n                                onChange={this.handleUpload}\n                                style={{ display: 'none' }}\n                            />\n                            <Button type=\"primary\"\n                                onClick={this.handleClickNext}\n                                disabled={this.state.disableNext}>\n                                Next\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                type=\"primary\"\n                                href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                                    JSON.stringify(this.state.steps)\n                                    // JSON.stringify(JSON.parse(localStorage.getItem(`STORED_STEP_KEY`)))\n                                )}`}\n                                download=\"steps.json\"\n                            >\n                                Download Json\n                            </Button>\n                            <Tooltip placement=\"bottom\" title=\"Have any confusion? Check user manual from overview button.\">\n                                <Button type=\"primary\" onClick={this.handleClickRecord}>Record Step</Button>\n                            </Tooltip>\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_STEP_KEY\", \"[]\");\n                                this.setState({ steps: [] })\n                            }}>Clear all Steps</Button>\n                        </Col>\n                        <Col>\n                            {/* Reset Library */}\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_BOOK_KEY\", \"[]\");\n                                localStorage.setItem(\"STORED_FAULTS_KEY\", 0);\n                                this.setState({\n                                    books: [],\n                                    pageFaults: 0,\n                                });\n                                // this.setState({catalogShow: true})\n                                this.props.handleRoleChange(\"Student\");\n                            }}>Reset Library</Button>\n                            <Button type=\"primary\" onClick={this.handleClickShowSteps}>\n                                {this.state.isToggleOn ? 'Hide Steps Info' : 'Show Steps Info'}\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 6, offset: 3 }}>\n                            <Select placeholder=\"Select a step\" style={{ width: 120 }} onChange={this.handleSelectChange}>\n                                {this.state.steps.map(step => (\n                                    <Option value={this.state.steps.indexOf(step) + 1}>{this.state.steps.indexOf(step) + 1}</Option>\n                                ))}\n                            </Select>\n                            <Popconfirm\n                                title={\"Are you sure to undo step \" + this.state.undoStep + \" and all the following steps?\"}\n                                onConfirm={this.handleConfirm}\n                                okText=\"Yes\"\n                                cancelText=\"No\">\n                                <Button>Undo</Button>\n                            </Popconfirm>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h5 className=\"computer-title\"><strong>Catalog Computer</strong></h5>\n                            <div className={(role === \"Librarian\") ? \"wrapper\" : \"\"}>\n                                <div className={(role === \"Librarian\") ? \"is-disabled\" : \"\"}>\n                                    <div className=\"search-monitor\">\n                                        <div className=\"search-container\">\n                                            <Row>\n                                                Please Search for any Book\n                                            </Row>\n                                            <Row>\n                                                <div className=\"form-inline mt-4 mb-4\" >\n                                                    <input className=\"form-control-sm\" type=\"text\" placeholder=\"Find a Book\" aria-label=\"Search\"\n                                                        value={this.state.query}\n                                                        onClick={event => {\n                                                            message.info(\"You can enter any book you want\")\n                                                        }}\n                                                        onChange={event => this.setState({ query: event.target.value })}\n                                                        onKeyPress={event => {\n                                                            if (event.key === 'Enter') {\n                                                                this.handleClickSearch()\n                                                            }\n                                                        }} />\n                                                    <Button type=\"primary\" onClick={this.handleClickSearch}>Search</Button>\n                                                </div>\n                                            </Row>\n                                            <Row>\n                                                <strong>Catalog Card</strong>\n                                            </Row>\n                                            <Row>\n                                                <Catalog\n                                                    query={this.state.value}\n                                                    show={this.state.catalogShow}\n                                                    onHide={this.catalogClose}\n                                                    numOfBins={this.state.numOfBins}\n                                                    handleRoleChange={this.props.handleRoleChange}\n                                                />\n                                            </Row>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                        <DndProvider backend={HTML5Backend}>\n                            <Col className=\"bookshelf-view\">\n                                <h5 className=\"computer-title\"><strong>Bookshelf</strong></h5>\n                                <p><strong>Number of levels:</strong>  <InputNumber min={1} max={8} value={this.state.numOfShelfLevels} onChange={this.onChangeLevelInput} /> (Min: 1, Max: 8)</p>\n                                <p><strong>Number of positions per level:</strong> <InputNumber min={3} max={5} value={this.state.numOfBooksPerLevel} onChange={this.onChangePositionInput} /> (Min: 3, Max: 5)</p>\n                                <div>\n                                    <Bookshelf\n                                        numOfLevels={this.state.numOfShelfLevels}\n                                        numOfBooksPerLevel={this.state.numOfBooksPerLevel}\n                                        bookcaseHeight={this.state.bookcaseHeight}\n                                        bookcaseWidth={this.state.bookcaseWidth}\n                                        bookstandMarginTop={this.state.bookstandMarginTop}\n                                        bookstandMarginLeft={this.state.bookstandMarginLeft}\n                                        books={this.state.books}\n                                        dragHandler={this.dragHandler.bind(this)}\n                                        dbclick={this.dbclick()}\n                                    />\n                                </div>\n                            </Col>\n                            <Col className=\"storage-view\">\n                                <div className={(role === \"Student\") ? \"wrapper\" : \"\"}>\n                                    <div className={(role === \"Student\") ? \"is-disabled\" : \"\"}>\n                                        <Storage\n                                            books={this.state.books}\n                                            numOfBins={this.state.numOfBins}\n                                            dragHandler={this.dragHandler.bind(this)}\n                                        />\n                                    </div>\n                                </div>\n                            </Col>\n                        </DndProvider>\n                        <Col style={{ display: this.state.display }}>\n                            <h5 className=\"computer-title\"><strong>Steps Info</strong></h5>\n                            <div className=\"demo-infinite-container\">\n                                <InfiniteScroll\n                                    initialLoad={false}\n                                    pageStart={0}\n                                    loadMore={this.handleInfiniteOnLoad}\n                                    hasMore={!this.state.loading && this.state.hasMore}\n                                    useWindow={false}\n                                >\n                                    <List\n                                        dataSource={this.state.steps}\n                                        bordered\n                                        renderItem={step => (\n                                            // <Card title={step.id}>\n                                            <List.Item key={step.id}>\n                                                <h5>Step {this.state.steps.indexOf(step) + 1}: </h5>\n                                                {step.map(book => (\n                                                    <p><strong>{book.name}</strong> {(book.location === 0 ? \"storage: bin\" + book.bin : \"bookshelf: level\" + book.level + \"; position\" + book.position)}</p>\n                                                ))}\n                                            </List.Item>\n                                            // </Card>\n                                        )} />\n                                </InfiniteScroll>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div >\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport { Drawer } from 'antd';\nimport \"./App.css\";\n\nclass App extends React.Component {\n\n  state = {\n    role: \"Student\",\n    visible: false\n  };\n\n  handleValueChange = (e) => {\n    console.log('role button checked', e.target.value);\n    this.setState({ role: e.target.value })\n  }\n\n  handleRoleChange(role) {\n    this.setState({ role: role })\n  }\n\n  clickOverview = (e) => {\n    // console.log('overview button clicked', e.target.value);\n    this.showDrawer();\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header role={this.state.role} onChange={this.handleValueChange.bind(this)} clickOverview={this.clickOverview.bind(this)} />\n        <Drawer\n          title=\"Introduction\"\n          placement=\"right\"\n          width=\"600px\"\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}\n        >\n          <h5>Memory Paging vs. Library Analogy</h5>\n          <ul>\n            <li>A <strong>page</strong> is a <strong>book</strong> on the bookshelf.</li>\n            <li><strong>Virtual memory</strong> is the <strong>catelog computer</strong> with list of names of books available.</li>\n            <li><strong>Physical memory</strong> is the <strong>bookshelf</strong> with level numbers and position numbers as 'addresses'.</li>\n            <li><strong>Swap space</strong> is the basement <strong>book storage</strong> where unpopular books are kept.</li>\n            <li><strong>Page table</strong> is the <strong>catalog card</strong> that maps a book name to level number and position number.</li>\n            <li><strong>Operating system</strong> is the <strong>librarian</strong> in charge of organizing the books.</li>\n          </ul>\n\n          <h5>Bookshelf Function Instruction (For each book)</h5>\n          <ul>\n            <li>Mouse over 2 seconds for the book details.</li>\n            <li>Double click for retriving the book.</li>\n            <li>The red badge at the corner indicates its retrieve frequency.</li>\n          </ul>\n\n          <h5>Record Series Buttons Function</h5>\n          <ul>\n            <li><strong>Record Step: </strong>Record current books in the library.</li>\n            <li><strong>Clear all Steps: </strong>Clear all recorded steps.</li>\n            <li><strong>Download Json: </strong>Download all recorded steps as Json file.</li>\n            <li><strong>Upload Json: </strong>Upload downloaded Json file or formatted Json file with steps and show with initial step.</li>\n            <li><strong>Next: </strong>Go to the next step in uploaded Json file.</li>\n            <li><strong>Previous: </strong>Go to the previous step in uploaded Json file.</li>\n          </ul>\n\n          <h5>Record Buttons User Manual</h5>\n          <ul>\n            <li>Recording process:</li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Record Step\" button after any actions or movement until you are satisfied with books in current library.</li>\n              <li><strong>Adanced Step:</strong> Click on the dropdown menu from \"Undo\" button and select the specific step you want to erase and redo recording process following step 1.</li>\n              <li><strong>Step 2:</strong> Click on \"Download Json\" button to export the Json file with all steps you recorded recently.</li>\n            </ul>\n            <br />\n            <li>Uploading and display process: </li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Upload Json\" button to import the downloaded Json file and books from the first step would appear on screen as default.</li>\n              <li><strong>Step 2:</strong> Display books from Json file step by step.</li>\n              <ul>\n                <li><strong>Step 2.1:</strong> Click on \"next\" button to display books from the next step.</li>\n                <li><strong>Step 2.2:</strong> Click on \"previous\" button to display books from the previous step.</li>\n              </ul>\n            </ul>\n\n          </ul>\n        </Drawer>\n        <Main role={this.state.role} handleRoleChange={this.handleRoleChange.bind(this)} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}