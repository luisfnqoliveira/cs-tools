{"version":3,"sources":["assets/images/Upitt_logo_400x400.jpg","components/Header.js","components/Footer.js","utilities/items.js","assets/images/bookCover.jpg","components/Book.js","components/BookStand.js","components/SingleBookCase.js","components/Bookshelf.js","components/Catalog.js","components/Bin.js","components/Storage.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["roles","label","value","Role","Group","options","onChange","this","props","role","optionType","buttonStyle","Component","Header","className","src","upittLogo","alt","style","color","onClick","clickOverview","Footer","ItemTypes","Book","Meta","Card","useDrag","type","item","code","name","level","position","created_date","frequency","last_borrowed","collect","monitor","isDragging","drag","content","animation","y","repeat","yoyo","ease","TweenOne","easing","path","duration","appearTo","scaleX","scaleY","animationShow","ref","bouncingBooks","some","book","count","title","mouseEnterDelay","hoverable","left","width","height","cover","bookcover","description","author","query","message","success","map","BookStand","positionIntro","useDrop","accept","drop","dragHandler","isOver","inputRef","useRef","useEffect","document","addEventListener","event","preventDefault","books","Object","keys","length","constructor","placement","shelfBook","filter","location","i","SingleBookCase","levelIntro","numOfBooksPerLevel","bookstands","bookstandMarginTop","bookstandMarginLeft","bookcaseSize","bookcaseHeight","bookcaseWidth","bookstandMargin","marginTop","marginLeft","flyingBooks","handleFromUpdate","handleToUpdate","Bookshelf","numOfLevels","bookcases","numOfBooks","dbclick","STORED_BOOK_KEY","Catalog","React","useState","setLocation","setLevel","setPosition","bin","setBin","show","found","retrievedBooksString","localStorage","getItem","JSON","parse","setItem","err","getStoredBooks","find","numOfBins","display","Bin","toBin","binId","binTitle","storageBook","trigger","Storage","state","bins","binBooks","getStoredSteps","retrievedStepsString","getStoredFaults","retrivedNumOfFaults","Main","toLocation","toLevel","toPosition","booksCopy","bookDragged","index","indexOf","setState","is_empty","shelf_book","storedBooks","numOfShelfLevels","sessionStorage","storedBooksJson","stringify","catalogShow","error","info","ondblclick","e","target","draggable","book_name","offsetParent","innerText","data","alert","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","window","reload","warning","catalogClose","showToLibrarianDialog","displayToLibrarianDialog","handleToLibrarian","displayMoveBookDialog","handleRoleChange","handleToStudent","displayNoticeDialog","handleFinishDialog","handleClickSearch","console","log","min","max","bookObj","require","uniqid","Math","ceil","floor","random","push","storeBook","targetBook","targetBookBinNumber","handleFaultsIncrement","warn","handleUpload","files","fileReader","FileReader","readAsText","onload","result","steps","disableNext","handleClickUpload","hiddenFileInput","current","click","handleClickRecord","storedSteps","currentStep","storedStepsJson","handleInfiniteOnLoad","loading","hasMore","handleConfirm","undoStep","slice","onChangeLevelInput","onChangePositionInput","pageFaults","prevState","hideConfig","configVisible","handleConfigVisibleChange","createRef","handleClickNext","bind","handleClickPrevious","handleClickShowSteps","handleSelectChange","lib","pointer","isToggleOn","nextClicked","prevProps","prevStates","fileContent","fromX","fromY","flyingBooksCopy","setTimeout","toX","toY","currStep","nextStep","existingBook","newBook","j","Option","Select","Container","fluid","Row","Col","disabled","href","encodeURIComponent","download","md","span","offset","placeholder","step","onConfirm","okText","cancelText","aria-label","onKeyPress","key","onHide","textAlign","valueStyle","DndProvider","backend","HTML5Backend","visible","onVisibleChange","initialLoad","pageStart","loadMore","useWindow","dataSource","bordered","renderItem","Item","id","App","handleValueChange","showDrawer","onClose","closable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b15b838.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Upitt_logo_400x400.8afe9141.jpg\";","import React, { Component } from 'react';\nimport upittLogo from '../assets/images/Upitt_logo_400x400.jpg';\nimport { Radio } from \"antd\";\nimport \"../styles/Header.css\";\nimport \"antd/dist/antd.css\";\n\nconst roles = [\n\t{ label: \"Student\", value: \"Student\" },\n\t{ label: \"Librarian\", value: \"Librarian\" }\n];\n\nclass Role extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Radio.Group\n\t\t\t\toptions={roles}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\tvalue={this.props.role}\n\t\t\t\toptionType=\"button\"\n\t\t\t\tbuttonStyle=\"solid\"\n\t\t\t/>\n\t\t);\n\t}\n}\n\nclass Header extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"App-header\" >\n\t\t\t\t<img src={upittLogo} alt='logo' className=\"App-logo\" />\n\t\t\t\t<p className=\"title\" >\n\t\t\t\t\tMemory Paging Practice System\n                </p>\n\t\t\t\t<div className=\"overview-button\">\n\t\t\t\t\t<a style={{color: \"white\"}} onClick={this.props.clickOverview}>Overview</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"role-button\">\n\t\t\t\t\t<Role role={this.props.role} onChange={this.props.onChange} />\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport \"../styles/Footer.css\"\n\nclass Footer extends Component {\n    render() {\n        return ( \n            <footer className = \"footer\" >\n            University of Pittsburgh \n            </footer>\n        );\n    }\n}\n\nexport default Footer;","export const ItemTypes = {\n    BOOK: 'book',\n  }","export default __webpack_public_path__ + \"static/media/bookCover.6a39f467.jpg\";","import React from 'react';\nimport { Card, Popover, Badge } from 'antd';\nimport bookcover from '../assets/images/bookCover.jpg';\nimport { ItemTypes } from '../utilities/items.js';\nimport { useDrag } from 'react-dnd';\nimport { message } from 'antd';\n// import PropTypes from 'prop-types';\nimport TweenOne from 'rc-tween-one';\n\nfunction Book(props) {\n    const { Meta } = Card;\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.BOOK,\n        item: {\n            code: props.code,\n            name: props.name,\n            level: props.level,\n            position: props.position,\n            created_date: props.created_date,\n            frequency: props.frequency,\n            last_borrowed: props.last_borrowed,\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    }))\n\n    const content = (\n        <div>\n            <p>Created: {props.created_date}</p>\n            <p>Frequency: {props.frequency}</p>\n            <p>Last borrowed: {props.last_borrowed}</p>\n        </div>\n    );\n\n    const p0 = 'M0,100 L25,100 C34,20 40,0 100,0';\n    const p1 = 'M0,100 C5,120 25,130 25,100 C30,60 40,75 58,90 C69,98.5 83,99.5 100,100';\n    const ease0 = TweenOne.easing.path(p0);\n    const ease1 = TweenOne.easing.path(p1);\n\n    const animation = [\n        {\n            // repeatDelay: 300,\n            y: -70,\n            repeat: 1,\n            yoyo: true,\n            ease: ease0,\n            duration: 500\n        },\n        {\n            // repeatDelay: 300,\n            appearTo: 0,\n            scaleX: 0,\n            scaleY: 2,\n            repeat: 1,\n            yoyo: true,\n            ease: ease1,\n            duration: 500,\n        }\n    ];\n\n    if (!props.animationShow) {\n        return (\n            <div ref={drag}>\n                <Badge count={props.frequency}>\n                    <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                        <Card\n                            hoverable\n                            style={{ left: 14, width: 70, height: 80 }}\n                            cover={<img alt=\"bookcover\" src={bookcover} />}\n                        >\n                            <Meta title={props.name}\n                                description={props.author}\n                                onClick={() => {\n                                    if (props.name === props.query)\n                                        message.success(\"You have successfully retrieved \" + props.name);\n                                }}\n                            />\n                        </Card>\n                    </Popover>\n                </Badge>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div ref={drag}>\n                {props.bouncingBooks.some(book => book.code === props.code) === false &&\n                    <Badge count={props.frequency}>\n                        <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                            <Card\n                                hoverable\n                                style={{ left: 14, width: 70, height: 80 }}\n                                cover={<img alt=\"bookcover\" src={bookcover} />}\n                            >\n                                <Meta title={props.name}\n                                    description={props.author}\n                                    onClick={() => {\n                                        if (props.name === props.query)\n                                            message.success(\"You have successfully retrieved \" + props.name);\n                                    }}\n                                />\n                            </Card>\n                        </Popover>\n                    </Badge>}\n                {props.bouncingBooks.map(book => {\n                    if (book.code === props.code) {\n                        return (\n                            <div ref={drag}>\n                                <TweenOne\n                                    animation={animation}\n                                //   paused={true}\n                                //   className=\"code-box-shape\"\n                                //   style={{\n                                //     position: 'absolute',\n                                //     transformOrigin: 'center bottom',\n                                //   }}\n                                >\n                                    <Badge count={props.frequency}>\n                                        <Popover content={content} title={props.name} mouseEnterDelay={2}>\n                                            <Card\n                                                hoverable\n                                                style={{ left: 14, width: 70, height: 80 }}\n                                                cover={<img alt=\"bookcover\" src={bookcover} />}\n                                            >\n                                                <Meta title={props.name}\n                                                    description={props.author}\n                                                    onClick={() => {\n                                                        if (props.name === props.query)\n                                                            message.success(\"You have successfully retrieved \" + props.name);\n                                                    }}\n                                                />\n                                            </Card>\n                                        </Popover>\n                                    </Badge>\n                                </TweenOne>\n                            </div>\n                        );\n                    }\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Book;","import React, { useRef, useEffect, useState } from 'react';\nimport { Tooltip } from 'antd';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\nimport Book from './Book.js';\n\nfunction BookStand(props) {\n    const positionIntro = \"Position \" + props.position;\n    const toShelf = 1;\n    const toBin = 0;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toShelf, toBin, props.level, props.position),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    const inputRef = useRef();\n\n    const onWindowResize = _ => {\n        updateDimension();\n    };\n\n    const updateDimension = () => {\n        if (inputRef.current) {\n            console.log(\"reset bookstand\")\n            let bookstand = {\n                level: props.level,\n                position: props.position,\n                x: inputRef.current.getBoundingClientRect().x,\n                y: inputRef.current.getBoundingClientRect().y\n            };\n            console.log(\"add bookstand\", bookstand)\n        }\n    }\n    useEffect(() => {\n        // updateDimension();\n        // window.addEventListener(\"resize\", onWindowResize, true);\n        // return () => {\n        //     window.removeEventListener(\"resize\", onWindowResize, true);\n        // };\n    }, []);\n\n    document.addEventListener(\"drop\", function (event) {\n        event.preventDefault();\n    })\n\n    const books = props.books;\n    if (Object.keys(books).length === 0 && books.constructor === Object) {\n        return (\n            <Tooltip placement=\"bottom\" title={positionIntro}>\n                <div className=\"bookstand\">\n                </div>\n            </Tooltip>\n        );\n    }\n    else {\n        const shelfBook = books.filter(book => book.location === 1);\n        return (\n            <div ref={inputRef}>\n                <Tooltip placement=\"bottom\" title={positionIntro}>\n                    {/* <div\n                    ref={el => {\n                        if (!el) return;\n                        if (props.flyingBooks.length > 0 && props.animationShow) {\n                            console.log(props.flyingBooks)\n                            props.flyingBooks.map(book => {\n                                if (book.fromLevel === props.level && book.fromPosition === props.position) {\n                                    let fromX = el.getBoundingClientRect().x\n                                    let fromY = el.getBoundingClientRect().y\n                                    props.handleFromUpdate(book.name, fromX, fromY)\n                                }\n                                if (book.toLevel === props.level && book.toPosition === props.position) {\n                                    let toX = el.getBoundingClientRect().x\n                                    let toY = el.getBoundingClientRect().y\n                                    props.handleToUpdate(book.name, toX, toY)\n                                }\n                            })\n                        }\n                    }}> */}\n                    <div className=\"bookstand\" ref={drop}>\n                        {shelfBook.map(i => {\n                            if (i.level === props.level && i.position === props.position) {\n                                return (\n                                    <Book\n                                        key={i.code}\n                                        code={i.code}\n                                        name={i.name}\n                                        // author={i.author}\n                                        location={i.location}\n                                        level={i.level}\n                                        position={i.position}\n                                        created_date={i.created_date}\n                                        frequency={i.frequency}\n                                        last_borrowed={i.last_borrowed}\n                                        animationShow={props.animationShow}\n                                        bouncingBooks={props.bouncingBooks}\n                                    />\n\n                                )\n                            }\n                        })}\n                    </div>\n                    {/* </div> */}\n                </Tooltip>\n            </div >\n        );\n    }\n}\n\nexport default BookStand;","import React, { Component } from 'react';\nimport { Tooltip } from 'antd';\nimport BookStand from './BookStand';\n\nclass SingleBookCase extends Component {\n\n    render() {\n        const levelIntro = \"Level \" + this.props.level;\n        const { numOfBooksPerLevel } = this.props;\n        let bookstands = [];\n        for (let i = 0; i < numOfBooksPerLevel; i++) {\n            bookstands = [...bookstands, {\n                position: i + 1,\n                level: this.props.level,\n                books: this.props.books,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n\n        let bookcaseSize = {\n            height: this.props.bookcaseHeight,\n            width: this.props.bookcaseWidth,\n        }\n\n        return (\n            <Tooltip placement=\"leftTop\" title={levelIntro}>\n                <div className=\"bookcase\" style={bookcaseSize}>\n                    {\n                        bookstands.map(i => {\n                            let bookstandMargin = {\n                                marginTop: i.bookstandMarginTop,\n                                marginLeft: i.bookstandMarginLeft\n                            }\n                            return (\n                                <div className=\"single\" style={bookstandMargin}>\n                                    <BookStand\n                                        position={i.position}\n                                        key={i.position}\n                                        level={i.level}\n                                        books={i.books}\n                                        bookcaseHeight={i.bookcaseHeight}\n                                        bookcaseWidth={i.bookcaseWidth}\n                                        bookstandMarginTop={i.bookstandMarginTop}\n                                        dragHandler={this.props.dragHandler}\n                                        animationShow={this.props.animationShow}\n                                        bouncingBooks={this.props.bouncingBooks}\n                                        flyingBooks={this.props.flyingBooks}\n                                        handleFromUpdate={this.props.handleFromUpdate}\n                                        handleToUpdate={this.props.handleToUpdate}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SingleBookCase;","import React, { Component } from 'react';\nimport SingleBookCase from './SingleBookCase';\n\nclass Bookshelf extends Component {\n\n    render() {\n        const { numOfLevels } = this.props;\n        const { numOfBooksPerLevel } = this.props;\n        let bookcases = [];\n        for (let i = 0; i < numOfLevels; i++) {\n            bookcases = [...bookcases, {\n                level: i + 1,\n                numOfBooks: numOfBooksPerLevel,\n                books: this.props.books,\n                bookcaseHeight: this.props.bookcaseHeight,\n                bookcaseWidth: this.props.bookcaseWidth,\n                bookstandMarginTop: this.props.bookstandMarginTop,\n                bookstandMarginLeft: this.props.bookstandMarginLeft\n            }];\n        }\n        return (\n            <div className=\"bookshelf\">\n                {/* <h5 class=\"text-center\"><strong>Bookshelf</strong></h5> */}\n                {\n                    bookcases.map(i => {\n                        return (\n                            <SingleBookCase level={i.level}\n                                key={i.level}\n                                numOfBooksPerLevel={i.numOfBooks}\n                                bookcaseHeight={i.bookcaseHeight}\n                                bookcaseWidth={i.bookcaseWidth}\n                                bookstandMarginTop={i.bookstandMarginTop}\n                                bookstandMarginLeft={i.bookstandMarginLeft}\n                                books={i.books}\n                                dragHandler={this.props.dragHandler}\n                                dbclick={this.props.dbclick}\n                                animationShow={this.props.animationShow}\n                                bouncingBooks={this.props.bouncingBooks}\n                                flyingBooks={this.props.flyingBooks}\n                                handleFromUpdate={this.props.handleFromUpdate}\n                                handleToUpdate={this.props.handleToUpdate}\n                            />\n                        )\n                    })\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Bookshelf;","import React from 'react';\n\nconst STORED_BOOK_KEY = 'STORED_BOOK_KEY';\n\nfunction getStoredBooks() {\n  try {\n    const retrievedBooksString = localStorage.getItem(STORED_BOOK_KEY);\n    if (!retrievedBooksString) {\n      localStorage.setItem(STORED_BOOK_KEY, \"[]\")\n      return [];\n    }\n    return JSON.parse(retrievedBooksString);\n  }\n  catch (err) {\n    localStorage.setItem(STORED_BOOK_KEY, '[]');\n    return [];\n  }\n}\n\nexport function Catalog(props) {\n  const [location, setLocation] = React.useState();\n  const [level, setLevel] = React.useState();\n  const [position, setPosition] = React.useState();\n  const [bin, setBin] = React.useState();\n\n  // when modal open\n  React.useEffect(() => {\n    if (props.show) {\n      const books = getStoredBooks();\n      const found = books.find(book => book.name === props.query);\n      if (found) {\n        setLocation(found.location);\n        setLevel(found.level);\n        setPosition(found.position);\n        setBin(found.bin);\n      }\n    }\n  }, [props.show, props.query, props.numOfBins]);\n\n  return (\n    <pre>\n      <u>Book Name</u>: {props.query}{\"\\n\"}\n      <u>Location</u>: {location === 0 ? 'storage' : location === 1 ? 'bookshelf' : ''}{\"\\n\"}\n      <div style={{ display: location === 0 ? 'block' : 'none'}}><u>Storage Bin</u>: {bin} </div>\n      <div style={{ display: location === 1 ? 'block' : 'none'}}><u>Level</u>: {level} </div> \n      <div style={{ display: location === 1 ? 'block' : 'none'}}><u>Position</u>: {position}</div>\n    </pre>\n  );\n}","import React from 'react';\nimport { Popover, Tooltip } from 'antd';\nimport Book from './Book';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../utilities/items.js';\n\nfunction Bin(props) {\n    const toStorage = 0;\n    const toBin = props.binId;\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.BOOK,\n        drop: (item, monitor) => props.dragHandler(item, toStorage, toBin, 0, 0),\n        collect: monitor => ({\n            isOver: !!monitor.isOver()\n        })\n    })\n\n    var content = (<div className=\"book-container\"></div>);\n    const binTitle = \"Bin \" + props.binId;\n    if (Object.keys(props.books).length === 0 && props.books.constructor === Object) {\n\n    } else {\n        // TODO: not only for location == 0, also need to seperate them by different bins\n        let storageBook = props.books.filter(book => book.location === 0);\n        content = (\n            <div className=\"book-container\">\n                {\n                    storageBook.map(i => {\n                        return (\n                            <div className='book-align-block'>\n                                <Book\n                                    key={i.code}\n                                    code={i.code}\n                                    name={i.name}\n                                    // author={i.author}\n                                    location={i.location}\n                                    level={i.level}\n                                    position={i.position}\n                                    created_date={i.created_date}\n                                    frequency={i.frequency}\n                                    last_borrowed={i.last_borrowed}\n                                    animationShow={props.animationShow}\n                                    bouncingBooks={props.bouncingBooks}\n                                />\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n    return (\n        <Tooltip placement=\"top\" title={binTitle}>\n            <Popover content={content} placement=\"top\" title={binTitle} trigger=\"click\">\n                {/* <div className=\"bin\"> */}\n                     {/* ref={el => {\n                        if (zz!el) return;\n                        if (props.flyingBooks) {\n                            props.flyingBooks.map(book => {\n                                if (book.fromBin === props.binId) {\n                                    let fromX = el.getBoundingClientRect().x\n                                    let fromY = el.getBoundingClientRect().y\n                                    props.handleFromUpdate(book.name, fromX, fromY)\n                                }\n                                if (book.toBin === props.binId) {\n                                    let toX = el.getBoundingClientRect().x\n                                    let toY = el.getBoundingClientRect().y\n                                    props.handleToUpdate(book.name, toX, toY)\n                                }\n                            })\n                        } */}\n                    <div className=\"bin\" ref={drop}></div>\n                {/* </div> */}\n            </Popover>\n        </Tooltip>\n    );\n}\n\nexport default Bin;","import React, { Component } from 'react';\nimport Bin from './Bin';\nimport TweenOne from 'rc-tween-one';\n\nclass Storage extends Component {\n    state = {\n\n    }\n\n    render() {\n        const p0 = 'M0,100 L25,100 C34,20 40,0 100,0';\n        const p1 = 'M0,100 C5,120 25,130 25,100 C30,60 40,75 58,90 C69,98.5 83,99.5 100,100';\n        const ease0 = TweenOne.easing.path(p0);\n        const ease1 = TweenOne.easing.path(p1);\n\n        const animation = [\n            {\n                // repeatDelay: 300,\n                y: -70,\n                repeat: 1,\n                yoyo: true,\n                ease: ease0,\n                duration: 500\n            },\n            {\n                // repeatDelay: 300,\n                appearTo: 0,\n                scaleX: 0,\n                scaleY: 2,\n                repeat: 1,\n                yoyo: true,\n                ease: ease1,\n                duration: 500,\n            }\n        ];\n        const { numOfBins } = this.props;\n        const { books } = this.props;\n        let bins = [];\n        // check if books array is empty\n        if (Object.keys(this.props.books).length === 0 && this.props.books.constructor === Object) {\n            for (let i = 0; i < numOfBins; i++) {\n                bins = [...bins, {\n                    binId: i + 1,\n                    // do we need to limit number of books in each bin? \n\n                    // filter books in different bins, still need to check\n                    books: [],\n                }];\n            }\n        } else {\n            for (let i = 0; i < numOfBins; i++) {\n                const binBooks = books.filter(book => book.bin === i + 1);\n                bins = [...bins, {\n                    binId: i + 1,\n                    // do we need to limit number of books in each bin? \n\n                    // filter books in different bins, still need to check\n                    books: binBooks,\n                }];\n            }\n        }\n\n        if (this.props.animationShow) {\n            return (\n                <div className=\"storage\">\n                    <h5><strong>Book Storage</strong></h5>\n                    {\n                        bins.map(i => {\n                            // console.log(this.props.bouncingBooks)\n                            // console.log(this.props.bouncingBooks.some(book => book.bin === i.binId))\n                            if (this.props.bouncingBooks.some(book => book.bin === i.binId)) {\n                                return (\n                                    <TweenOne animation={animation}>\n                                        <Bin\n                                            binId={i.binId}\n                                            key={i.binId}\n                                            books={i.books}\n                                            dragHandler={this.props.dragHandler}\n                                            animationShow={this.props.animationShow}\n                                            bouncingBooks={this.props.bouncingBooks}\n                                            flyingBooks={this.props.flyingBooks}\n                                            handleFromUpdate={this.props.handleFromUpdate}\n                                            handleToUpdate={this.props.handleToUpdate}\n                                        />\n                                    </TweenOne>\n                                )\n                            }\n                            else {\n                                return (\n                                    <Bin\n                                        binId={i.binId}\n                                        key={i.binId}\n                                        books={i.books}\n                                        dragHandler={this.props.dragHandler}\n                                        animationShow={this.props.animationShow}\n                                        bouncingBooks={this.props.bouncingBooks}\n                                        flyingBooks={this.props.flyingBooks}\n                                        handleFromUpdate={this.props.handleFromUpdate}\n                                        handleToUpdate={this.props.handleToUpdate}\n                                    />\n                                )\n                            }\n                        })\n                    }\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"storage\">\n                    <h5><strong>Book Storage</strong></h5>\n                    {\n                        bins.map(i => {\n                            return (\n                                <Bin\n                                    binId={i.binId}\n                                    key={i.binId}\n                                    books={i.books}\n                                    dragHandler={this.props.dragHandler}\n                                    animationShow={this.props.animationShow}\n                                    bouncingBooks={this.props.bouncingBooks}\n                                    flyingBooks={this.props.flyingBooks}\n                                    handleFromUpdate={this.props.handleFromUpdate}\n                                    handleToUpdate={this.props.handleToUpdate}\n                                />\n                            )\n                        })\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default Storage;","import React, { Component } from 'react';\nimport Bookshelf from './Bookshelf';\nimport \"../styles/Main.css\";\nimport \"antd/dist/antd.css\";\nimport Container from 'react-bootstrap/Container';\nimport '../App.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Catalog } from './Catalog.js';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Storage from './Storage';\nimport { message, Button, List, Tooltip, Select, Popconfirm, InputNumber, Statistic, Card, Popover } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nfunction getStoredBooks() {\n    try {\n        const retrievedBooksString = localStorage.getItem('STORED_BOOK_KEY');\n        if (!retrievedBooksString) {\n            localStorage.setItem('STORED_BOOK_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedBooksString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredSteps() {\n    try {\n        const retrievedStepsString = localStorage.getItem('STORED_STEP_KEY');\n        if (!retrievedStepsString) {\n            localStorage.setItem('STORED_STEP_KEY', \"[]\")\n            return [];\n        }\n        return JSON.parse(retrievedStepsString);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getStoredFaults() {\n    try {\n        const retrivedNumOfFaults = localStorage.getItem('STORED_FAULTS_KEY');\n        if (!retrivedNumOfFaults) {\n            localStorage.setItem('STORED_FAULTS_KEY', 0)\n            return 0;\n        }\n        return JSON.parse(retrivedNumOfFaults);\n    } catch (err) {\n        return [];\n    }\n}\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction storeBook(name, numOfBins) {\n    console.log('storing book', name);\n    const today = new Date();\n    const storedBooks = getStoredBooks();\n    const found = storedBooks.find(book => {\n        return book.name === name;\n    })\n    if (found) {\n        sessionStorage.setItem('STORED_BOOK_KEY', name);\n    } else {\n        // store the book\n        var uniqid = require('uniqid');\n        const bookObj = {\n            code: uniqid(),\n            name: name,\n            location: 0,\n            bin: getRandomIntInclusive(1, numOfBins),  // store to bin randomly\n            level: 0,\n            position: 0,\n            created_date: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds(),\n            frequency: 0,\n            last_borrowed: 0,\n        };\n        storedBooks.push(bookObj);\n        const storedBooksJson = JSON.stringify(storedBooks);\n        localStorage.setItem('STORED_BOOK_KEY', storedBooksJson);\n    }\n}\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.hiddenFileInput = React.createRef();\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickPrevious = this.handleClickPrevious.bind(this);\n        this.handleClickShowSteps = this.handleClickShowSteps.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleFaultsIncrement = this.handleFaultsIncrement.bind(this);\n        this.handleClickSearch = this.handleClickSearch.bind(this);\n        this.state = {\n            role: this.props.role,\n            value: '',\n            lib: [],\n            catalogShow: false,\n            numOfShelfLevels: 5,\n            numOfBooksPerLevel: 3,\n            bookcaseHeight: '120px',\n            bookcaseWidth: '340px',\n            bookstandMarginTop: '30px',\n            bookstandMarginLeft: '5px',\n            numOfBins: 4,\n            books: getStoredBooks(), // location: 0-storage; 1-bookshelf\n            query: '',\n            error: 0,\n            steps: getStoredSteps(),\n            files: \"\",\n            pointer: 0,\n            isToggleOn: false,\n            display: 'none',\n            disableNext: true,\n            loading: false,\n            hasMore: true,\n            undoStep: null,\n            pageFaults: getStoredFaults(),\n            animationShow: false,\n            bouncingBooks: [],\n            flyingBooks: [],\n            nextClicked: false,\n            configVisible: false,\n            displayToLibrarianDialog: 'none',\n            displayMoveBookDialog: 'none',\n            displayNoticeDialog: 'none',\n            targetBookBinNumber: 0\n        }\n    }\n\n    dragHandler = (item, toLocation, toBin, toLevel, toPosition) => {\n        let booksCopy = [...this.state.books];\n        let bookDragged = booksCopy.filter(book => book.code === item.code);\n        let index = booksCopy.indexOf(bookDragged[0]);\n        bookDragged[0].location = toLocation;\n        bookDragged[0].bin = toBin;\n        bookDragged[0].level = toLevel;\n        bookDragged[0].position = toPosition;\n        booksCopy[index] = bookDragged[0];\n        this.setState({ books: booksCopy });\n\n        var is_empty = 0;\n        var shelf_book = 1;\n        var storedBooks = getStoredBooks();\n        for (var i = 0; i < storedBooks.length; i++) {\n            if (storedBooks[i].name !== item.name && toLocation === 1) {\n                if (storedBooks[i].level === toLevel && storedBooks[i].position === toPosition) {\n                    is_empty = 1;\n                }\n            }\n\n            if (storedBooks[i].location === 1) {\n                shelf_book += 1;\n            }\n        }\n\n        if (toLocation === 1 && shelf_book > this.state.numOfShelfLevels * this.state.numOfBooksPerLevel) {\n            is_empty = 2;\n        }\n\n        if (is_empty === 0) {\n            for (i = 0; i < storedBooks.length; i++) {\n                if (storedBooks[i].code === item.code) {\n                    if (storedBooks[i].location === 0 && toLocation === 1) {\n                        // var today = new Date();\n                        // storedBooks[i].created_date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n                        sessionStorage.setItem(\"STORED_BOOK_KEY\", item.name);\n                    }\n                    storedBooks[i].name = item.name;\n                    storedBooks[i].location = toLocation;\n                    storedBooks[i].bin = toBin;\n                    storedBooks[i].level = toLevel;\n                    storedBooks[i].position = toPosition\n                }\n                var storedBooksJson = JSON.stringify(storedBooks);\n                localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                this.setState({ catalogShow: true })\n            }\n            if (toLocation === 1) {\n                message.success(item.name + \" is available on bookshelf now. Please double click to access.\");\n            }\n        }\n        else if (is_empty === 1) {\n            message.error(\"A book already exists on this position. Please choose another position as a librarian again!\");\n            this.setState({ error: 1 });\n        }\n        else {\n            message.error(\"The bookshelf is full. Please remove a book from the shelf to storage bin before adding another book to the shelf.\", 15);\n            message.info(\"You can remove the book with least frequency.\", 15);\n            this.setState({ error: 1 });\n        }\n\n        this.setState({ animationShow: false })\n    }\n\n    dbclick = () => {\n        document.ondblclick = DoubleClick;\n        function DoubleClick(e) {\n            if (e.target.draggable === true) {\n                let book_name = e.target.offsetParent.innerText;\n                let data = sessionStorage.getItem('STORED_BOOK_KEY');\n\n                if (data === book_name) {\n                    alert(\"You have successfully retrieved \" + data);\n\n                    var storedBooks = getStoredBooks();\n                    var today = new Date();\n                    for (var i = 0; i < storedBooks.length; i++) {\n                        if (storedBooks[i].name === data) {\n                            storedBooks[i].frequency += 1;\n                            // this.updateFrequency(storedBooks[i].frequency);\n                            storedBooks[i].last_borrowed = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n                        }\n                        var storedBooksJson = JSON.stringify(storedBooks);\n                        localStorage.setItem(\"STORED_BOOK_KEY\", storedBooksJson);\n                    }\n                    sessionStorage.setItem('STORED_BOOK_KEY', '');\n                    window.location.reload();\n                }\n                else {\n                    message.warning(\"Please choose again\");\n                }\n            }\n        }\n    }\n\n    catalogClose = () => this.setState({ catalogShow: false });\n\n    componentDidUpdate(prevProps, prevStates) {\n        if (this.state.error !== prevStates.error) {\n            this.setState({\n                books: getStoredBooks(),\n            });\n            this.setState({ error: 0 });\n        }\n\n        if (this.state.catalogShow !== prevStates.catalogShow) {\n            this.setState({\n                books: getStoredBooks(),\n            });\n            this.catalogClose();\n        }\n    }\n\n    showToLibrarianDialog = () => {\n        this.setState({\n            displayToLibrarianDialog: 'block'\n        })\n    }\n\n    handleToLibrarian = () => {\n        this.setState({\n            displayToLibrarianDialog: 'none',\n            displayMoveBookDialog: 'block'\n        })\n        this.props.handleRoleChange(\"Librarian\");\n\n    }\n\n    handleToStudent = () => {\n        this.setState({\n            displayMoveBookDialog: 'none',\n            displayNoticeDialog: 'block'\n        })\n        this.props.handleRoleChange(\"Student\");\n    }\n\n    handleFinishDialog = () => {\n        this.setState({\n            displayNoticeDialog: 'none'\n        })\n    }\n\n    handleClickSearch = () => {\n        if (!this.state.query) {\n            alert('Please input a name!');\n        } else {\n            // let books = getStoredBooks();\n            // let targetBook = books.find(book => book.name === this.state.query)\n            // if (targetBook){\n            //     this.setState({ catalogShow: true, value: this.state.query })\n            //     if (targetBook.location === 0) {\n            //         message.info(\"The librarian is preparing the book.\");\n            //         message.info(\"Please move \" + this.state.query + \" from storage bin to bookshelf.\");\n            //         this.props.handleRoleChange(\"Librarian\");\n            //         this.handleFaultsIncrement();\n            //     }\n            //     if (targetBook.location === 1) {\n            //         message.info(\"You can now retrieve the book on level \" + targetBook.level + \" and position \" + targetBook.position);\n            //         message.warn(\"Please double click on the book to retrieve\");\n            //     }\n            // }\n            // else {\n            //     storeBook(this.state.query, this.state.numOfBins);\n            //     this.setState({ catalogShow: true, value: this.state.query })\n            //     books = getStoredBooks()\n            // }\n            storeBook(this.state.query, this.state.numOfBins);\n            this.setState({ catalogShow: true, value: this.state.query })\n            let books = getStoredBooks()\n            let targetBook = books.find(book => book.name === this.state.query)\n            if (targetBook) {\n                if (targetBook.location === 0) {\n                    // message.info(\"The librarian is preparing the book.\");\n                    this.showToLibrarianDialog();\n                    this.setState({ targetBookBinNumber: targetBook.bin });\n                    // message.info(\"Please move \" + this.state.query + \" from storage bin to bookshelf.\");\n                    this.handleFaultsIncrement();\n                }\n                if (targetBook.location === 1) {\n                    message.info(\"You can now retrieve the book on level \" + targetBook.level + \" and position \" + targetBook.position);\n                    message.warn(\"Please double click on the book to retrieve\");\n                }\n            }\n        }\n        this.setState({ animationShow: false })\n    }\n\n    handleUpload = e => {\n        /* To do: upload error handling */\n        if (e.target.files[0]) {\n            const fileReader = new FileReader();\n            fileReader.readAsText(e.target.files[0], \"UTF-8\");\n            fileReader.onload = e => {\n                // check empty array; todo: check format\n                if ((JSON.parse(e.target.result).length > 0)) {\n                    this.setState({\n                        files: JSON.parse(e.target.result),\n                        books: JSON.parse(e.target.result)[0],\n                        steps: JSON.parse(e.target.result),\n                        disableNext: false\n                    });\n                    localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(JSON.parse(e.target.result)[0]))\n                    localStorage.setItem('STORED_STEP_KEY', JSON.stringify(JSON.parse(e.target.result)))\n                    message.success(\"The Json file has uploaded successfully!\")\n\n                    this.setState({\n                        animationShow: true,\n                        bouncingBooks: JSON.parse(e.target.result)[0]\n                    })\n                    // let firstStep = JSON.parse(e.target.result)[0]\n                    // if (firstStep && firstStep.length !== 0) {\n                    //     firstStep.map(book => {\n                    //         if (book.location === 0) {\n                    //             // storage\n                    //         }\n                    //         if (book.location === 1) {\n                    //             // bookshelf\n                    //         }\n                    //     })\n                    // }\n                }\n                else {\n                    message.error(\"There is something wrong with your file. Please try again!\")\n                }\n            };\n        }\n    };\n\n    handleClickUpload = e => {\n        this.hiddenFileInput.current.click();\n    }\n\n    handleClickRecord = () => {\n        const storedSteps = getStoredSteps();\n        var currentStep = this.state.books;\n        if (JSON.stringify(storedSteps[storedSteps.length - 1]) === JSON.stringify(currentStep)) {\n            console.log(\"Duplicate step\")\n            message.error(\"Duplicate step\")\n        }\n        else {\n            console.log(\"Step added\");\n            message.success(\"Step added\")\n            storedSteps.push(currentStep);\n        }\n        const storedStepsJson = JSON.stringify(storedSteps);\n        localStorage.setItem('STORED_STEP_KEY', storedStepsJson);\n        this.setState({ steps: storedSteps });\n    }\n\n    handleClickPrevious() {\n        const fileContent = this.state.files;\n        if (fileContent && this.state.pointer > 0) {\n            this.setState((prevState) => ({\n                pointer: prevState.pointer - 1,\n                disableNext: false,\n                animationShow: false,\n                bouncingBooks: [],\n            }), function () {\n                this.setState({ books: fileContent[this.state.pointer] })\n                localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer]))\n                message.success(\"Previous clicked! You are at step \" + (this.state.pointer + 1))\n            });\n        }\n    }\n    // componentDidMount(){\n    //     console.log(\"didMount\")\n    // }\n    // componentWillMount() {\n    //     console.log(\"willMount\")\n    // }\n\n    handleFromUpdate(name, fromX, fromY) {\n        let flyingBooksCopy = this.state.flyingBooks\n        flyingBooksCopy.map(book => {\n            if (book.name === name) {\n                book.fromX = fromX\n                book.fromY = fromY\n            }\n        })\n        setTimeout(() => {\n            this.setState({ flyingBooks: flyingBooksCopy })\n        }, 1000)\n    }\n\n    handleToUpdate(name, toX, toY) {\n        let flyingBooksCopy = this.state.flyingBooks\n        flyingBooksCopy.map(book => {\n            if (book.name === name) {\n                book.toX = toX\n                book.toY = toY\n            }\n        })\n        setTimeout(() => {\n            this.setState({ flyingBooks: flyingBooksCopy })\n        }, 1000)\n    }\n\n    handleClickNext() {\n        const fileContent = this.state.files;\n        if (fileContent && this.state.pointer < fileContent.length - 1) {\n            let currStep = fileContent[this.state.pointer]\n            let nextStep = fileContent[this.state.pointer + 1]\n            let existingBook = []\n            // let bouncingBooks = []\n            for (let i = 0; i < currStep.length; i++) {\n                // compare existing book location\n                if (currStep[i].code === nextStep[i].code &&\n                    (currStep[i].level !== nextStep[i].level ||\n                        currStep[i].position !== nextStep[i].position ||\n                        currStep[i].bin !== nextStep[i].bin)) {\n                    // get fromX fromY, toX toY\n                    existingBook.push({\n                        'code': currStep[i].code,\n                        'name': currStep[i].name,\n                        'fromLevel': currStep[i].level,\n                        'fromPosition': currStep[i].position,\n                        'fromBin': currStep[i].bin,\n                        'toLevel': nextStep[i].level,\n                        'toPosition': nextStep[i].position,\n                        'toBin': nextStep[i].bin,\n                        'fromX': null,\n                        'fromY': null,\n                        'toX': null,\n                        'toY': null\n                    })\n                    this.setState({ bouncingBooks: [] })\n                    // bouncingBooks.push(currStep[i])\n                }\n            }\n\n            if (nextStep.length > currStep.length) {\n                // handling new added book\n                let newBook = []\n                for (let j = currStep.length; j < nextStep.length; j++) {\n                    newBook.push(nextStep[j])\n                    // bouncingBooks.push(nextStep[j])\n                }\n                this.setState({\n                    bouncingBooks: newBook,\n                    animationShow: true,\n                })\n            }\n\n\n            this.setState({\n                flyingBooks: existingBook,\n                animationShow: true\n            })\n\n            this.setState((prevState) => ({\n                pointer: prevState.pointer + 1,\n            }), function () {\n                this.setState({ books: fileContent[this.state.pointer] })\n                localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(fileContent[this.state.pointer]))\n                message.success(\"Next clicked! You are at step \" + (this.state.pointer + 1))\n            });\n        }\n        if (this.state.pointer >= fileContent.length - 2) {\n            this.setState((prevState) => ({\n                disableNext: !prevState.disableNext\n            }))\n        }\n    }\n\n    handleClickShowSteps() {\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn,\n            display: prevState.isToggleOn ? 'none' : 'block'\n        }));\n    }\n\n    handleInfiniteOnLoad = () => {\n        let { steps } = this.state;\n        this.setState({\n            loading: true,\n        });\n        if (steps.length > 15) {\n            message.warning('Infinite List loaded all');\n            this.setState({\n                hasMore: false,\n                loading: false,\n            });\n            return;\n        }\n    }\n    handleSelectChange(value) {\n        console.log(`selected ${value}`);\n        this.setState({ undoStep: value })\n    }\n\n    handleConfirm = () => {\n        if (this.state.undoStep !== null && this.state.undoStep > 1) {\n            this.setState({\n                steps: this.state.steps.slice(0, this.state.undoStep - 1),\n                books: this.state.steps[this.state.undoStep - 2]\n            })\n            localStorage.setItem('STORED_STEP_KEY', JSON.stringify(this.state.steps.slice(0, this.state.undoStep - 1)))\n            localStorage.setItem('STORED_BOOK_KEY', JSON.stringify(this.state.steps[this.state.undoStep - 2]))\n            message.success('Step ' + this.state.undoStep + ' and all the following steps have been removed. Now you can redo the recording from there.');\n        }\n        else if (this.state.undoStep === 1) {\n            this.setState({\n                steps: [],\n                books: []\n            })\n            localStorage.setItem('STORED_STEP_KEY', '[]')\n            localStorage.setItem('STORED_BOOK_KEY', '[]')\n        }\n        else {\n            message.error('Step value cannot be empty! Please try again to select a step.');\n        }\n\n    };\n\n    onChangeLevelInput = value => {\n        this.setState({\n            numOfShelfLevels: value,\n        });\n    };\n\n    onChangePositionInput = value => {\n        if (value === 4) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '165px',\n                bookcaseWidth: '475px',\n                bookstandMarginTop: '60px'\n            });\n        } else if (value === 5) {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '200px',\n                bookcaseWidth: '567px',\n                bookstandMarginTop: '90px',\n                bookstandMarginLeft: '3px',\n            });\n        } else {\n            this.setState({\n                numOfBooksPerLevel: value,\n                bookcaseHeight: '120px',\n                bookcaseWidth: '340px',\n                bookstandMarginTop: '30px',\n                bookstandMarginLeft: '5px',\n            });\n        }\n    };\n    handleFaultsIncrement = () => {\n        localStorage.setItem('STORED_FAULTS_KEY', this.state.pageFaults + 1);\n        this.setState((prevState) => ({\n            pageFaults: prevState.pageFaults + 1,\n        }))\n    };\n\n    hideConfig = () => {\n        this.setState({\n            configVisible: false,\n        });\n    };\n\n    handleConfigVisibleChange = configVisible => {\n        this.setState({ configVisible });\n    };\n\n    render() {\n        const role = this.props.role;\n        const { Option } = Select;\n\n        return (\n            <div className=\"main\" >\n                <Container fluid=\"xxl\">\n                    <Row>\n                        <Col>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickPrevious}\n                                disabled={this.state.pointer === 0 ? true : false}>\n                                Previous\n                            </Button>\n                            <Button type=\"primary\"\n                                onClick={this.handleClickUpload}>\n                                Upload Json\n                            </Button>\n                            <input type=\"file\"\n                                ref={this.hiddenFileInput}\n                                onChange={this.handleUpload}\n                                style={{ display: 'none' }}\n                            />\n                            <Button type=\"primary\"\n                                onClick={this.handleClickNext}\n                                disabled={this.state.disableNext}>\n                                Next\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                type=\"primary\"\n                                href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                                    JSON.stringify(this.state.steps)\n                                    // JSON.stringify(JSON.parse(localStorage.getItem(`STORED_STEP_KEY`)))\n                                )}`}\n                                download=\"steps.json\"\n                            >\n                                Download Json\n                            </Button>\n                            <Tooltip placement=\"bottom\" title=\"Have any confusion? Check user manual from overview button.\">\n                                <Button type=\"primary\" onClick={this.handleClickRecord}>Record Step</Button>\n                            </Tooltip>\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_STEP_KEY\", \"[]\");\n                                this.setState({ steps: [], files: \"\", pointer: 0 })\n                            }}>Clear all Steps</Button>\n                        </Col>\n                        <Col>\n                            {/* Reset Library */}\n                            <Button type=\"primary\" onClick={() => {\n                                localStorage.setItem(\"STORED_BOOK_KEY\", \"[]\");\n                                localStorage.setItem(\"STORED_FAULTS_KEY\", 0);\n                                this.setState({\n                                    books: [],\n                                    pageFaults: 0,\n                                });\n                                // this.setState({catalogShow: true})\n                                this.props.handleRoleChange(\"Student\");\n                            }}>Reset Library</Button>\n                            <Button type=\"primary\" onClick={this.handleClickShowSteps}>\n                                {this.state.isToggleOn ? 'Hide Steps Info' : 'Show Steps Info'}\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 6, offset: 3 }}>\n                            <Select placeholder=\"Select a step\" style={{ width: 120 }} onChange={this.handleSelectChange}>\n                                {this.state.steps.map(step => (\n                                    <Option value={this.state.steps.indexOf(step) + 1}>{this.state.steps.indexOf(step) + 1}</Option>\n                                ))}\n                            </Select>\n                            <Popconfirm\n                                title={\"Are you sure to undo step \" + this.state.undoStep + \" and all the following steps?\"}\n                                onConfirm={this.handleConfirm}\n                                okText=\"Yes\"\n                                cancelText=\"No\">\n                                <Button>Undo</Button>\n                            </Popconfirm>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h5 className=\"computer-title\"><strong>Catalog Computer</strong></h5>\n                            <div className={(role === \"Librarian\") ? \"wrapper\" : \"\"}>\n                                <div className={(role === \"Librarian\") ? \"is-disabled\" : \"\"}>\n                                    <div className=\"search-monitor\">\n                                        <div className=\"search-container\">\n                                            <Row>\n                                                Please Search for any Book\n                                            </Row>\n                                            <Row>\n                                                <div className=\"form-inline mt-4 mb-4\" >\n                                                    <input className=\"form-control-sm\" type=\"text\" placeholder=\"Find a Book\" aria-label=\"Search\"\n                                                        value={this.state.query}\n                                                        onClick={event => {\n                                                            message.info(\"You can enter any book you want\")\n                                                        }}\n                                                        onChange={event => this.setState({ query: event.target.value })}\n                                                        onKeyPress={event => {\n                                                            if (event.key === 'Enter') {\n                                                                this.handleClickSearch()\n                                                            }\n                                                        }} />\n                                                    <Button type=\"primary\" onClick={this.handleClickSearch}>Search</Button>\n                                                </div>\n                                            </Row>\n                                            <Row>\n                                                <strong>Catalog Card</strong>\n                                            </Row>\n                                            <Row>\n                                                <Catalog\n                                                    query={this.state.value}\n                                                    show={this.state.catalogShow}\n                                                    onHide={this.catalogClose}\n                                                    numOfBins={this.state.numOfBins}\n                                                    handleRoleChange={this.props.handleRoleChange}\n                                                />\n                                            </Row>\n                                            <Row>\n                                                <div className=\"bubble bubble-bottom-left\" style={{ display: this.state.displayToLibrarianDialog }}>\n                                                    <p>Sorry, the book is not available now. You need to wait for librarian to retrieve the book from storage.</p>\n                                                    <Button onClick={this.handleToLibrarian}>Transfer role as Librarian</Button>\n                                                </div>\n                                                <div className=\"bubble bubble-bottom-left\" style={{ display: this.state.displayNoticeDialog }}>\n                                                    <p>The book is available now! You can retrieve the book based on the catalog card.</p>\n                                                    <Button onClick={this.handleFinishDialog}>Got it!</Button>\n                                                </div>\n                                            </Row>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pageFaults\">\n                                    <Card\n                                        style={{\n                                            width: 320,\n                                            height: 115,\n                                            marginTop: 25,\n                                            textAlign: 'center'\n                                        }}>\n                                        <Statistic\n                                            title=\"Page Faults\"\n                                            value={this.state.pageFaults}\n                                            valueStyle={{ color: '#cf1322' }}\n                                        />\n                                    </Card>\n                                </div>\n                            </div>\n                        </Col>\n                        <DndProvider backend={HTML5Backend}>\n                            <Col className=\"bookshelf-view\">\n                                <h5 className=\"computer-title\">\n                                    <strong>Bookshelf</strong>\n                                    <Popover\n                                        content={\n                                            <div>\n                                                <p><strong>Number of levels:</strong>  <InputNumber min={1} max={8} value={this.state.numOfShelfLevels} onChange={this.onChangeLevelInput} /> (Range: 1~8)</p>\n                                                <p><strong>Number of positions per level:</strong> <InputNumber min={3} max={5} value={this.state.numOfBooksPerLevel} onChange={this.onChangePositionInput} /> (Range: 3~5)</p>\n                                                <a onClick={this.hideConfig} className=\"closeButton\">Close</a>\n                                            </div>\n                                        }\n                                        placement=\"right\"\n                                        title=\"Bookshelf Control Panel\"\n                                        trigger=\"click\"\n                                        visible={this.state.configVisible}\n                                        onVisibleChange={this.handleConfigVisibleChange}\n                                    >\n                                        <a className=\"configButton\">Build Your Own</a>\n                                    </Popover>\n                                </h5>\n                                <div>\n                                    <Bookshelf\n                                        numOfLevels={this.state.numOfShelfLevels}\n                                        numOfBooksPerLevel={this.state.numOfBooksPerLevel}\n                                        bookcaseHeight={this.state.bookcaseHeight}\n                                        bookcaseWidth={this.state.bookcaseWidth}\n                                        bookstandMarginTop={this.state.bookstandMarginTop}\n                                        bookstandMarginLeft={this.state.bookstandMarginLeft}\n                                        books={this.state.books}\n                                        dragHandler={this.dragHandler.bind(this)}\n                                        dbclick={this.dbclick()}\n                                        animationShow={this.state.animationShow}\n                                        bouncingBooks={this.state.bouncingBooks}\n                                        flyingBooks={this.state.flyingBooks}\n                                        handleFromUpdate={this.handleFromUpdate.bind(this)}\n                                        handleToUpdate={this.handleToUpdate.bind(this)}\n                                    />\n                                </div>\n                            </Col>\n                            <Col className=\"storage-view\">\n\n                                <Row>\n                                    <div className=\"bubble bubble-bottom-left\" style={{ display: this.state.displayMoveBookDialog }}>\n                                        <p>Your role is librarian now! Please move {this.state.query} from bin {this.state.targetBookBinNumber}  to bookshelf.</p>\n                                        <Popconfirm\n                                            title={\"Have you moved this book from storage to bookshelf?\"}\n                                            onConfirm={this.handleToStudent}\n                                            okText=\"Yes\"\n                                            cancelText=\"No\">\n                                            <Button>Notice Available</Button>\n                                        </Popconfirm>\n                                    </div>\n                                </Row>\n                                <Row>\n                                    <div className={(role === \"Student\") ? \"wrapper\" : \"\"}>\n                                        <div className={(role === \"Student\") ? \"is-disabled\" : \"\"}>\n                                            <Storage\n                                                books={this.state.books}\n                                                numOfBins={this.state.numOfBins}\n                                                dragHandler={this.dragHandler.bind(this)}\n                                                animationShow={this.state.animationShow}\n                                                bouncingBooks={this.state.bouncingBooks}\n                                                flyingBooks={this.state.flyingBooks}\n                                                handleFromUpdate={this.handleFromUpdate.bind(this)}\n                                                handleToUpdate={this.handleToUpdate.bind(this)}\n                                            />\n                                        </div>\n                                    </div>\n                                </Row>\n                            </Col>\n                        </DndProvider>\n                        <Col style={{ display: this.state.display }}>\n                            <h5 className=\"computer-title\"><strong>Steps Info</strong></h5>\n                            <div className=\"demo-infinite-container\">\n                                <InfiniteScroll\n                                    initialLoad={false}\n                                    pageStart={0}\n                                    loadMore={this.handleInfiniteOnLoad}\n                                    hasMore={!this.state.loading && this.state.hasMore}\n                                    useWindow={false}\n                                >\n                                    <List\n                                        dataSource={this.state.steps}\n                                        bordered\n                                        renderItem={step => (\n                                            // <Card title={step.id}>\n                                            <List.Item key={step.id}>\n                                                <h5>Step {this.state.steps.indexOf(step) + 1}: </h5>\n                                                {step.map(book => (\n                                                    <p><strong>{book.name}</strong> {(book.location === 0 ? \"storage: bin\" + book.bin : \"bookshelf: level\" + book.level + \"; position\" + book.position)}</p>\n                                                ))}\n                                            </List.Item>\n                                            // </Card>\n                                        )} />\n                                </InfiniteScroll>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div >\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport { Drawer } from 'antd';\nimport \"./App.css\";\n\nclass App extends React.Component {\n\n  state = {\n    role: \"Student\",\n    visible: false\n  };\n\n  handleValueChange = (e) => {\n    console.log('role button checked', e.target.value);\n    this.setState({ role: e.target.value })\n  }\n\n  handleRoleChange(role) {\n    this.setState({ role: role })\n  }\n\n  clickOverview = (e) => {\n    // console.log('overview button clicked', e.target.value);\n    this.showDrawer();\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header role={this.state.role} onChange={this.handleValueChange.bind(this)} clickOverview={this.clickOverview.bind(this)} />\n        <Drawer\n          title=\"Introduction\"\n          placement=\"right\"\n          width=\"600px\"\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}\n        >\n          <h5>Memory Paging vs. Library Analogy</h5>\n          <ul>\n            <li>A <strong>page</strong> is a <strong>book</strong> on the bookshelf.</li>\n            <li><strong>Virtual memory</strong> is the <strong>catelog computer</strong> with list of names of books available.</li>\n            <li><strong>Physical memory</strong> is the <strong>bookshelf</strong> with level numbers and position numbers as 'addresses'.</li>\n            <li><strong>Swap space</strong> is the basement <strong>book storage</strong> where unpopular books are kept.</li>\n            <li><strong>Page table</strong> is the <strong>catalog card</strong> that maps a book name to level number and position number.</li>\n            <li><strong>Operating system</strong> is the <strong>librarian</strong> in charge of organizing the books.</li>\n          </ul>\n\n          <h5>Bookshelf Function Instruction (For each book)</h5>\n          <ul>\n            <li>Mouse over 2 seconds for the book details.</li>\n            <li>Double click for retriving the book.</li>\n            <li>The red badge at the corner indicates its retrieve frequency.</li>\n          </ul>\n\n          <h5>Record Series Buttons Function</h5>\n          <ul>\n            <li><strong>Record Step: </strong>Record current books in the library.</li>\n            <li><strong>Clear all Steps: </strong>Clear all recorded steps.</li>\n            <li><strong>Download Json: </strong>Download all recorded steps as Json file.</li>\n            <li><strong>Upload Json: </strong>Upload downloaded Json file or formatted Json file with steps and show with initial step.</li>\n            <li><strong>Next: </strong>Go to the next step in uploaded Json file.</li>\n            <li><strong>Previous: </strong>Go to the previous step in uploaded Json file.</li>\n          </ul>\n\n          <h5>Record Buttons User Manual</h5>\n          <ul>\n            <li>Recording process:</li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Record Step\" button after any actions or movement until you are satisfied with books in current library.</li>\n              <li><strong>Adanced Step:</strong> Click on the dropdown menu from \"Undo\" button and select the specific step you want to erase and redo recording process following step 1.</li>\n              <li><strong>Step 2:</strong> Click on \"Download Json\" button to export the Json file with all steps you recorded recently.</li>\n            </ul>\n            <br />\n            <li>Uploading and display process: </li>\n            <ul>\n              <li><strong>Step 1:</strong> Click on \"Upload Json\" button to import the downloaded Json file and books from the first step would appear on screen as default.</li>\n              <li><strong>Step 2:</strong> Display books from Json file step by step.</li>\n              <ul>\n                <li><strong>Step 2.1:</strong> Click on \"next\" button to display books from the next step.</li>\n                <li><strong>Step 2.2:</strong> Click on \"previous\" button to display books from the previous step.</li>\n              </ul>\n            </ul>\n\n          </ul>\n        </Drawer>\n        <Main role={this.state.role} handleRoleChange={this.handleRoleChange.bind(this)} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}